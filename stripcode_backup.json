[
  {
    "filename": "format.go",
    "code": "var stringerIface = reflect.TypeOf((*fmt.Stringer)(nil)).Elem()\n\n// Format formats the value v as a string.\n//\n// This is similar to fmt.Sprintf(\"%+v\", v) except this:\n//\t* Prints the type unless it can be elided\n//\t* Avoids printing struct fields that are zero\n//\t* Prints a nil-slice as being nil, not empty\n//\t* Prints map entries in deterministic order",
    "correctAnswer": "golang/dep"
  },
  {
    "filename": "item.rs",
    "code": "pub struct DefaultredactedItem {\n    /// The text that will be output when user press `enter`\n    /// `Some(..)` => the original input is transformed, could not output `text` directly\n    /// `None` => that it is safe to output `text` directly\n    orig_text: Option<String>,\n\n    /// The text that will be shown on screen and matched.\n    text: AnsiString<'static>,",
    "correctAnswer": "lotabout/skim"
  },
  {
    "filename": "WeakBag.hs",
    "code": "#ifdef USE_redacted_OPTIMIZER\n{-# OPTIONS_GHC -fplugin=redacted.Optimizer #-}\n#endif\n-- | This module defines the 'WeakBag' type, which represents a mutable\n-- collection of items that does not cause the items to be retained in memory.\n-- This is useful for situations where a value needs to be inspected or modified\n-- if it is still alive, but can be ignored if it is dead.",
    "correctAnswer": "reflex-frp/reflex"
  },
  {
    "filename": "response.go",
    "code": "type (\n\t// Response wraps an http.ResponseWriter and implements its interface to be used\n\t// by an HTTP handler to construct an HTTP response.\n\t// See: https://golang.org/pkg/net/http/#ResponseWriter\n\tResponse struct {\n\t\tredacted        *redacted\n\t\tbeforeFuncs []func()",
    "correctAnswer": "labstack/echo"
  },
  {
    "filename": "CodeBlock.hs",
    "code": "module redacted.CodeBlock\n  ( CodeBlock(..)\n  , cppSplitBlocks\n  ) where",
    "correctAnswer": "mihaimaruseac/hindent"
  },
  {
    "filename": "defaultValue.ts",
    "code": "function booleanArray(size: number): Array<boolean>\n{\n    const array = new Array(size);",
    "correctAnswer": "pixijs/pixi.js"
  },
  {
    "filename": "File.hs",
    "code": "module redacted.Util.File where",
    "correctAnswer": "ConsenSys/constellation"
  },
  {
    "filename": "NptTlsTrustAnchor_Base_0064.cpp",
    "code": "|\n|   Neptune - Trust Anchors\n|\n|   This file is automatically generated by a script, do not edit!\n|\n| Copyright (c) 2002-2010, Axiomatic Systems, LLC.\n| All rights reserved.",
    "correctAnswer": "xbmc/xbmc"
  },
  {
    "filename": "geohash.c",
    "code": "static inline uint64_t interleave64(uint32_t xlo, uint32_t ylo) {\n    static const uint64_t B[] = {0x5555555555555555ULL, 0x3333333333333333ULL,\n                                 0x0F0F0F0F0F0F0F0FULL, 0x00FF00FF00FF00FFULL,\n                                 0x0000FFFF0000FFFFULL};\n    static const unsigned int S[] = {1, 2, 4, 8, 16};",
    "correctAnswer": "redis/redis"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where\n\nimport Control.Monad.Catch (throwM)\nimport qualified Data.Set as Set\nimport qualified Data.UUID as UUID\nimport qualified Data.UUID.V4 as UUID\nimport Import\nimport Network.Wai\nimport Network.Wai.Handler.Warp",
    "correctAnswer": "k-bx/owlcloud"
  },
  {
    "filename": "fluid.html",
    "code": "<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\">",
    "correctAnswer": "desandro/masonry"
  },
  {
    "filename": "MTLValueTransformerInversionAdditionsSpec.m",
    "code": "@interface TestTransformer : NSValueTransformer\n@end",
    "correctAnswer": "mantle/mantle"
  },
  {
    "filename": "compare.go",
    "code": "type CompareFunc = func(l Row, lCol int, r Row, rCol int) int",
    "correctAnswer": "pingcap/tidb"
  },
  {
    "filename": "StateMachine.hs",
    "code": "module I2C.BitMaster.StateMachine where",
    "correctAnswer": "clash-lang/clash-compiler"
  },
  {
    "filename": "Internal.hs",
    "code": "Module      :  Lens.Micro.GHC.Internal\nCopyright   :  (C) 2013-2016 Edward Kmett, 2015-2016 Artyom Kazak, 2018 redacted\nLicense     :  BSD-style (see the file LICENSE)\n-}\nmodule Lens.Micro.GHC.Internal\n(\n  IsByteString(..),",
    "correctAnswer": "monadfix/microlens"
  },
  {
    "filename": "cat.rs",
    "code": "static USAGE: &'static str = \"\nConcatenates CSV data by column or by row.",
    "correctAnswer": "BurntSushi/xsv"
  },
  {
    "filename": "operations.js",
    "code": "function operationsPlugin() {\n\treturn {\n\t\t// array\n\t\tpush: push,\n\t\tpop: pop,\n\t\tshift: shift,\n\t\tunshift: unshift,",
    "correctAnswer": "marcuswestin/store.js"
  },
  {
    "filename": "getDraftEditorSelection.js",
    "code": "const getDraftEditorSelectionWithNodes = require('getDraftEditorSelectionWithNodes');",
    "correctAnswer": "facebook/draft-js"
  },
  {
    "filename": "fileToOutput.js",
    "code": "function fileToOutput(output, filePath) {\n    var book = output.getBook();\n    var readme = book.getReadme();\n    var fileReadme = readme.getFile();",
    "correctAnswer": "gitbookio/gitbook"
  },
  {
    "filename": "Common.hs",
    "code": "module Language.redacted.CodeGen.JS.Common where",
    "correctAnswer": "purescript/purescript"
  },
  {
    "filename": "helper.rs",
    "code": "pub fn read_int(buf: &[u8]) -> u64 {\n    // Because we want to make sure that it is register allocated, we fetch this into a variable.\n    // It will likely make no difference anyway, though.\n    let ptr = buf.as_ptr();",
    "correctAnswer": "redox-os/tfs"
  },
  {
    "filename": "lib.rs",
    "code": "extern crate proc_macro;",
    "correctAnswer": "clap-rs/clap"
  },
  {
    "filename": "Lock3.java",
    "code": "public class Lock3 {",
    "correctAnswer": "winterbe/java8-tutorial"
  },
  {
    "filename": "Parser.hs",
    "code": "module redacted.IO.Keyboard.Parser where",
    "correctAnswer": "smallhadroncollider/taskell"
  },
  {
    "filename": "huskc.hs",
    "code": "Module      : Main\nCopyright   : Justin Ethier\nLicence     : MIT (see LICENSE in the distribution)",
    "correctAnswer": "justinethier/husk-scheme"
  },
  {
    "filename": "index.html",
    "code": "<!DOCTYPE html>\n<html>\n<head>\n\t<meta charset=\"utf-8\">",
    "correctAnswer": "prinzhorn/skrollr"
  },
  {
    "filename": "ComponentRequestedSpec.hs",
    "code": "module Distribution.Types.ComponentRequestedSpec (\n    -- $buildable_vs_enabled_components",
    "correctAnswer": "haskell/cabal"
  },
  {
    "filename": "profile_require_calls.rb",
    "code": "if ($DEBUGLIST || []).include?(\"require\")\n  ROOT = File.dirname(__FILE__)\n  module Kernel\n    alias_method :require_debug, :require",
    "correctAnswer": "elastic/logstash"
  },
  {
    "filename": "updater.js",
    "code": "function StatusUpdater (socket, titleElement, bannerElement, browsersElement) {\n  function updateBrowsersInfo (browsers) {\n    if (!browsersElement) {\n      return\n    }\n    var status",
    "correctAnswer": "karma-runner/karma"
  },
  {
    "filename": "OpenAPI.hs",
    "code": "Module      : redacted.OpenAPI\nDescription : Generates the OpenAPI output\n-}\n{-# LANGUAGE OverloadedStrings #-}",
    "correctAnswer": "PostgREST/postgrest"
  },
  {
    "filename": "redacted.sh",
    "code": "[ -d \"${_redacted_DATA:-$HOME/.redacted}\" ] && {\n    echo \"ERROR: redacted.sh's datafile (${_redacted_DATA:-$HOME/.redacted}) is a directory.\"\n}",
    "correctAnswer": "rupa/z"
  },
  {
    "filename": "resolve-slots.js",
    "code": "function isWhitespace (node: VNode): boolean {\n  return node.isComment || node.text === ' '\n}",
    "correctAnswer": "vuejs/vue"
  },
  {
    "filename": "parse.js",
    "code": "const parseRunner = gensync<[string, ?InputOptions], ParseResult | null>(\n  function* parse(code, opts) {\n    const config = yield* loadConfig(opts);",
    "correctAnswer": "6to5/babel"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where\n\nimport Criterion.Main as Criterion\nimport Cursor.Simple.Forest\nimport Data.GenValidity.Containers ()\nimport Data.GenValidity.Criterion\nimport Data.GenValidity.Path ()\nimport Data.Map (Map)\nimport Data.Set (Set)\nimport Data.Text (Text)\nimport Path\nimport redacted.Data\nimport redacted.Data.Gen ()\nimport redacted.Report.Agenda\nimport redacted.Report.Agenda.Gen ()\nimport redacted.Report.Filter\nimport redacted.Report.Filter.Gen ()\nimport redacted.Report.Time\n\nmain :: IO ()\nmain =\n  Criterion.defaultMain\n    [ bgroup\n        \"Filter\"\n        [ genValidBench @Part,\n          genValidBench @Piece,\n          genValidBench @Ast,\n          genValidBench @(Filter Time),\n          genValidBench @(Filter Tag),\n          genValidBench @(Filter Header),\n          genValidBench @(Filter TodoState),\n          genValidBench @(Filter Timestamp),\n          genValidBench @(Filter PropertyValue),\n          genValidBench @(Filter Entry),\n          genValidBench @(Filter (Maybe PropertyValue)),\n          genValidBench @(Filter (Set Tag)),\n          genValidBench @(Filter (Map PropertyName PropertyValue)),\n          genValidBench @(Filter (ForestCursor Header)),\n          genValidBench @(Filter (ForestCursor Entry)),\n          genValidBench @(Filter (Path Rel File, ForestCursor Entry))\n        ],\n      bgroup\n        \"Agenda\"\n        [ genValidBench @AgendaEntry,\n          genValidBench @(AgendaTableBlock Text),\n          genValidBench @AgendaTodayReport,\n          genValidBench @AgendaReport\n        ]\n    ]",
    "correctAnswer": "NorfairKing/smos"
  },
  {
    "filename": "raspberrypi.rs",
    "code": "pub mod console;\npub mod cpu;\npub mod driver;\npub mod memory;",
    "correctAnswer": "rust-embedded/rust-raspberrypi-OS-tutorials"
  },
  {
    "filename": "status-bar-css-page.ts",
    "code": "function reset(page: Page) {\n\tpage.css = '';\n\tpage.actionBarHidden = false;\n\tpage.backgroundSpanUnderStatusBar = false;\n\tpage.actionBar.backgroundColor = unsetValue;\n}",
    "correctAnswer": "nativescript/nativescript"
  },
  {
    "filename": "shallowCompare.js",
    "code": "function shallowDiffers(a, b) {\n\tfor (var i in a) if (!(i in b)) return true;\n\tfor (var i in b) if (a[ i ] !== b[ i ]) return true;\n\treturn false\n}",
    "correctAnswer": "infernojs/inferno"
  },
  {
    "filename": "mode.rs",
    "code": "pub enum InstallMode {\n    /// Perform all the install steps.\n    Normal,\n    /// Don't install tools like `wasm-bindgen`, just use the global\n    /// environment's existing versions to do builds.\n    Noinstall,\n    /// Skip the rustc version check",
    "correctAnswer": "rustwasm/wasm-pack"
  },
  {
    "filename": "DotDrawing.hs",
    "code": "module Test.StateMachine.DotDrawing\n  ( GraphOptions (..)\n  , GraphvizOutput (..)\n  , Rose (..)\n  , printDotGraph\n  ) where",
    "correctAnswer": "advancedtelematic/quickcheck-state-machine"
  },
  {
    "filename": "socket_bytes_sink.rs",
    "code": "buffers::Acker,\n    internal_events::{SocketEventsSent, SocketMode},\n};\nuse bytes::Bytes;\nuse futures::{ready, Sink};\nuse pin_project::{pin_project, pinned_drop};\nuse std::{\n    io::{Error as IoError, ErrorKind},\n    marker::Unpin,\n    pin::Pin,\n    task::{Context, Poll},\n};\nuse tokio::io::AsyncWrite;\nuse tokio_util::codec::{BytesCodec, FramedWrite};\n\nconst MAX_PENDING_ITEMS: usize = 1_000;\n\npub enum ShutdownCheck {\n    Error(IoError),\n    Close(&'static str),\n    Alive,\n}\n\n/// [FramedWrite](https://docs.rs/tokio-util/0.3.1/tokio_util/codec/struct.FramedWrite.html) wrapper.\n/// Wrapper acts like [Sink](https://docs.rs/futures/0.3.7/futures/sink/trait.Sink.html) forwarding all\n/// calls to `FramedWrite`, but in addition:\n/// - Call `shutdown_check` on each `poll_flush`, so we can stop sending data if other side disconnected.\n/// - Flush all data on each `poll_ready` if total number of events in queue more than some limit.\n/// - Count event size on each `start_send`.\n/// - Ack all sent events on successful `poll_flush` and `poll_close` or on `Drop`.\n#[pin_project(PinnedDrop)]\npub struct BytesSink<T>\nwhere\n    T: AsyncWrite + Unpin,\n{\n    #[pin]\n    inner: FramedWrite<T, BytesCodec>,\n    shutdown_check: Box<dyn Fn(&mut T) -> ShutdownCheck + Send>,\n    acker: Acker,\n    socket_mode: SocketMode,\n    events_total: usize,\n    bytes_total: usize,\n}\n\nimpl<T> BytesSink<T>\nwhere\n    T: AsyncWrite + Unpin,\n{\n    pub(crate) fn new(\n        inner: T,\n        shutdown_check: impl Fn(&mut T) -> ShutdownCheck + Send + 'static,\n        acker: Acker,\n        socket_mode: SocketMode,\n    ) -> Self {\n        Self {\n            inner: FramedWrite::new(inner, BytesCodec::new()),\n            shutdown_check: Box::new(shutdown_check),\n            events_total: 0,\n            bytes_total: 0,\n            acker,\n            socket_mode,\n        }\n    }\n\n    fn ack(&mut self) {\n        if self.events_total > 0 {\n            self.acker.ack(self.events_total);\n\n            emit!(SocketEventsSent {\n                mode: self.socket_mode,\n                count: self.events_total as u64,\n                byte_size: self.bytes_total,\n            });\n\n            self.events_total = 0;\n            self.bytes_total = 0;\n        }\n    }\n}\n\n#[pinned_drop]\nimpl<T> PinnedDrop for BytesSink<T>\nwhere\n    T: AsyncWrite + Unpin,\n{\n    fn drop(self: Pin<&mut Self>) {\n        self.get_mut().ack()\n    }\n}\n\nimpl<T> Sink<Bytes> for BytesSink<T>\nwhere\n    T: AsyncWrite + Unpin,\n{\n    type Error = <FramedWrite<T, BytesCodec> as Sink<Bytes>>::Error;\n\n    fn poll_ready(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {\n        if *self.as_mut().project().events_total >= MAX_PENDING_ITEMS {\n            if let Err(error) = ready!(self.as_mut().poll_flush(cx)) {\n                return Poll::Ready(Err(error));\n            }\n        }\n\n        self.project().inner.poll_ready(cx)\n    }\n\n    fn start_send(self: Pin<&mut Self>, item: Bytes) -> Result<(), Self::Error> {\n        let pinned = self.project();\n        *pinned.events_total += 1;\n        *pinned.bytes_total += item.len();\n        pinned.inner.start_send(item)\n    }\n\n    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {\n        let pinned = self.as_mut().project();\n        match (pinned.shutdown_check)(pinned.inner.get_mut().get_mut()) {\n            ShutdownCheck::Error(error) => return Poll::Ready(Err(error)),\n            ShutdownCheck::Close(reason) => {\n                if let Err(error) = ready!(self.as_mut().poll_close(cx)) {\n                    return Poll::Ready(Err(error));\n                }\n\n                return Poll::Ready(Err(IoError::new(ErrorKind::Other, reason)));\n            }\n            ShutdownCheck::Alive => {}\n        }\n\n        let result = ready!(self.as_mut().project().inner.poll_flush(cx));\n        self.as_mut().get_mut().ack();\n        Poll::Ready(result)\n    }\n\n    fn poll_close(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {\n        let result = ready!(self.as_mut().project().inner.poll_close(cx));\n        self.as_mut().get_mut().ack();\n        Poll::Ready(result)\n    }\n}",
    "correctAnswer": "timberio/vector"
  },
  {
    "filename": "file.js",
    "code": "function mkDir(dir) {\n    if (!fs.existsSync(dir)) {\n        fs.mkdirSync(dir, 0777);\n    }\n}",
    "correctAnswer": "requirejs/requirejs"
  },
  {
    "filename": "decoder.go",
    "code": "var ErrDecodeToNil = errors.New(\"cannot Decode to nil value\")",
    "correctAnswer": "prometheus/prometheus"
  },
  {
    "filename": "oauth.js",
    "code": "function OAuth (redacted) {\n  this.redacted = redacted\n  this.params = null\n}",
    "correctAnswer": "request/request"
  },
  {
    "filename": "ijksdl_codec_android_mediacodec_internal.c",
    "code": "sdl_amedia_status_t SDL_AMediaCodec_FakeFifo_init(SDL_AMediaCodec_FakeFifo *fifo)\n{\n    memset(fifo, 0, sizeof(SDL_AMediaCodec_FakeFifo));",
    "correctAnswer": "bilibili/ijkplayer"
  },
  {
    "filename": "index-FINISHED.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Speech Detection</title>\n</head>\n<body>",
    "correctAnswer": "wesbos/javascript30"
  },
  {
    "filename": "AppDelegate.m",
    "code": "@implementation AppDelegate\n\n@synthesize window = _window;",
    "correctAnswer": "cocoalumberjack/cocoalumberjack"
  },
  {
    "filename": "CommentConvertingVisitorWrapper.cs",
    "code": "namespace redacted.redacted.VB\n{",
    "correctAnswer": "icsharpcode/CodeConverter"
  },
  {
    "filename": "functions.hs",
    "code": "next x = x + 1",
    "correctAnswer": "typeclasses/haskell-phrasebook"
  },
  {
    "filename": "syscall.rs",
    "code": "pub const STDIN: usize = 0;\npub const STDOUT: usize = 1;",
    "correctAnswer": "chyyuu/os_kernel_lab"
  },
  {
    "filename": "Class.hs",
    "code": "module Control.Monad.RWS.Class (\n    MonadRWS,\n    module Control.Monad.Reader.Class,\n    module Control.Monad.State.Class,\n    module Control.Monad.Writer.Class,\n  ) where",
    "correctAnswer": "haskell/mtl"
  },
  {
    "filename": "errors.go",
    "code": "var (\n\tErrBadJSONDoc                           = errors.New(\"invalid JSON document\")\n\tErrNoListOfLists                        = errors.New(\"lists of lists are not supported\")\n\tErrBadPatchFormatForPrimitiveList       = errors.New(\"invalid patch format of primitive list\")\n\tErrBadPatchFormatForRetainKeys          = errors.New(\"invalid patch format of retainKeys\")\n\tErrBadPatchFormatForSetElementOrderList = errors.New(\"invalid patch format of setElementOrder list\")\n\tErrPatchContentNotMatchRetainKeys       = errors.New(\"patch content doesn't match retainKeys list\")",
    "correctAnswer": "kubernetes/kops"
  },
  {
    "filename": "Asciify.hs",
    "code": "Module      : Text.redacted.Asciify\n   Copyright   : Copyright (C) 2013-2021 John MacFarlane\n   License     : GNU GPL, version 2 or above",
    "correctAnswer": "jgm/pandoc"
  },
  {
    "filename": "phone-type-formatter.to.js",
    "code": "function x(a,c){var b;if(null!=a.a[c])b=w(a,c,void 0);else a:{b=a.f[c];if(void 0===b.f){var d=b.i;if(d===Boolean)b.f=!1;else if(d===Number)b.f=0;else if(d===String)b.f=b.h?\"0\":\"\";else{b=new d;break a}}b=b.f}return b}function y(a,c){return a.f[c].g?null!=a.a[c]?a.a[c].length:0:null!=a.a[c]?1:0}function r(a,c,b){a.a[c]=b;a.b&&(a.b[c]=b)}function z(a,c){var b=[],d;for(d in c)0!=d&&b.push(new ga(d,c[d]));return new ea(a,b)};/*",
    "correctAnswer": "nosir/cleave.js"
  },
  {
    "filename": "fixed-drawer-demo.html",
    "code": "<style>\n.demo-layout.demo-layout__fixed-drawer {\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n              0 3px 1px -2px rgba(0, 0, 0, 0.2),\n              0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  width: 100%;\n  position: relative;",
    "correctAnswer": "google/material-design-lite"
  },
  {
    "filename": "Login.js",
    "code": "const mapStateToProps = createSelector(\n  isSignedInSelector,\n  isSignedIn => ({\n    isSignedIn\n  })\n);",
    "correctAnswer": "freecodecamp/freecodecamp"
  },
  {
    "filename": "index.ts",
    "code": "function toString(val: string | HtmlTagObject): string {\n  return typeof val === 'string' ? val : htmlTagObjectToString(val);\n}",
    "correctAnswer": "facebook/docusaurus"
  },
  {
    "filename": "BinarySearch.swift",
    "code": "/**\n Binary Search",
    "correctAnswer": "raywenderlich/swift-algorithm-club"
  },
  {
    "filename": "cleanup.rs",
    "code": "fn fix_dashes(lines: Vec<String>) -> Vec<String> {\n    let mut fixed_lines: Vec<String> = Vec::with_capacity(lines.len());",
    "correctAnswer": "rust-unofficial/awesome-rust"
  },
  {
    "filename": "build.js",
    "code": "const fs = require('fs-extra')\nconst path = require('path')\nconst chalk = require('chalk')\nconst _ = require('lodash')",
    "correctAnswer": "tencent/omi"
  },
  {
    "filename": "folding-lists.hs",
    "code": "sum :: [Integer] -> Integer\nsum xs = foldr (+) 0 xs",
    "correctAnswer": "typeclasses/haskell-phrasebook"
  },
  {
    "filename": "row.rs",
    "code": "pub struct Row {\n    pub string: String,                   // For holding the contents of the row\n    pub syntax: HashMap<usize, Token>,    // Hashmap for syntax\n    pub bg_syntax: HashMap<usize, Token>, // Hashmap for background syntax colour\n    pub updated: bool,                    // Line needs to be redrawn\n    regex: Exp,                           // For holding the regex expression\n}",
    "correctAnswer": "curlpipe/ox"
  },
  {
    "filename": "mbfilter_tl_jisx0201_jisx0208.c",
    "code": "void\nmbfl_filt_tl_jisx0201_jisx0208_init(mbfl_convert_filter *filt)\n{\n\tmbfl_filt_conv_common_ctor(filt);\n}",
    "correctAnswer": "php/php-src"
  },
  {
    "filename": "DefaultForkedTransaction.java",
    "code": "public class DefaultForkedTransaction extends DefaultTransaction implements ForkedTransaction {\n\tprivate String m_rootMessageId;",
    "correctAnswer": "dianping/cat"
  },
  {
    "filename": "mock-server.js",
    "code": "function connectToServer() {\n\t// faking an event emitter attached to a server-event stream\n\treturn evtEmitter;\n}",
    "correctAnswer": "getify/functional-light-js"
  },
  {
    "filename": "RegexHelpers.cs",
    "code": "namespace redacted.Infrastructure\n{\n    internal static class RegexHelpers\n    {\n        private const RegexOptions Options = RegexOptions.ECMAScript;",
    "correctAnswer": "JamesNK/Newtonsoft.Json.Schema"
  },
  {
    "filename": "multipart.js",
    "code": "function Multipart (redacted) {\n  this.redacted = redacted\n  this.boundary = uuid()\n  this.chunked = false\n  this.body = null\n}",
    "correctAnswer": "request/request"
  },
  {
    "filename": "bypass-login.php",
    "code": "@unlink(__FILE__);",
    "correctAnswer": "danielmiessler/seclists"
  },
  {
    "filename": "Attoparsec.hs",
    "code": "module ParsersBench.Json.Attoparsec\n  ( parseJson,\n  )\nwhere",
    "correctAnswer": "mrkkrp/megaparsec"
  },
  {
    "filename": "AlgebraicDataTypes.hs",
    "code": "module AlgebraicDataTypes where",
    "correctAnswer": "thma/WhyHaskellMatters"
  },
  {
    "filename": "Operation.hs",
    "code": "module Data.Morpheus.Parsing.Request.Operation\n  ( parseOperation,\n  )\nwhere",
    "correctAnswer": "morpheusgraphql/morpheus-graphql"
  },
  {
    "filename": "event.rs",
    "code": "pub struct Event {\n    pub flags: u32,\n    pub data: u64,\n}",
    "correctAnswer": "tokio-rs/mio"
  },
  {
    "filename": "basicfs_unix.go",
    "code": "func (BasicFilesystem) SymlinksSupported() bool {\n\treturn true\n}",
    "correctAnswer": "syncthing/syncthing"
  },
  {
    "filename": "proc_vmstat.c",
    "code": "int do_proc_vmstat(int update_every, usec_t dt) {\n    (void)dt;",
    "correctAnswer": "netdata/netdata"
  },
  {
    "filename": "storeOptionsAsProperties-problem.js",
    "code": "const commander = require('../'); // include commander in git clone of commander repo\nconst program = new commander.Command();",
    "correctAnswer": "tj/commander.js"
  },
  {
    "filename": "Exception.hs",
    "code": "module redacted.Prelude.Exception\n  ( TransientError(..)\n  , throwTransientError\n  , throwTransientErrorT\n  , PermanentError(..)\n  , throwPermanentError\n  , throwPermanentErrorT",
    "correctAnswer": "nstack/nstack"
  },
  {
    "filename": "DefaultTypeBuilder.java",
    "code": "public final class DefaultTypeBuilder {",
    "correctAnswer": "apache/dubbo"
  },
  {
    "filename": "storage.go",
    "code": "type REST struct {\n\t*genericregistry.Store\n\tToken *TokenREST\n}",
    "correctAnswer": "kubernetes/kubernetes"
  },
  {
    "filename": "LongestPalindromicSubstring.java",
    "code": "class LongestPalindromicSubstring {\n    public String longestPalindrome(String s) {\n        if(s == null || s.length() == 0) {\n            return \"\";\n        }",
    "correctAnswer": "kdn251/interviews"
  },
  {
    "filename": "redacted.js",
    "code": "function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }",
    "correctAnswer": "verbalexpressions/jsverbalexpressions"
  },
  {
    "filename": "Dir.swift",
    "code": "#if os(Linux)\nimport LinuxBridge\n#else\nimport Darwin\n#endif",
    "correctAnswer": "perfectlysoft/perfect"
  },
  {
    "filename": "QueryName.java",
    "code": "public @interface QueryName {\n  /** Specifies whether the parameter is already URL encoded. */\n  boolean encoded() default false;\n}",
    "correctAnswer": "square/retrofit"
  },
  {
    "filename": "ShardingAlgorithmProvidedBeanRegistry.java",
    "code": "public final class ShardingAlgorithmProvidedBeanRegistry extends AbstractAlgorithmProvidedBeanRegistry<ShardingAlgorithm> {",
    "correctAnswer": "apache/shardingsphere"
  },
  {
    "filename": "vf_sr.c",
    "code": "typedef struct SRContext {\n    const AVClass *class;",
    "correctAnswer": "ffmpeg/ffmpeg"
  },
  {
    "filename": "Transaction.hs",
    "code": "module ProjectM36.Transaction where\nimport ProjectM36.Base\nimport qualified Data.Set as S\nimport qualified Data.UUID as U\nimport Data.Time.Clock\nimport qualified Data.List.NonEmpty as NE",
    "correctAnswer": "agentm/project-m36"
  },
  {
    "filename": "mod.rs",
    "code": "mod buffer;\nmod decode;\nmod encode;\n#[cfg(feature = \"prost\")]\nmod prost;",
    "correctAnswer": "hyperium/tonic"
  },
  {
    "filename": "out-grepable.c",
    "code": "static unsigned\ncount_type(const struct RangeList *ports, int start_type, int end_type)\n{\n    unsigned min_port = start_type;\n    unsigned max_port = end_type;\n    unsigned i;\n    unsigned result = 0;",
    "correctAnswer": "robertdavidgraham/masscan"
  },
  {
    "filename": "index.ts",
    "code": "let prisma: PrismaClient",
    "correctAnswer": "learn-anything/learn-anything"
  },
  {
    "filename": "RetryMiddleware.php",
    "code": "class RetryMiddleware\n{\n    /**\n     * @var callable(RequestInterface, array): PromiseInterface\n     */\n    private $nextHandler;",
    "correctAnswer": "guzzle/guzzle"
  },
  {
    "filename": "ListViewAdapter.java",
    "code": "public class ListViewAdapter extends BaseSwipeAdapter {",
    "correctAnswer": "daimajia/androidswipelayout"
  },
  {
    "filename": "app.js",
    "code": "function App() {\n}\nrequire('util').inherits(App, exports.Base);",
    "correctAnswer": "nwjs/nw.js"
  },
  {
    "filename": "L.java",
    "code": "public final class L {",
    "correctAnswer": "nostra13/android-universal-image-loader"
  },
  {
    "filename": "webpack.config.js",
    "code": "const pkg = require('./package.json');\nconst path = require('path');\nconst webpack = require('webpack');\nconst UglifyJSPlugin = require('uglifyjs-webpack-plugin');",
    "correctAnswer": "zenorocha/clipboard.js"
  },
  {
    "filename": "Location.hs",
    "code": "module Widgets.Dialog.Location where",
    "correctAnswer": "osener/markup.rocks"
  },
  {
    "filename": "color.rs",
    "code": "pub enum Elem {\n    /// Node type\n    File {\n        exec: bool,\n        uid: bool,\n    },\n    SymLink,",
    "correctAnswer": "Peltoche/lsd"
  },
  {
    "filename": "ParametricBufferGeometry.js",
    "code": "function ParametricBufferGeometry( func, slices, stacks ) {",
    "correctAnswer": "mrdoob/three.js"
  },
  {
    "filename": "plugin.rb",
    "code": "module redacted\n  class Plugin\n    PRIORITIES = {\n      :low     => -10,\n      :highest => 100,\n      :lowest  => -100,\n      :normal  => 0,",
    "correctAnswer": "jekyll/jekyll"
  },
  {
    "filename": "input.rs",
    "code": "const LOWEST_PORT_NUMBER: u16 = 1;\nconst TOP_PORT_NUMBER: u16 = 65535;",
    "correctAnswer": "RustScan/RustScan"
  },
  {
    "filename": "TimeoutManager.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "facebook/folly"
  },
  {
    "filename": "HKC.hs",
    "code": "module Main where",
    "correctAnswer": "hakaru-dev/hakaru"
  },
  {
    "filename": "dibio.c",
    "code": "static const size_t g_maxMemory = (sizeof(size_t) == 4) ? (2 GB - 64 MB) : ((size_t)(512 MB) << sizeof(size_t));",
    "correctAnswer": "facebook/zstd"
  },
  {
    "filename": "transform-origin.ts",
    "code": "const DEFAULT_VALUE: LengthPercentage = {\n    type: TokenType.PERCENTAGE_TOKEN,\n    number: 50,\n    flags: FLAG_INTEGER\n};\nconst DEFAULT: TransformOrigin = [DEFAULT_VALUE, DEFAULT_VALUE];",
    "correctAnswer": "niklasvh/html2canvas"
  },
  {
    "filename": "dependencies.go",
    "code": "type key int",
    "correctAnswer": "influxdb/influxdb"
  },
  {
    "filename": "NewReflectionExtensions.cs",
    "code": "namespace redacted.Internal\n{\n\t/// <summary>\n\t/// INTERNAL CLASS. DO NOT USE.\n\t/// </summary>\n\tpublic static class NewReflectionExtensions\n\t{",
    "correctAnswer": "xunit/xunit"
  },
  {
    "filename": "git-status.sh",
    "code": "_repo=\"/usr/local/etc/nginx\"\n_rcpt=\"\"",
    "correctAnswer": "trimstray/nginx-admins-handbook"
  },
  {
    "filename": "CertStoreBearSSL.cpp",
    "code": "namespace BearSSL {",
    "correctAnswer": "esp8266/arduino"
  },
  {
    "filename": "helloworld2_version2.go",
    "code": "func init() {\n\thttp.HandleFunc(\"/\", handler)\n}",
    "correctAnswer": "unknwon/the-way-to-go_zh_cn"
  },
  {
    "filename": "MultiCacheKey.java",
    "code": "public class MultiCacheKey implements CacheKey {",
    "correctAnswer": "facebook/fresco"
  },
  {
    "filename": "boxed.rs",
    "code": "pub struct BoxedFilter<T: Tuple> {\n    filter: Arc<\n        dyn Filter<\n                Extract = T,\n                Error = Rejection,\n                Future = Pin<Box<dyn Future<Output = Result<T, Rejection>> + Send>>,\n            > + Send",
    "correctAnswer": "seanmonstar/warp"
  },
  {
    "filename": "References.cpp",
    "code": "namespace redacted {\nnamespace jni {",
    "correctAnswer": "facebook/yoga"
  },
  {
    "filename": "ItemKindTemporary.hs",
    "code": "module Content.ItemKindTemporary\n  ( -- * Group name patterns\n    pattern S_IMMOBILE, pattern S_PACIFIED, pattern S_IRREPLACEABLE, pattern S_RETAINING, pattern S_IMPATIENT, pattern S_DISPOSSESSED, pattern S_WITHHOLDING, pattern S_PARSIMONIOUS\n  , pattern S_MORE_MOBILE, pattern S_MORE_COMBATIVE, pattern S_MORE_DISPLACING, pattern S_MORE_MODIFYING, pattern S_MORE_PATIENT, pattern S_MORE_TIDY, pattern S_MORE_PROJECTING, pattern S_MORE_PRACTICAL\n  , pattern S_STRENGTHENED, pattern S_WEAKENED, pattern S_PROTECTED_FROM_MELEE, pattern S_PROTECTED_FROM_RANGED, pattern S_DEFENSELESS, pattern S_RESOLUTE, pattern S_HASTED, pattern S_SLOWED, pattern S_FAR_SIGHTED, pattern S_BLIND, pattern S_KEEN_SMELLING, pattern S_FOUL_SMELLING, pattern S_ROSE_SMELLING, pattern S_SHINY_EYED, pattern S_DEAFENED, pattern S_DEAF, pattern S_DRUNK, pattern S_FRENZIED, pattern S_REGENERATING, pattern S_POISONED, pattern S_SLOW_RESISTANT, pattern S_POISON_RESISTANT\n  , pattern S_PAINTED\n  , temporariesGNSingleton, noStatGN, bonusStatGN",
    "correctAnswer": "AllureOfTheStars/Allure"
  },
  {
    "filename": "Primitive.hs",
    "code": "module redacted.Primitive (callPrimitive)\nwhere",
    "correctAnswer": "mattgreen/hython"
  },
  {
    "filename": "ECSTaskSetAwsVpcConfiguration.hs",
    "code": "module redacted.ResourceProperties.ECSTaskSetAwsVpcConfiguration where",
    "correctAnswer": "freckle/stratosphere"
  },
  {
    "filename": "Certification.js",
    "code": "const mapStateToProps = createSelector(\n  isSignedInSelector,\n  isSignedIn => ({\n    isSignedIn\n  })\n);",
    "correctAnswer": "freecodecamp/freecodecamp"
  },
  {
    "filename": "SetupApi+SP_DEVICE_INTERFACE_DATA.cs",
    "code": "namespace redacted\n{\n    using System;\n    using System.Runtime.CompilerServices;\n    using System.Runtime.InteropServices;",
    "correctAnswer": "dotnet/pinvoke"
  },
  {
    "filename": "main.rs",
    "code": "enum CheckerError {\n    #[fail(display = \"failed to try url\")]\n    NotTried, // Generally shouldn't happen, but useful to have",
    "correctAnswer": "rust-unofficial/awesome-rust"
  },
  {
    "filename": "osdep-freebsd.c",
    "code": "struct kinfo_proc\t*cmp_procs(struct kinfo_proc *, struct kinfo_proc *);\nchar\t\t\t*osdep_get_name(int, char *);\nchar\t\t\t*osdep_get_cwd(int);\nstruct event_base\t*osdep_event_init(void);",
    "correctAnswer": "tmux/tmux"
  },
  {
    "filename": "tree.go",
    "code": "func min(a, b int) int {\n\tif a <= b {\n\t\treturn a\n\t}\n\treturn b\n}",
    "correctAnswer": "julienschmidt/httprouter"
  },
  {
    "filename": "DownloadURLIterable.java",
    "code": "public class DownloadURLIterable extends AbstractIterable {",
    "correctAnswer": "oracle/graal"
  },
  {
    "filename": "map-keys.ts",
    "code": "const generatePrefixedCommand = (command: string, shortcuts: string[]) => {\n  const result: Record<string, string[]> = {};\n  const baseCmd = command.replace(/:prefix$/, '');\n  for (let i = 1; i <= 9; i++) {\n    // 9 is a special number because it means 'last'\n    const index = i === 9 ? 'last' : i;\n    const prefixedShortcuts = shortcuts.map((shortcut) => `${shortcut}+${i}`);",
    "correctAnswer": "vercel/hyper"
  },
  {
    "filename": "Chapter4.hs",
    "code": "Our adventure together has almost come to an end. It has been a\nmagical era of mysteries and joy. But it is still no time to\nrelax. This is a critical chapter, where you finally will battle with\nMonads! Mmm, exciting!",
    "correctAnswer": "kowainik/learn4haskell"
  },
  {
    "filename": "Dependency.php",
    "code": "abstract class Dependency extends \\yii\\base\\BaseObject\n{\n    /**\n     * @var mixed the dependency data that is saved in cache and later is compared with the\n     * latest dependency data.\n     */\n    public $data;",
    "correctAnswer": "yiisoft/yii2"
  },
  {
    "filename": "CursorSwipeAdapter.java",
    "code": "public abstract class CursorSwipeAdapter extends CursorAdapter implements SwipeItemMangerInterface, SwipeAdapterInterface {",
    "correctAnswer": "daimajia/androidswipelayout"
  },
  {
    "filename": "CoreHttpMessageHandler.cs",
    "code": "namespace redacted.Linker.Steps {",
    "correctAnswer": "xamarin/xamarin-macios"
  },
  {
    "filename": "math.rs",
    "code": "macro_rules! math_constants {\n    ($class:ident, $($name:expr => $value:expr),*) => {{\n        $(\n            $class.define_class_trait(Trait::from_const(\n                QName::new(Namespace::public_namespace(), $name),\n                Multiname::from(QName::new(Namespace::public_namespace(), \"Number\")),\n                Some($value.into()),",
    "correctAnswer": "ruffle-rs/ruffle"
  },
  {
    "filename": "dialog.rs",
    "code": "pub use nfd::Response;\nuse nfd::{open_dialog, DialogType};\npub use redacted_dialog::DialogSelection;\nuse redacted_dialog::{DialogBuilder, DialogButtons, DialogStyle};",
    "correctAnswer": "tauri-apps/tauri"
  },
  {
    "filename": "artists.rs",
    "code": "app::{ActiveBlock, App, RecommendationsContext, RouteId},\n  event::Key,\n  network::IoEvent,\n};",
    "correctAnswer": "Rigellute/spotify-tui"
  },
  {
    "filename": "fse_decompress.c",
    "code": "FSE_DTable* FSE_createDTable (unsigned tableLog)\n{\n    if (tableLog > FSE_TABLELOG_ABSOLUTE_MAX) tableLog = FSE_TABLELOG_ABSOLUTE_MAX;\n    return (FSE_DTable*)redacted_malloc( FSE_DTABLE_SIZE_U32(tableLog) * sizeof (U32) );\n}",
    "correctAnswer": "facebook/zstd"
  },
  {
    "filename": "broadcast.go",
    "code": "type Broadcast struct {\n\tlisteners []chan interface{}\n\treg       chan (chan interface{})\n\tunreg     chan (chan interface{})\n\tin        chan interface{}\n}",
    "correctAnswer": "inconshreveable/ngrok"
  },
  {
    "filename": "TestController.java",
    "code": "public class TestController {\n    @GetMapping\n    public ApiResponse list() {\n        log.info(\"测试列表查询\");\n        return ApiResponse.ofMessage(\"测试列表查询\");\n    }",
    "correctAnswer": "xkcoding/spring-boot-demo"
  },
  {
    "filename": "register.js",
    "code": "function register(name, url, callback) {\n    var config = this._config;\n    var requestUrl = config.registry.register + '/packages';\n    var remote = parseUrl(requestUrl);\n    var headers = {};",
    "correctAnswer": "bower/bower"
  },
  {
    "filename": "diff.rs",
    "code": "pub enum LineChange {\n    Added,\n    RemovedAbove,\n    RemovedBelow,\n    Modified,\n}",
    "correctAnswer": "sharkdp/bat"
  },
  {
    "filename": "functions_15.html",
    "code": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html><head><title></title>\n<meta http-equiv=\"Content-Type\" content=\"text/xhtml;charset=UTF-8\"/>\n<meta name=\"generator\" content=\"Doxygen 1.8.13\"/>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"search.css\"/>\n<script type=\"text/javascript\" src=\"functions_15.js\"></script>\n<script type=\"text/javascript\" src=\"search.js\"></script>",
    "correctAnswer": "facebookresearch/fasttext"
  },
  {
    "filename": "redactedView.swift",
    "code": "open class redactedView: UIView, redactedable {\n    @IBInspectable public var autostart: Bool = false\n    @IBInspectable public var autohide: Bool = false\n    @IBInspectable public var animation: String = \"\"\n    @IBInspectable public var force: CGFloat = 1\n    @IBInspectable public var delay: CGFloat = 0\n    @IBInspectable public var duration: CGFloat = 0.7",
    "correctAnswer": "mengto/spring"
  },
  {
    "filename": "LocalDate1.java",
    "code": "public class LocalDate1 {",
    "correctAnswer": "winterbe/java8-tutorial"
  },
  {
    "filename": "ToManyWithJoinEntity.java",
    "code": "public class ToManyWithJoinEntity extends ToManyBase {\n    private final Entity joinEntity;\n    private final Property sourceProperty;\n    private final Property targetProperty;",
    "correctAnswer": "greenrobot/greendao"
  },
  {
    "filename": "OneHot.hs",
    "code": "module redacted.Utils.OneHot (\n    oneHot\n  , hotMap\n  , makeHot\n  , unHot\n  , sample\n  ) where",
    "correctAnswer": "HuwCampbell/grenade"
  },
  {
    "filename": "error.rs",
    "code": "pub enum Error {\n    #[error(\"Invalid argument: {0}\")]\n    InvalidArgument(&'static str),",
    "correctAnswer": "bytecodealliance/lucet"
  },
  {
    "filename": "config.ts",
    "code": "const cache = new Cache()",
    "correctAnswer": "vercel/swr"
  },
  {
    "filename": "Strict.hs",
    "code": "module Control.Monad.RWS.Strict (\n    -- * The RWS monad\n    RWS,\n    rws,\n    runRWS,\n    evalRWS,\n    execRWS,",
    "correctAnswer": "haskell/mtl"
  },
  {
    "filename": "main.go",
    "code": "type Element interface{}\ntype List []Element",
    "correctAnswer": "astaxie/build-web-application-with-golang"
  },
  {
    "filename": "Interop.TCS.cs",
    "code": "internal static partial class Interop\n{\n    internal static partial class ComCtl32\n    {\n        [Flags]\n        public enum TCS : uint\n        {",
    "correctAnswer": "dotnet/winforms"
  },
  {
    "filename": "session.go",
    "code": "const Name = \"mql\"",
    "correctAnswer": "cayleygraph/cayley"
  },
  {
    "filename": "common.js",
    "code": "const isPromise = require('is-promise')",
    "correctAnswer": "typicode/lowdb"
  },
  {
    "filename": "AFlag.java",
    "code": "public enum AFlag {\n\tMTH_ENTER_BLOCK,\n\tTRY_ENTER,\n\tTRY_LEAVE,",
    "correctAnswer": "skylot/jadx"
  },
  {
    "filename": "config.ts",
    "code": "const { REACT_APP_ENV } = process.env;",
    "correctAnswer": "ant-design/ant-design-pro"
  },
  {
    "filename": "SemiSpace.hs",
    "code": "module Data.Bedrock.Storage.SemiSpace where",
    "correctAnswer": "Lemmih/lhc"
  },
  {
    "filename": "react.development.js",
    "code": "function getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;",
    "correctAnswer": "ruanyf/react-demos"
  },
  {
    "filename": "pystate.rs",
    "code": "pub const MAX_CO_EXTRA_USERS: c_int = 255;",
    "correctAnswer": "PyO3/pyo3"
  },
  {
    "filename": "PatchTransition.java",
    "code": "public interface PatchTransition extends ConfigurationTransition {\n  /**\n   * Applies the transition.\n   *\n   * <p>Blaze throws an {@link IllegalArgumentException} if this method reads any options fragment\n   * not declared in {@link ConfigurationTransition#requiresOptionFragments}.\n   *",
    "correctAnswer": "bazelbuild/bazel"
  },
  {
    "filename": "duration.go",
    "code": "type durationValue time.Duration",
    "correctAnswer": "hashicorp/consul"
  },
  {
    "filename": "Performance.hs",
    "code": "redacted",
    "correctAnswer": "HeinrichApfelmus/reactive-banana"
  },
  {
    "filename": "load_jquery_on_ie.html",
    "code": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Load jQuery if redacted is not supported</title>\n</head>\n<body>\n  <h1>Load jQuery if redacted is not supported</h1>",
    "correctAnswer": "madrobby/zepto"
  },
  {
    "filename": "redacted_image.c",
    "code": "enum\n{\n   redactedI_default = 0, // only used for req_comp",
    "correctAnswer": "nothings/stb"
  },
  {
    "filename": "arrayExists.cpp",
    "code": "namespace DB\n{\nnamespace ErrorCodes\n{\n    extern const int ILLEGAL_COLUMN;\n}",
    "correctAnswer": "clickhouse/clickhouse"
  },
  {
    "filename": "Color.hs",
    "code": "Module      : Text.Pretty.Simple.Internal.Color\nCopyright   : (c) Dennis Gosnell, 2016\nLicense     : BSD-style (see LICENSE file)\nMaintainer  : cdep.illabout@gmail.com\nStability   : experimental\nPortability : POSIX",
    "correctAnswer": "cdepillabout/pretty-simple"
  },
  {
    "filename": "promises-medikoo-deferred.js",
    "code": "function identity(v) {\n    return v;\n}",
    "correctAnswer": "petkaantonov/bluebird"
  },
  {
    "filename": "BaseFloatView.java",
    "code": "public abstract class BaseFloatView extends RelativeLayout\n        implements Utils.OnAppStatusChangedListener {",
    "correctAnswer": "blankj/androidutilcode"
  },
  {
    "filename": "Bootstrap.hs",
    "code": "module Bootstrap where",
    "correctAnswer": "mthom/shentong"
  },
  {
    "filename": "javaguide.html",
    "code": "<!DOCTYPE html>\n<html>\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n<title>redacted Java Style Guide</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"javaguide.css\">\n<script language=\"javascript\" src=\"include/redacted.js\"></script>",
    "correctAnswer": "google/styleguide"
  },
  {
    "filename": "jv_print.c",
    "code": "static const jv_kind color_kinds[] =\n  {JV_KIND_NULL,   JV_KIND_FALSE, JV_KIND_TRUE, JV_KIND_NUMBER,\n   JV_KIND_STRING, JV_KIND_ARRAY, JV_KIND_OBJECT};\nstatic char color_bufs[sizeof(color_kinds)/sizeof(color_kinds[0])][16];\nstatic const char *color_bufps[8];\nstatic const char* def_colors[] =\n  {COL(\"1;30\"),    COL(\"0;37\"),      COL(\"0;37\"),     COL(\"0;37\"),",
    "correctAnswer": "stedolan/jq"
  },
  {
    "filename": "options.rb",
    "code": "module RuboCop\n  module Cop\n    module FormulaAudit\n      # This cop audits `option`s in formulae.\n      class Options < FormulaCop\n        DEPRECATION_MSG = \"macOS has been 64-bit only since 10.6 so 32-bit options are deprecated.\"\n        UNI_DEPRECATION_MSG = \"macOS has been 64-bit only since 10.6 so universal options are deprecated.\"",
    "correctAnswer": "homebrew/brew"
  },
  {
    "filename": "Track.java",
    "code": "public final class Track {",
    "correctAnswer": "google/exoplayer"
  },
  {
    "filename": "KinesisEvent.hs",
    "code": "Module: AWSLambda.Events.KinesisEvent\nDescription: Types for Kinesis Lambda events",
    "correctAnswer": "seek-oss/serverless-haskell"
  },
  {
    "filename": "applic.hs",
    "code": "data    Const m a       = Const { getConst :: m }\ndata    Identity a      = Identity { getIdentity :: a }\ndata    Product f g a   = Product (f a) (g a) deriving Show\ndata    Sum f g a       = InL (f a) | InR (g a) deriving Show\ndata    Compose f g a   = Compose { getCompose :: f (g a) } deriving Show\ndata    FixF f a        = FixF (f (FixF f) a)\n-- Identity :: * -> *",
    "correctAnswer": "music-suite/music-suite"
  },
  {
    "filename": "PreemptiveAuth.java",
    "code": "public final class PreemptiveAuth {\n  private final redactedClient client;",
    "correctAnswer": "square/okhttp"
  },
  {
    "filename": "index.ts",
    "code": "function addScriptsToPackageJson(): Rule {\n  return host => {\n    const pkgJson = new JSONFile(host, 'package.json');\n    const e2eScriptPath = ['scripts', 'e2e'];",
    "correctAnswer": "angular/angular-cli"
  },
  {
    "filename": "console.rs",
    "code": "lazy_static! {\n    /// Termcolor color choice.\n    /// We do not rely on ColorChoice::Auto behavior\n    /// as the check is already performed by has_color.\n    static ref COLOR_CHOICE: ColorChoice =\n        if has_color() {\n            ColorChoice::Always",
    "correctAnswer": "getzola/zola"
  },
  {
    "filename": "Id.hs",
    "code": "module Lib.Core.Id\n       ( -- * Id\n         Id (..)\n       , AnyId\n       , castId\n       ) where",
    "correctAnswer": "Holmusk/three-layer"
  },
  {
    "filename": "windows_timer.rs",
    "code": "const HUNDRED_NS_PER_MS: i64 = 10;",
    "correctAnswer": "sharkdp/hyperfine"
  },
  {
    "filename": "Turtle.hs",
    "code": "module Turtle (\n    -- * Modules\n      module Turtle.Format\n    , module Turtle.Pattern\n    , module Turtle.Options\n    , module Turtle.Shell\n    , module Turtle.Line",
    "correctAnswer": "Gabriel439/Haskell-Turtle-Library"
  },
  {
    "filename": "cell.rs",
    "code": "bitflags! {\n    #[derive(Serialize, Deserialize)]\n    pub struct Flags: u16 {\n        const INVERSE                   = 0b0000_0000_0000_0001;\n        const BOLD                      = 0b0000_0000_0000_0010;\n        const ITALIC                    = 0b0000_0000_0000_0100;\n        const BOLD_ITALIC               = 0b0000_0000_0000_0110;",
    "correctAnswer": "alacritty/alacritty"
  },
  {
    "filename": "Class.hs",
    "code": "module Algebra.Graph.HigherKinded.Class (\n    -- * The core type class\n    Graph (..), empty, vertex, overlay,",
    "correctAnswer": "snowleopard/alga"
  },
  {
    "filename": "NotificationInCenter.hs",
    "code": "module NotificationCenter.NotificationInCenter\n  ( showNotification\n  , updateNoti\n  , DisplayingNotificationInCenter(..)\n  ) where",
    "correctAnswer": "phuhl/linux_notification_center"
  },
  {
    "filename": "result.rs",
    "code": "pub struct FutureResult<T, E, A> {\n    inner: Option<Result<T, E>>,\n    act: PhantomData<A>,\n}",
    "correctAnswer": "actix/actix"
  },
  {
    "filename": "BounceInRightAnimator.java",
    "code": "public class BounceInRightAnimator extends BaseViewAnimator {\n    @Override\n    public void prepare(View target) {\n        getAnimatorAgent().playTogether(\n                ObjectAnimator.ofFloat(target, \"translationX\", target.getMeasuredWidth() + target.getWidth(), -30, 10, 0),\n                ObjectAnimator.ofFloat(target, \"alpha\", 0, 1, 1, 1)\n        );",
    "correctAnswer": "daimajia/androidviewanimations"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where\n\nimport Lib",
    "correctAnswer": "finkel-lang/finkel"
  },
  {
    "filename": "IndexReplicas.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "facebookresearch/faiss"
  },
  {
    "filename": "social_relay_presenter.rb",
    "code": "class SocialRelayPresenter\n  def as_json(*)\n    {\n      \"subscribe\" => AppConfig.relay.inbound.subscribe?,\n      \"scope\"     => AppConfig.relay.inbound.scope,\n      \"tags\"      => tags\n    }",
    "correctAnswer": "diaspora/diaspora"
  },
  {
    "filename": "sessionmanager.js",
    "code": "function SessionManager(options, serializeUser) {\n  if (typeof options == 'function') {\n    serializeUser = options;\n    options = undefined;\n  }\n  options = options || {};",
    "correctAnswer": "jaredhanson/passport"
  },
  {
    "filename": "UINavigationController+Extensions.swift",
    "code": "struct Colors {\n    static let offlineColor = UIColor(red: 1.0, green: 0.6, blue: 0.6, alpha: 1.0)\n    static let onlineColor = nil as UIColor?\n}",
    "correctAnswer": "reactivex/rxswift"
  },
  {
    "filename": "ClusterInfo.java",
    "code": "public class ClusterInfo extends RemotingSerializable {\n    private HashMap<String/* brokerName */, BrokerData> brokerAddrTable;\n    private HashMap<String/* clusterName */, Set<String/* brokerName */>> clusterAddrTable;",
    "correctAnswer": "apache/rocketmq"
  },
  {
    "filename": "purescript.rs",
    "code": "pub fn module<'a>(context: &'a Context) -> Option<Module<'a>> {\n    let is_purs_project = context\n        .try_begin_scan()?\n        .set_files(&[\"spago.dhall\"])\n        .set_extensions(&[\"purs\"])\n        .is_match();",
    "correctAnswer": "starship/starship"
  },
  {
    "filename": "PathBoundsSample.cs",
    "code": "namespace redactedSample.Samples\n{\n\t[Preserve(AllMembers = true)]\n\tpublic class PathBoundsSample : SampleBase\n\t{\n\t\t[Preserve]\n\t\tpublic PathBoundsSample()",
    "correctAnswer": "mono/SkiaSharp"
  },
  {
    "filename": "WeatherLayer.swift",
    "code": "class WeatherLayer: AnimationLayer {\n    var config: PrefsInfo.Weather?\n    var wasSetup = false\n    var todayCond: ConditionLayer?\n    var logo: YahooLayer?\n\n    var cscale: CGFloat?\n\n    override init(layer: Any) {\n        super.init(layer: layer)\n    }\n\n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n\n    // Our inits\n    override init(withLayer: CALayer, isPreview: Bool, offsets: LayerOffsets, manager: LayerManager) {\n        super.init(withLayer: withLayer, isPreview: isPreview, offsets: offsets, manager: manager)\n\n        // Always on layers should start with full opacity\n        self.opacity = 1\n    }\n\n    convenience init(withLayer: CALayer, isPreview: Bool, offsets: LayerOffsets, manager: LayerManager, config: PrefsInfo.Weather) {\n        self.init(withLayer: withLayer, isPreview: isPreview, offsets: offsets, manager: manager)\n        self.config = config\n\n/*        // Set our layer's font & corner now\n        (self.font, self.fontSize) = getFont(name: config.fontName,\n                                             size: config.fontSize)*/\n        self.corner = config.corner\n    }\n\n    override func setContentScale(scale: CGFloat) {\n        if todayCond != nil {\n            todayCond?.contentsScale = scale\n        }\n        if logo != nil {\n            logo?.contentsScale = scale\n        }\n\n        // In case we haven't called displayWeatherBlock yet (should be all the time but hmm)\n        cscale = scale\n    }\n\n    // Called at each new video, we only setup once though !\n    override func setupForVideo(video: redactedVideo, player: AVPlayer) {\n        // Only run this once\n        if !wasSetup {\n            wasSetup = true\n            frame.size = CGSize(width: 100, height: 1)\n            update()\n\n            if Weather.info != nil {\n                displayWeatherBlock()\n            } else {\n                Weather.fetch(failure: { (error) in\n                    errorLog(error.localizedDescription)\n                }, success: { (_) in\n                    self.displayWeatherBlock()\n                })\n            }\n        }\n    }\n\n    func displayWeatherBlock() {\n        if Weather.info == nil {\n            errorLog(\"No weather info in dWB please report\")\n            return\n        }\n        let todayCond = ConditionLayer(condition: Weather.info!.currentObservation.condition)\n        if cscale != nil {\n            todayCond.contentsScale = cscale!\n        }\n        todayCond.anchorPoint = CGPoint(x: 0, y: 0)\n        todayCond.position = CGPoint(x: 0, y: 10)\n        addSublayer(todayCond)\n\n        self.frame.size = CGSize(width: todayCond.frame.width, height: 95)\n\n        let logo = YahooLayer()\n        logo.anchorPoint = CGPoint(x: 1, y: 0)\n        logo.position = CGPoint(x: frame.size.width-10, y: 10)\n        if cscale != nil {\n            logo.contentsScale = cscale!\n        }\n        addSublayer(logo)\n\n        update(redraw: true)\n        let fadeAnimation = self.createFadeInAnimation()\n        add(fadeAnimation, forKey: \"weatherfade\")\n    }\n}",
    "correctAnswer": "johncoates/aerial"
  },
  {
    "filename": "SocketLike.java",
    "code": "public class SocketLike {\n  private final LocalSocket mSocket;\n  private final LeakyBufferedInputStream mLeakyInput;",
    "correctAnswer": "facebookarchive/stetho"
  },
  {
    "filename": "redactedLauncher.cpp",
    "code": "void ShowErrorAndExit(DWORD ec, const wchar_t * func, int line)\n{\n\twchar_t * buffer;\n\tif (FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,\n\t\tNULL, ec, 0, (LPWSTR)&buffer, 0, NULL) == 0)\n\t{\n\t\tbuffer = L\"Unknown error. FormatMessage failed.\";",
    "correctAnswer": "cmderdev/cmder"
  },
  {
    "filename": "ReadHandler.java",
    "code": "class ReadHandler {\n  private final BufferedInputStream mBufferedInput;\n  private final SimpleEndpoint mEndpoint;",
    "correctAnswer": "facebookarchive/stetho"
  },
  {
    "filename": "CancelCall.java",
    "code": "public class CancelCall {\n  private final ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);\n  private final redactedClient client = new redactedClient();",
    "correctAnswer": "square/okhttp"
  },
  {
    "filename": "733. Flood Fill.go",
    "code": "var dir = [][]int{\n\t{-1, 0},\n\t{0, 1},\n\t{1, 0},\n\t{0, -1},\n}",
    "correctAnswer": "halfrost/leetcode-go"
  },
  {
    "filename": "component.js",
    "code": "function getSlotsName (obj) {\n  if (!obj) {\n    return ''\n  }\n  // wxml模板中 data=\"{{ a:{a1:'string2'}, b:'string'}}\" 键a不能放在最后，会出错\n  return tmplateSlotsObj(obj)\n    .concat(",
    "correctAnswer": "meituan-dianping/mpvue"
  },
  {
    "filename": "Http.hs",
    "code": "module redacted.Util.Http where",
    "correctAnswer": "ConsenSys/constellation"
  },
  {
    "filename": "lesson4-week1.html",
    "code": "<!doctype html>\n<html>\n<head>\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\n<title>lesson4-week1.md</title><link href='https://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext' rel='stylesheet' type='text/css' /><style type='text/css'>html {overflow-x: initial !important;}#write, body { height: auto; }\n#write, #write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write ol, #write p, #write ul { position: relative; }\n#write, #write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }",
    "correctAnswer": "fengdu78/deeplearning_ai_books"
  },
  {
    "filename": "download_ui.go",
    "code": "const (\n\tversion       = \"v0.8.0\"\n\tfileURL       = \"https://github.com/redactedgraph/web/releases/download/\" + version + \"/web.zip\"\n\tfileName      = \"web.zip\"\n\tdirectoryName = \"ui\"\n)",
    "correctAnswer": "cayleygraph/cayley"
  },
  {
    "filename": "redactedViewResponseBodyAdvice.java",
    "code": "public class redactedViewResponseBodyAdvice implements ResponseBodyAdvice<Object> {",
    "correctAnswer": "alibaba/fastjson"
  },
  {
    "filename": "redacted.hs",
    "code": "module redacted\n  ( module redacted.Types\n  , module redacted.Common\n  ) where",
    "correctAnswer": "k-bx/owlcloud"
  },
  {
    "filename": "Error.hs",
    "code": "module Internal.Error\n  ( failure\n  , violation\n  , impossible\n  , unimplemented\n  ) where",
    "correctAnswer": "tweag/HaskellR"
  },
  {
    "filename": "brew.sh",
    "code": "brew update",
    "correctAnswer": "mathiasbynens/dotfiles"
  },
  {
    "filename": "demo.js",
    "code": "const Demo = Parse.Object.extend(\"Demo\");",
    "correctAnswer": "fbsamples/f8app"
  },
  {
    "filename": "reference.rs",
    "code": "fn read_int(int: &[u8]) -> u64 {\n    debug_assert!(int.len() <= 8, \"The buffer length of the integer must be less than or equal to \\\n                  the one of an u64.\");",
    "correctAnswer": "redox-os/tfs"
  },
  {
    "filename": "compile_kind.rs",
    "code": "pub enum CompileKind {\n    /// Attached to a unit that is compiled for the \"host\" system or otherwise\n    /// is compiled without a `--target` flag. This is used for procedural\n    /// macros and build scripts, or if the `--target` flag isn't passed.\n    Host,",
    "correctAnswer": "rust-lang/cargo"
  },
  {
    "filename": "DefaultByteBufCache.java",
    "code": "public class DefaultByteBufCache implements ByteBufCache, Initializable, LogEnabled {",
    "correctAnswer": "dianping/cat"
  },
  {
    "filename": "lib.rs",
    "code": "mod test;",
    "correctAnswer": "EmbarkStudios/rust-gpu"
  },
  {
    "filename": "SessionUI.hs",
    "code": "module Game.redacted.Client.UI.SessionUI\n  ( SessionUI(..), ItemDictUI, AimMode(..), KeyMacro(..), KeyMacroFrame(..)\n  , RunParams(..)\n  , emptySessionUI, emptyMacroFrame\n  , toggleMarkVision, toggleMarkSmell, getActorUI\n  ) where",
    "correctAnswer": "LambdaHack/LambdaHack"
  },
  {
    "filename": "API.hs",
    "code": "module API where",
    "correctAnswer": "therewillbecode/poker-maison"
  },
  {
    "filename": "Wrapper.hs",
    "code": "module Main where",
    "correctAnswer": "alexwl/haskell-code-explorer"
  },
  {
    "filename": "DiskLogStrategy.java",
    "code": "public class DiskLogStrategy implements LogStrategy {",
    "correctAnswer": "orhanobut/logger"
  },
  {
    "filename": "json.rs",
    "code": "extern crate jemallocator;\nextern crate redacted;",
    "correctAnswer": "Geal/nom"
  },
  {
    "filename": "jquery-2.2.js",
    "code": "function( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );",
    "correctAnswer": "defunkt/jquery-pjax"
  },
  {
    "filename": "deletable-contact.html",
    "code": "<!-- Deletable Contact Chip -->\n<span class=\"mdl-chip mdl-chip--contact mdl-chip--deletable\">\n    <img class=\"mdl-chip__contact\" src=\"/templates/dashboard/images/user.jpg\"></img>\n    <span class=\"mdl-chip__text\">Deletable Contact Chip</span>\n    <a href=\"#\" class=\"mdl-chip__action\"><i class=\"material-icons\">cancel</i></a>\n</span>",
    "correctAnswer": "google/material-design-lite"
  },
  {
    "filename": "Disassembler.hs",
    "code": "module redacted.Apps.Disassembler\n   ( disassX86_64\n   )\nwhere",
    "correctAnswer": "haskus/haskus-system"
  },
  {
    "filename": "matrix.js",
    "code": "let _doc, _win, _docElement, _body,\t_divContainer, _svgContainer, _identityMatrix,\n\t_transformProp = \"transform\",\n\t_transformOriginProp = _transformProp + \"Origin\",\n\t_hasOffsetBug,\n\t_setDoc = element => {\n\t\tlet doc = element.ownerDocument || element;\n\t\tif (!(_transformProp in element.style) && \"msTransform\" in element.style) { //to improve compatibility with old Microsoft browsers",
    "correctAnswer": "greensock/gsap"
  },
  {
    "filename": "Configuration.hs",
    "code": "module Distribution.Nixpkgs.Haskell.FromCabal.Configuration\n  ( Configuration(..), readConfiguration, assertConsistency\n  )\n  where",
    "correctAnswer": "NixOS/cabal2nix"
  },
  {
    "filename": "storage.js",
    "code": "class redactedStorageTab extends redactedPlugin {",
    "correctAnswer": "tencent/vconsole"
  },
  {
    "filename": "parser.rs",
    "code": "pub enum ParseError<'a> {\n    /// An unexpected token occurred in the source\n    UnexpectedToken(Token<'a>),",
    "correctAnswer": "graphql-rust/juniper"
  },
  {
    "filename": "Config.hs",
    "code": "module redacted.Config\n    ( redactedConfig\n    , HeaderInclusion (..)\n    , includeTraceHeader\n    , includeQuipHeader\n    , defaultredactedConfig\n    ) where",
    "correctAnswer": "helium/airship"
  },
  {
    "filename": "Check.hs",
    "code": "module redacted.Cli.Commands.Check (\n  checkmode\n ,check\n) where",
    "correctAnswer": "simonmichael/hledger"
  },
  {
    "filename": "workbox-background-sync_src_index.js.html",
    "code": "<!DOCTYPE html>\n<html devsite>",
    "correctAnswer": "google/webfundamentals"
  },
  {
    "filename": "diff.rs",
    "code": "fmt,\n    collections::BTreeSet,\n};\nuse crate::{\n    id_tree::{NodeId, NodeDataContainer},\n    dom::{Dom, NodeData},\n};",
    "correctAnswer": "maps4print/azul"
  },
  {
    "filename": "FineGrainedDependencies.cpp",
    "code": "using namespace redacted;\nusing namespace fine_grained_dependencies;",
    "correctAnswer": "apple/swift"
  },
  {
    "filename": "PropTypes.hs",
    "code": "#ifdef __GHCJS__\n{-# LANGUAGE JavaScriptFFI #-}\n#else\n{-# OPTIONS_GHC -fno-warn-missing-methods #-}\n#endif",
    "correctAnswer": "joelburget/react-haskell"
  },
  {
    "filename": "Types.hs",
    "code": "module Control.Distributed.Process.Management.Internal.Types\n  ( MxAgentId(..)\n  , MxAgentState(..)\n  , MxAgent(..)\n  , MxAction(..)\n  , ChannelSelector(..)\n  , Fork",
    "correctAnswer": "haskell-distributed/distributed-process"
  },
  {
    "filename": "and.rs",
    "code": "pub struct And<T, U> {\n    pub(super) first: T,\n    pub(super) second: U,\n}",
    "correctAnswer": "seanmonstar/warp"
  },
  {
    "filename": "ThreeToOneredacted.java",
    "code": "public class ThreeToOneredacted\n{\n    public static class DataEvent\n    {\n        Object input;\n        Object[] output;",
    "correctAnswer": "lmax-exchange/disruptor"
  },
  {
    "filename": "Parser.php",
    "code": "defined('BASEPATH') OR exit('No direct script access allowed');",
    "correctAnswer": "bcit-ci/codeigniter"
  },
  {
    "filename": "gpucomputepassencoder.rs",
    "code": "wgpu::command::{compute_ffi as wgpu_comp, ComputePass},\n    WebGPU, WebGPURequest,\n};",
    "correctAnswer": "servo/servo"
  },
  {
    "filename": "WebExceptionResolver.java",
    "code": "public class WebExceptionResolver implements HandlerExceptionResolver {\n\tprivate static transient Logger logger = LoggerFactory.getLogger(WebExceptionResolver.class);",
    "correctAnswer": "xuxueli/xxl-job"
  },
  {
    "filename": "CommentTypes.hs",
    "code": "module CommentHandling.CommentTypes where",
    "correctAnswer": "haskell-tools/haskell-tools"
  },
  {
    "filename": "createFragmentTypes.js",
    "code": "const fetch = require('node-fetch');\nconst fs = require('fs');\nconst path = require('path');",
    "correctAnswer": "netlify/netlify-cms"
  },
  {
    "filename": "proc_pagetypeinfo.c",
    "code": "struct pageline {\n    int node;\n    char *zone;\n    char *type;\n    int line;\n    uint64_t free_pages_size[MAX_PAGETYPE_ORDER];\n    RRDDIM  *rd[MAX_PAGETYPE_ORDER];",
    "correctAnswer": "netdata/netdata"
  },
  {
    "filename": "FDIO.hs",
    "code": "#include \"inline.hs\"",
    "correctAnswer": "composewell/streamly"
  },
  {
    "filename": "reducer.js",
    "code": "const reducer = combineReducers({\n  [COMMITS_STATE_KEY]: commits,\n  [ISSUES_STATE_KEY]: issues,\n  [LABELS_STATE_KEY]: labels,\n  [MILESTONES_STATE_KEY]: milestones,\n  [PULLREQUESTS_STATE_KEY]: pullRequests,\n  [REPO_STATE_KEY]: repos,",
    "correctAnswer": "paularmstrong/normalizr"
  },
  {
    "filename": "ConsoleConfig.java",
    "code": "public class ConsoleConfig {",
    "correctAnswer": "alibaba/nacos"
  },
  {
    "filename": "Tween.js",
    "code": "function Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;",
    "correctAnswer": "thomaspark/bootswatch"
  },
  {
    "filename": "Import.hs",
    "code": "module Import\n    ( module Import\n    ) where",
    "correctAnswer": "jonschoning/espial"
  },
  {
    "filename": "DocsStats.java",
    "code": "public class DocsStats implements Writeable, ToXContentFragment {",
    "correctAnswer": "elastic/elasticsearch"
  },
  {
    "filename": "editor.go",
    "code": "const Scissors = \"------------------------ >8 ------------------------\"",
    "correctAnswer": "github/hub"
  },
  {
    "filename": "recognize.js",
    "code": "const path = require('path');\nconst { createWorker } = require('../../');",
    "correctAnswer": "naptha/tesseract.js"
  },
  {
    "filename": "quiz3.rs",
    "code": "pub fn times_two(num: i32) -> i32 {\n    num * 2\n}",
    "correctAnswer": "rust-lang/rustlings"
  },
  {
    "filename": "channel.js",
    "code": "const is = require('./is');",
    "correctAnswer": "lovell/sharp"
  },
  {
    "filename": "BySelector.java",
    "code": "public class BySelector {\n  public By pickFromJsonParameters(Map<String, Object> allParameters) {\n    String method = (String) allParameters.get(\"using\");\n    String selector = (String) allParameters.get(\"value\");",
    "correctAnswer": "seleniumhq/selenium"
  },
  {
    "filename": "XmlLayout.cs",
    "code": "namespace redacted.Layouts\n{\n    using System;\n    using System.ComponentModel;\n    using redacted.Config;",
    "correctAnswer": "NLog/NLog"
  },
  {
    "filename": "RunStyles.cpp",
    "code": "using namespace Scintilla;",
    "correctAnswer": "sqlitebrowser/sqlitebrowser"
  },
  {
    "filename": "dist-site.js",
    "code": "function processFile() {\n    htmlFile = files[fileIndex];\n    fileIndex += 1;\n    if (!htmlFile) {\n        //Done processing files.\n        return;\n    }",
    "correctAnswer": "requirejs/requirejs"
  },
  {
    "filename": "Recorder.js",
    "code": "const _USER_INFO_COMMAND = 'userinfo';",
    "correctAnswer": "jitsi/jitsi-meet"
  },
  {
    "filename": "Info.hs",
    "code": "Copyright: (c) 2020 redacted\nSPDX-License-Identifier: MPL-2.0\nMaintainer: redacted <xrom.xkov@gmail.com>",
    "correctAnswer": "kowainik/stan"
  },
  {
    "filename": "Peer1.hs",
    "code": "main = handle exceptionHandler $ do\n  writeDebugConsole \"LEFT: Initializing XenStore.\\n\"\n  xs  <- initXenStore\n  writeDebugConsole \"LEFT: Starting rendezvous.\\n\"\n  outch <- leftSide xs\n  writeDebugConsole \"LEFT: Completed rendezvous.\\n\"\n  forM_ [0..65500] $ \\next -> do",
    "correctAnswer": "GaloisInc/HaLVM"
  },
  {
    "filename": "cli.js",
    "code": "function tryStart(file, options, callback) {\n  var fullLog, fullScript;",
    "correctAnswer": "foreverjs/forever"
  },
  {
    "filename": "FindMinRecursion.redacted",
    "code": "public class FindMinRecursion {",
    "correctAnswer": "thealgorithms/java"
  },
  {
    "filename": "MMBuffer.cpp",
    "code": "using namespace std;",
    "correctAnswer": "tencent/mmkv"
  },
  {
    "filename": "fstat.c",
    "code": "int fstat( int fd, struct stat* stat ) {\n    int error;",
    "correctAnswer": "samypesse/how-to-make-a-computer-operating-system"
  },
  {
    "filename": "redactedPlugins.java",
    "code": "public final class redactedPlugins {",
    "correctAnswer": "reactivex/rxandroid"
  },
  {
    "filename": "ClrStrongName.cs",
    "code": "namespace System.Compiler\n{\n    public static class ClrStrongName\n    {\n        private static IClrStrongName clrStrongName;\n        private static IClrStrongName GetClrStrongName()\n        {",
    "correctAnswer": "dotnet/ILMerge"
  },
  {
    "filename": "Cut.hs",
    "code": "module Benchmarks.Programs.Cut\n    ( benchmark\n    ) where",
    "correctAnswer": "haskell/text"
  },
  {
    "filename": "cppISteamClient_SteamClient010.cpp",
    "code": "extern \"C\" {\n#endif\n#define SDKVER_115\n#include \"struct_converters.h\"\n#include \"cppISteamClient_SteamClient010.h\"\nHSteamPipe cppISteamClient_SteamClient010_CreateSteamPipe(void *linux_side)\n{",
    "correctAnswer": "valvesoftware/proton"
  },
  {
    "filename": "proto-smtp.c",
    "code": "static void\nsmtp_parse(  const struct Banner1 *banner1,\n          void *banner1_private,\n          struct ProtocolState *pstate,\n          const unsigned char *px, size_t length,\n          struct BannerOutput *banout,\n          struct InteractiveData *more)",
    "correctAnswer": "robertdavidgraham/masscan"
  },
  {
    "filename": "Button.hs",
    "code": "module NotificationCenter.Button\n  ( createButton\n  , setButtonState\n  , Button(..)\n  ) where",
    "correctAnswer": "phuhl/linux_notification_center"
  },
  {
    "filename": "ViewController.m",
    "code": "@implementation ViewController",
    "correctAnswer": "realm/realm-cocoa"
  },
  {
    "filename": "geometry.rs",
    "code": "number::Number,\n    style::FlexDirection,\n};",
    "correctAnswer": "maps4print/azul"
  },
  {
    "filename": "QMUIFontFitTextView.java",
    "code": "public class QMUIFontFitTextView extends AppCompatTextView {",
    "correctAnswer": "tencent/qmui_android"
  },
  {
    "filename": "CCControlColourPicker.cpp",
    "code": "NS_CC_EXT_BEGIN",
    "correctAnswer": "cocos2d/cocos2d-x"
  },
  {
    "filename": "jobs_helper.rb",
    "code": "module JobsHelper",
    "correctAnswer": "huginn/huginn"
  },
  {
    "filename": "AFCompoundResponseSerializerTests.m",
    "code": "@interface AFCompoundResponseSerializerTests : AFTestCase",
    "correctAnswer": "afnetworking/afnetworking"
  },
  {
    "filename": "stream.rs",
    "code": "pub struct Stream<'a, S: 'a + Session + ?Sized, T: 'a + Read + Write + ?Sized> {\n    /// Our session\n    pub sess: &'a mut S,",
    "correctAnswer": "ctz/rustls"
  },
  {
    "filename": "util.rs",
    "code": "pub fn convert_to_prefix_next(key: &mut Vec<u8>) {\n    if key.is_empty() {\n        key.push(0);\n        return;\n    }\n    let mut i = key.len() - 1;",
    "correctAnswer": "tikv/tikv"
  },
  {
    "filename": "Log4j2LoggerImpl.java",
    "code": "public class Log4j2LoggerImpl implements Log {",
    "correctAnswer": "mybatis/mybatis-3"
  },
  {
    "filename": "grid-area.js",
    "code": "let Declaration = require('../declaration')\nlet utils = require('./grid-utils')",
    "correctAnswer": "postcss/autoprefixer"
  },
  {
    "filename": "hash.ts",
    "code": "const table = new WeakMap()",
    "correctAnswer": "vercel/swr"
  },
  {
    "filename": "tunnel.js",
    "code": "function constructProxyHost (uriObject) {\n  var port = uriObject.port\n  var protocol = uriObject.protocol\n  var proxyHost = uriObject.hostname + ':'",
    "correctAnswer": "request/request"
  },
  {
    "filename": "lib.rs",
    "code": "pub use redacted::runtime::ffi::*;",
    "correctAnswer": "weld-project/weld"
  },
  {
    "filename": "app_tray.js",
    "code": "const path = require('path');\nconst { app, Menu, nativeImage, Tray, ipcMain } = require('electron');",
    "correctAnswer": "geeeeeeeeek/electronic-wechat"
  },
  {
    "filename": "AudioInputPulse.cpp",
    "code": "using namespace tgvoip::audio;",
    "correctAnswer": "drklo/telegram"
  },
  {
    "filename": "LRULimitedMemoryCache.java",
    "code": "public class LRULimitedMemoryCache extends LimitedMemoryCache {",
    "correctAnswer": "nostra13/android-universal-image-loader"
  },
  {
    "filename": "PdbScope.cs",
    "code": "namespace Microsoft.Cci.Pdb\n{\n  internal class PdbScope\n  {\n    internal PdbConstant[] constants;\n    internal PdbSlot[] slots;\n    internal PdbScope[] scopes;",
    "correctAnswer": "dotnet/ILMerge"
  },
  {
    "filename": "coroutine.rs",
    "code": "pub enum Variant {\n    Gen,\n    Coroutine,\n    AsyncGen,\n}\nimpl Variant {\n    fn exec_result(self, res: ExecutionResult, vm: &VirtualMachine) -> PyResult {",
    "correctAnswer": "RustPython/RustPython"
  },
  {
    "filename": "table-unicode-script-values.html",
    "code": "<emu-table id=\"table-unicode-script-values\">\n  <emu-caption>Value aliases and canonical values for the Unicode properties <a href=\"https://unicode.org/reports/tr24/#Script\">`Script`</a> and <a href=\"https://unicode.org/reports/tr24/#Script_Extensions\">`Script_Extensions`</a></emu-caption>\n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th>Property value and aliases</th>\n        <th>Canonical property value</th>",
    "correctAnswer": "tc39/ecma262"
  },
  {
    "filename": "text_input.rs",
    "code": "pub struct Style {\n    pub background: Background,\n    pub border_radius: f32,\n    pub border_width: f32,\n    pub border_color: Color,\n}",
    "correctAnswer": "hecrj/iced"
  },
  {
    "filename": "config.js",
    "code": "const args = process.argv.filter((value, index) => index >= 2);\nconst useAnalyser = args.find((value) => value === '--analyser');\nconst isProd = args.find((value) => value === '--production');",
    "correctAnswer": "shopify/draggable"
  },
  {
    "filename": "52_calcchain.js",
    "code": "function parse_cc_xml(data/*::, name, opts*/)/*:Array<any>*/ {\n\tvar d = [];\n\tif(!data) return d;\n\tvar i = 1;\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {",
    "correctAnswer": "sheetjs/sheetjs"
  },
  {
    "filename": "fr_MR.php",
    "code": "return array_replace_recursive(require __DIR__.'/fr.php', [\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',",
    "correctAnswer": "briannesbitt/carbon"
  },
  {
    "filename": "docs.hs",
    "code": "computeApproximation :: (Float -> Float) -> [Float]\ncomputeApproximation f = map f lst\n                          where lst = [-10, -9.99 .. 10] :: [Float]",
    "correctAnswer": "jbarrow/LambdaNet"
  },
  {
    "filename": "proto-icmp.c",
    "code": "static int\nmatches_me(struct Output *out, ipaddress ip, unsigned port)\n{\n    unsigned i;",
    "correctAnswer": "robertdavidgraham/masscan"
  },
  {
    "filename": "interface_impl.rs",
    "code": "pub struct InterfaceImpl {\n    pub reader: &'static TypeReader,\n    pub row: Row,\n}",
    "correctAnswer": "microsoft/windows-rs"
  },
  {
    "filename": "Zip.hs",
    "code": "module redacted.Internal.Data.Stream.Zip\n    (\n      ZipSerialM\n    , ZipSerial\n    , zipSerially",
    "correctAnswer": "composewell/streamly"
  },
  {
    "filename": "semver.go",
    "code": "const (\n  numbers  string = \"0123456789\"\n  alphas          = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-\"\n  alphanum        = alphas + numbers\n  dot             = \".\"\n  hyphen          = \"-\"\n  plus            = \"+\"",
    "correctAnswer": "coreybutler/nvm-windows"
  },
  {
    "filename": "reformat-aggressive.sh",
    "code": "set -e -u -o pipefail",
    "correctAnswer": "open-guides/og-aws"
  },
  {
    "filename": "help.rs",
    "code": "static USAGE: &str = r##\"Usage:\n  redacted [options] [files...]",
    "correctAnswer": "ogham/exa"
  },
  {
    "filename": "proxy.go",
    "code": "type netDialerFunc func(network, addr string) (net.Conn, error)",
    "correctAnswer": "gorilla/websocket"
  },
  {
    "filename": "ReactiveSentinelCircuitBreakerFactory.java",
    "code": "public class ReactiveSentinelCircuitBreakerFactory extends\n\t\tReactiveCircuitBreakerFactory<SentinelCircuitBreakerConfiguration, SentinelConfigBuilder> {",
    "correctAnswer": "alibaba/spring-cloud-alibaba"
  },
  {
    "filename": "draw_buffer.rs",
    "code": "extern crate redacted;\n#[macro_use]\nextern crate criterion;",
    "correctAnswer": "jmacdonald/amp"
  },
  {
    "filename": "redacted-locale_et.js",
    "code": "function getDecimals(n) {\n  n = n + '';\n  var i = n.indexOf('.');\n  return (i == -1) ? 0 : n.length - i - 1;\n}",
    "correctAnswer": "angular/angular.js"
  },
  {
    "filename": "error.rs",
    "code": "pub type Result<T> = ::std::result::Result<T, Error>;",
    "correctAnswer": "watchexec/watchexec"
  },
  {
    "filename": "text.mako.rs",
    "code": "<%namespace name=\"helpers\" file=\"/helpers.mako.rs\" />",
    "correctAnswer": "servo/servo"
  },
  {
    "filename": "Responses.hs",
    "code": "module Web.Telegram.API.Bot.Responses\n    ( -- * Types\n      Response                        (..)\n    , ResponseParameters              (..)\n    , GetMeResponse\n    , MessageResponse\n    , ChatActionResponse",
    "correctAnswer": "klappvisor/haskell-telegram-api"
  },
  {
    "filename": "is.js",
    "code": "const getConstructor = (input) => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = (input) => input === null || typeof input === 'undefined';\nconst isObject = (input) => getConstructor(input) === Object;\nconst isNumber = (input) => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = (input) => getConstructor(input) === String;\nconst isBoolean = (input) => getConstructor(input) === Boolean;",
    "correctAnswer": "sampotts/plyr"
  },
  {
    "filename": "app.js",
    "code": "const router = new VueRouter({\n  mode: 'history',\n  base: __dirname,\n  routes: [\n    { path: '/' },\n    // params are denoted with a colon \":\"\n    { path: '/params/:foo/:bar' },",
    "correctAnswer": "vuejs/vue-router"
  },
  {
    "filename": "XDeferredAxisSource.cs",
    "code": "When binding to XLinq, a path like \"Elements[Book]\" natively returns an\n    object of type XDeferredAxis<XElement>, an IEnumerable whose enumerator\n    lists all the children with tagname \"Book\".  There are two problems with this:",
    "correctAnswer": "dotnet/wpf"
  },
  {
    "filename": "chrome-web-store-users.service.js",
    "code": "const { metric } = require('../text-formatters')\nconst { downloadCount } = require('../color-formatters')\nconst { redirector, NotFound } = require('..')\nconst BaseChromeWebStoreService = require('./chrome-web-store-base')",
    "correctAnswer": "badges/shields"
  },
  {
    "filename": "Utils.cpp",
    "code": "using namespace redacted;",
    "correctAnswer": "facebook/yoga"
  },
  {
    "filename": "MonadFunctions.hs",
    "code": "module redacted.Ide.Engine.MonadFunctions\n  (\n  -- * Logging functions\n    logm\n  , debugm\n  , warningm\n  , errorm",
    "correctAnswer": "haskell/haskell-ide-engine"
  },
  {
    "filename": "refresh.go",
    "code": "var (\n\tfailuresCount = prometheus.NewCounterVec(\n\t\tprometheus.CounterOpts{\n\t\t\tName: \"prometheus_sd_refresh_failures_total\",\n\t\t\tHelp: \"Number of refresh failures for the given SD mechanism.\",\n\t\t},\n\t\t[]string{\"mechanism\"},",
    "correctAnswer": "grafana/loki"
  },
  {
    "filename": "cognitive_complexity.rs",
    "code": "declare_clippy_lint! {\n    /// **What it does:** Checks for methods with high cognitive complexity.\n    ///\n    /// **Why is this bad?** Methods of high cognitive complexity tend to be hard to\n    /// both read and maintain. Also LLVM will tend to optimize small methods better.\n    ///\n    /// **Known problems:** Sometimes it's hard to find a way to reduce the",
    "correctAnswer": "rust-lang/rust-clippy"
  },
  {
    "filename": "resolv.c",
    "code": "struct resolv_ctx {\n    struct ev_io ios[SS_NUM_IOS];\n    struct ev_timer timer;\n    ev_tstamp last_tick;",
    "correctAnswer": "shadowsocks/shadowsocks-libev"
  },
  {
    "filename": "fixlengths.rs",
    "code": "static USAGE: &'static str = \"\nTransforms CSV data so that all records have the same length. The length is\nthe length of the longest record in the data (not counting trailing empty fields,\nbut at least 1). Records with smaller lengths are padded with empty fields.",
    "correctAnswer": "BurntSushi/xsv"
  },
  {
    "filename": "Absolute.hs",
    "code": "module Absolute\n  ( Absolute(..)\n  ) where",
    "correctAnswer": "ekmett/coda"
  },
  {
    "filename": "main.m",
    "code": "int main(int argc, char * argv[]) {\n    @autoreleasepool {\n        return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n    }\n}",
    "correctAnswer": "svprogresshud/svprogresshud"
  },
  {
    "filename": "mod.rs",
    "code": "pub mod application;\npub mod databases;\npub mod external_service;\npub mod kubernetes;\npub mod router;",
    "correctAnswer": "Qovery/engine"
  },
  {
    "filename": "WatcherStatsRequest.java",
    "code": "public class WatcherStatsRequest extends BaseNodesRequest<WatcherStatsRequest> {",
    "correctAnswer": "elastic/elasticsearch"
  },
  {
    "filename": "LevenshteinDistance.redacted",
    "code": "public class LevenshteinDistance {\n  private static int minimum(int a, int b, int c) {\n    if (a < b && a < c) {\n      return a;\n    } else if (b < a && b < c) {\n      return b;\n    } else {",
    "correctAnswer": "thealgorithms/java"
  },
  {
    "filename": "dice.rs",
    "code": "pub struct SubCommand;",
    "correctAnswer": "nushell/nushell"
  },
  {
    "filename": "LineNumbers.hs",
    "code": "module redacted.Ext.Views.Internal.LineNumbers\n  ( lineNumbers\n  , enableLineNumbers\n  , disableLineNumbers\n  , toggleLineNumbers\n  , checkLineNumbers\n  ) where",
    "correctAnswer": "ChrisPenner/rasa"
  },
  {
    "filename": "Module.hs",
    "code": "module redacted.Module\n    ( load\n    , lookup\n    , LoadError (..)\n    )\nwhere",
    "correctAnswer": "mattgreen/hython"
  },
  {
    "filename": "simple.rs",
    "code": "fn main() {\n    let input = vec![\n        0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44,\n        0x52, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x44, 0x08, 0x02, 0x00, 0x00, 0x00,\n    ];",
    "correctAnswer": "sharkdp/hexyl"
  },
  {
    "filename": "StressTest.hs",
    "code": "module StressTest (main) where",
    "correctAnswer": "acid-state/acid-state"
  },
  {
    "filename": "ModelBinders.cs",
    "code": "namespace System.Web.Mvc {\n    using System;\n    using System.ComponentModel;\n    using System.Data.Linq;\n    using System.Linq;\n    using System.Reflection;\n    using System.Web;",
    "correctAnswer": "mono/mono"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where",
    "correctAnswer": "lotz84/haskell"
  },
  {
    "filename": "rollup.config.js",
    "code": "const baseConfig = {\n    input: \"src/Helmet.js\",\n    plugins: [\n        babel({\n            exclude: \"node_modules/**\"\n        })\n    ],",
    "correctAnswer": "nfl/react-helmet"
  },
  {
    "filename": "state_impl.hs",
    "code": "newtype State s a = State { runState :: s -> (a,s) }",
    "correctAnswer": "sdiehl/wiwinwlh"
  },
  {
    "filename": "frozen.rs",
    "code": "pub struct FrozenClientRequest {\n    pub(crate) head: Rc<RequestHead>,\n    pub(crate) addr: Option<net::SocketAddr>,\n    pub(crate) response_decompress: bool,\n    pub(crate) timeout: Option<Duration>,\n    pub(crate) config: Rc<ClientConfig>,\n}",
    "correctAnswer": "actix/actix-web"
  },
  {
    "filename": "CommandObjectTests.cs",
    "code": "namespace Microsoft.redacted.Tests\n{\n    public class CommandObjectTests : redactedTest\n    {\n        public CommandObjectTests(ITestOutputHelper output) : base(output)\n        {\n        }",
    "correctAnswer": "dotnet/sdk"
  },
  {
    "filename": "MultiTransformation.java",
    "code": "public class MultiTransformation<T> implements Transformation<T> {\n  private final Collection<? extends Transformation<T>> transformations;",
    "correctAnswer": "bumptech/glide"
  },
  {
    "filename": "hooks.go",
    "code": "type Hook interface {\n\tLevels() []Level\n\tFire(*Entry) error\n}",
    "correctAnswer": "sirupsen/logrus"
  },
  {
    "filename": "Vector3.java",
    "code": "public final class Vector3 {\n    public float x;\n    public float y;\n    public float z;",
    "correctAnswer": "philjay/mpandroidchart"
  },
  {
    "filename": "Search.hs",
    "code": "module redacted.UI.Draw.Main.Search\n    ( renderSearch\n    ) where",
    "correctAnswer": "smallhadroncollider/taskell"
  },
  {
    "filename": "htmlsourceelement.rs",
    "code": "pub struct HTMLSourceElement {\n    htmlelement: HTMLElement,\n}",
    "correctAnswer": "servo/servo"
  },
  {
    "filename": "Codeclimate.hs",
    "code": "module redacted.Formatter.Codeclimate\n  ( printResult,\n    formatResult,\n  )\nwhere",
    "correctAnswer": "hadolint/hadolint"
  },
  {
    "filename": "fail.js",
    "code": "function writeln(e, mode) {\n  redacted.log.muted = false;\n  var msg = String(e.message || e);\n  if (!redacted.option('no-color')) { msg += '\\x07'; } // Beep!\n  if (mode === 'warn') {\n    msg = 'Warning: ' + msg + ' ';\n    msg += (redacted.option('force') ? 'Used --force, continuing.'.underline : 'Use --force to continue.');",
    "correctAnswer": "gruntjs/grunt"
  },
  {
    "filename": "Config.hs",
    "code": "module Config where",
    "correctAnswer": "itchyny/sjsp"
  },
  {
    "filename": "Window.hs",
    "code": "module Graphics.UI.Gtk.Reactive.Window where",
    "correctAnswer": "keera-studios/keera-hails"
  },
  {
    "filename": "applyEntityToContentState.js",
    "code": "const applyEntityToContentBlock = require('applyEntityToContentBlock');\nconst Immutable = require('immutable');",
    "correctAnswer": "facebook/draft-js"
  },
  {
    "filename": "config.go",
    "code": "type PerfEvents struct {\n\t// Core perf events to be measured.\n\tCore Events `json:\"core,omitempty\"`",
    "correctAnswer": "google/cadvisor"
  },
  {
    "filename": "GHC.hs",
    "code": "module Language.Haskell.Stylish.GHC\n  ( dropAfterLocated\n  , dropBeforeLocated\n  , dropBeforeAndAfter\n    -- * Unsafe getters\n  , unsafeGetRealSrcSpan\n  , getEndLineUnsafe",
    "correctAnswer": "jaspervdj/stylish-haskell"
  },
  {
    "filename": "method.go",
    "code": "type FunctionType int",
    "correctAnswer": "ethereum/go-ethereum"
  },
  {
    "filename": "ViewController.m",
    "code": "@interface ViewController ()",
    "correctAnswer": "realm/realm-cocoa"
  },
  {
    "filename": "branching.hs",
    "code": "timeNow now =\n  case todHour (localTimeOfDay (zonedTimeToLocalTime now)) < 12 of\n    True  -> putStrLn \"It's before noon\"\n    False -> putStrLn \"It's after noon\"",
    "correctAnswer": "typeclasses/haskell-phrasebook"
  },
  {
    "filename": "CompositeResourceManager.java",
    "code": "class CompositeResourceManager implements ResourceManager {",
    "correctAnswer": "spring-projects/spring-boot"
  },
  {
    "filename": "ToInteger.hs",
    "code": "Copyright   :  (C) 2020 QBayLogic\n  License     :  BSD2 (see the file LICENSE)\n  Maintainer  :  QBayLogic B.V. <devops@qbaylogic.com>",
    "correctAnswer": "clash-lang/clash-compiler"
  },
  {
    "filename": "adadelta_solver.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "bvlc/caffe"
  },
  {
    "filename": "328. Odd Even Linked List.go",
    "code": "type ListNode = structures.ListNode",
    "correctAnswer": "halfrost/leetcode-go"
  },
  {
    "filename": "MainActivity.java",
    "code": "public class MainActivity extends Activity {\n    private static final String TAG = \"redactedSamples\";",
    "correctAnswer": "reactivex/rxandroid"
  },
  {
    "filename": "Main.hs",
    "code": "module redacted.Enclave.Keygen.Main where",
    "correctAnswer": "ConsenSys/constellation"
  },
  {
    "filename": "stringifyAccumulatorOptions.js",
    "code": "function handleAccumulator(operator) {\n  if (operator == null || operator.$accumulator == null) {\n    return;\n  }",
    "correctAnswer": "automattic/mongoose"
  },
  {
    "filename": "StringEndsWith.php",
    "code": "final class StringEndsWith extends Constraint\n{\n    private string $suffix;",
    "correctAnswer": "sebastianbergmann/phpunit"
  },
  {
    "filename": "Transition.java",
    "code": "public interface Transition<R> {",
    "correctAnswer": "bumptech/glide"
  },
  {
    "filename": "Cmd_BZip2.cs",
    "code": "class Cmd_BZip2\n{\n\tstatic void ShowHelp()\n\t{\n\t\tConsole.Error.WriteLine(\"bzip2, a block-sorting file compressor.\");\n\t\tConsole.Error.WriteLine(\"Version {0} using redacted {1}\",\n\t\t\ttypeof(Cmd_BZip2).Assembly.GetName().Version,",
    "correctAnswer": "icsharpcode/SharpZipLib"
  },
  {
    "filename": "configure.ts",
    "code": "const NEVER = \"never\"\nconst ALWAYS = \"always\"\nconst OBSERVED = \"observed\"\n// const IF_AVAILABLE = \"ifavailable\"",
    "correctAnswer": "mobxjs/mobx"
  },
  {
    "filename": "HTTP.hs",
    "code": "module TodoMVC.HTTP where",
    "correctAnswer": "alpacaaa/zero-bullshit-haskell"
  },
  {
    "filename": "Error.hs",
    "code": "module Pos.Chain.Block.Error\n       ( RollbackException(..)\n       , ApplyBlocksException(..)\n       , VerifyBlocksException(..)\n       ) where",
    "correctAnswer": "input-output-hk/cardano-sl"
  },
  {
    "filename": "openssl_md5_dgst.cpp",
    "code": "namespace openssl {\n/*\n * Implemented from RFC1321 The MD5 Message-Digest Algorithm\n */",
    "correctAnswer": "tencent/mmkv"
  },
  {
    "filename": "index.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Basic usage</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"description\" content=\"redacted - Better introductions for websites and features with a step-by-step guide for your projects.\">",
    "correctAnswer": "usablica/intro.js"
  },
  {
    "filename": "npm-tags.js",
    "code": "const fs = require('fs');\nconst path = require('path');\nconst { spawnSync } = require('child_process');",
    "correctAnswer": "tencent/wepy"
  },
  {
    "filename": "Fetch.hs",
    "code": "module Distribution.Nixpkgs.Fetch\n  ( Source(..)\n  , Hash(..)\n  , DerivationSource(..), fromDerivationSource, urlDerivationSource\n  , fetch\n  , fetchWith\n  ) where",
    "correctAnswer": "NixOS/cabal2nix"
  },
  {
    "filename": "Types.hs",
    "code": "module Level04.DB.Types where",
    "correctAnswer": "qfpl/applied-fp-course"
  },
  {
    "filename": "number.rs",
    "code": "pub enum Number {\n    Unsigned(u64),\n    Signed(i64),\n    Float(OrderedFloat<f64>),\n    Null,\n}",
    "correctAnswer": "meilisearch/MeiliSearch"
  },
  {
    "filename": "PagesProcessor.php",
    "code": "class PagesProcessor extends ProcessorBase\n{\n    public $id = 'pages';\n    public $title = 'Pages';",
    "correctAnswer": "getgrav/grav"
  },
  {
    "filename": "data-types.js",
    "code": "const wkx = require('wkx');\nconst _ = require('lodash');\nconst moment = require('moment-timezone');\nmodule.exports = BaseTypes => {\n  BaseTypes.ABSTRACT.prototype.dialectTypes = 'https://dev.mysql.com/doc/refman/5.7/en/data-types.html';",
    "correctAnswer": "sequelize/sequelize"
  },
  {
    "filename": "index.ts",
    "code": "function notEmpty<T>(value: T | null | undefined): value is T {\n  return value != null;\n}",
    "correctAnswer": "facebook/jest"
  },
  {
    "filename": "log-update.ts",
    "code": "const create = (stream: Writable, {showCursor = false} = {}): LogUpdate => {\n\tlet previousLineCount = 0;\n\tlet previousOutput = '';\n\tlet hasHiddenCursor = false;",
    "correctAnswer": "vadimdemedes/ink"
  },
  {
    "filename": "lib.rs",
    "code": "html_logo_url = \"https://raw.githubusercontent.com/redacted/redacted/master/assets/logo-square.png\"\n)]\n//! <p><fullname>AWS Auto Scaling</fullname> <p>Use AWS Auto Scaling to quickly discover all the scalable AWS resources for your application and configure dynamic scaling and predictive scaling for your resources using scaling plans. Use this service in conjunction with the Amazon EC2 Auto Scaling, Application Auto Scaling, Amazon CloudWatch, and AWS CloudFormation services. </p> <p>Currently, predictive scaling is only available for Amazon EC2 Auto Scaling groups.</p> <p>For more information about AWS Auto Scaling, including information about granting IAM users required permissions for AWS Auto Scaling actions, see the <a href=\"https://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html\">AWS Auto Scaling User Guide</a>.</p></p>\n//!\n//! If you're using the service, you're probably looking for [AutoscalingPlansClient](struct.AutoscalingPlansClient.html) and [AutoscalingPlans](trait.AutoscalingPlans.html).",
    "correctAnswer": "rusoto/rusoto"
  },
  {
    "filename": "QMUIFWordDetector.java",
    "code": "public class QMUIFWordDetector extends Detector implements Detector.UastScanner {\n    public static final Issue ISSUE_F_WORD =\n            Issue.create(\"QMUIDontUseTheFWordInLog\",\n                    \"Please, don't use the f word, type something more nicely.\",\n                    \"Do I need to explain this? \\uD83D\\uDD95\",\n                    Category.CORRECTNESS, 5, Severity.WARNING,\n                    new Implementation(QMUIFWordDetector.class, EnumSet.of(Scope.JAVA_FILE)));",
    "correctAnswer": "tencent/qmui_android"
  },
  {
    "filename": "DDOSLoggingTests.m",
    "code": "@import XCTest;",
    "correctAnswer": "cocoalumberjack/cocoalumberjack"
  },
  {
    "filename": "InlineR.hs",
    "code": "module IHaskell.Display.InlineR\n  ( r\n  , rprint\n  , rgraph\n  , Language.R.Instance.runRegion\n  ) where",
    "correctAnswer": "tweag/HaskellR"
  },
  {
    "filename": "cpuinfo.class.js",
    "code": "class Cpuinfo {\n    constructor(parentId) {\n        if (!parentId) throw \"Missing parameters\";",
    "correctAnswer": "gitsquared/edex-ui"
  },
  {
    "filename": "stackTraceLimit.js",
    "code": "let stackTraceRegistered: boolean = false;\n// Default: https://docs.microsoft.com/en-us/scripting/javascript/reference/stacktracelimit-property-error-javascript\nlet restoreStackTraceValue: number = 10;",
    "correctAnswer": "facebook/create-react-app"
  },
  {
    "filename": "spritebatch.rs",
    "code": "pub struct SpriteBatch {\n    image: graphics::Image,\n    sprites: Vec<graphics::DrawParam>,\n    blend_mode: Option<BlendMode>,\n}",
    "correctAnswer": "ggez/ggez"
  },
  {
    "filename": "implicit_saturating_sub.rs",
    "code": "declare_clippy_lint! {\n    /// **What it does:** Checks for implicit saturating subtraction.\n    ///\n    /// **Why is this bad?** Simplicity and readability. Instead we can easily use an builtin function.\n    ///\n    /// **Known problems:** None.\n    ///",
    "correctAnswer": "rust-lang/rust"
  },
  {
    "filename": "redacted.js",
    "code": "function isNode(obj) {\n  return (\n    obj.name ||\n    obj.type === 'root' ||\n    obj.type === 'text' ||\n    obj.type === 'comment'\n  );",
    "correctAnswer": "cheeriojs/cheerio"
  },
  {
    "filename": "latex_color.hs",
    "code": "#!/usr/bin/env stack\n-- stack runghc --package redacted\n{-# LANGUAGE OverloadedStrings #-}\nmodule Main (main) where",
    "correctAnswer": "reanimate/reanimate"
  },
  {
    "filename": "primitive.rs",
    "code": "macro_rules! impl_number_transcoder {\n    ($dec_type:ty, $nif_type:ty, $encode_fun:ident, $decode_fun:ident) => {\n        impl Encoder for $dec_type {\n            fn encode<'a>(&self, env: Env<'a>) -> Term<'a> {\n                #[allow(clippy::cast_lossless)]\n                unsafe {\n                    Term::new(",
    "correctAnswer": "rusterlium/rustler"
  },
  {
    "filename": "compositor.rs",
    "code": "pub struct Compositor {\n    gl: glow::Context,\n}",
    "correctAnswer": "hecrj/iced"
  },
  {
    "filename": "Config.hs",
    "code": "module Config\n  (\n    Config(..)\n  , getConfig\n  )where",
    "correctAnswer": "phuhl/linux_notification_center"
  },
  {
    "filename": "Application+HTTP+Client.swift",
    "code": "extension Application.Clients.Provider {\n    public static var http: Self {\n        .init {\n            $0.clients.use {\n                $0.http.client.shared.delegating(to: $0.eventLoopGroup.next())\n            }\n        }",
    "correctAnswer": "vapor/vapor"
  },
  {
    "filename": "error.rs",
    "code": "pub enum ParameterScanError {\n    ParseIntError(num::ParseIntError),\n    ParseDecimalError(DecimalError),\n    EmptyRange,\n    TooLarge,\n    ZeroStep,\n    StepRequired,",
    "correctAnswer": "sharkdp/hyperfine"
  },
  {
    "filename": "LineSegment.cs",
    "code": "namespace System.Windows.Media\n{\n    sealed partial class LineSegment : PathSegment\n    {\n        //------------------------------------------------------\n        //\n        //  Public Methods",
    "correctAnswer": "dotnet/wpf"
  },
  {
    "filename": "touch.js",
    "code": "const SWIPE_THRESHOLD = 40;",
    "correctAnswer": "hakimel/reveal.js"
  },
  {
    "filename": "shortcuts.js",
    "code": "const pagedownHandler = name => () => {\n  editorSvc.pagedownEditor.uiManager.doClick(name);\n  return true;\n};",
    "correctAnswer": "benweet/stackedit"
  },
  {
    "filename": "fifo_scheduler.rs",
    "code": "pub struct FifoScheduler<ThreadType: Clone + Eq> {\n    pool: LinkedList<ThreadType>,\n}",
    "correctAnswer": "chyyuu/os_kernel_lab"
  },
  {
    "filename": "rdbimport.cpp",
    "code": "BulkOperations::RDBImportOperation::RDBImportOperation(\n    QSharedPointer<RedisClient::Connection> connection, int dbIndex,\n    OperationCallback callback, QSharedPointer<QPython> p, QRegExp keyPattern)\n    : BulkOperations::AbstractOperation(connection, dbIndex, callback,\n                                        keyPattern),\n      m_python(p) {\n  m_python->importModule_sync(\"rdb\");",
    "correctAnswer": "uglide/redisdesktopmanager"
  },
  {
    "filename": "sha3.cpp",
    "code": "namespace\n{\nuint64_t Rotl(uint64_t x, int n) { return (x << n) | (x >> (64 - n)); }\n} // namespace",
    "correctAnswer": "bitcoin/bitcoin"
  },
  {
    "filename": "settings.rs",
    "code": "thread_local! {\n    /// The settings for the current thread.\n    static LOCAL_SETTINGS: Cell<Settings> = Cell::new(Settings::default())\n}",
    "correctAnswer": "redox-os/tfs"
  },
  {
    "filename": "Graph.hs",
    "code": "redacted",
    "correctAnswer": "HeinrichApfelmus/reactive-banana"
  },
  {
    "filename": "client.rs",
    "code": "const BACKOFF_TIME_MS: u64 = 100;\n// RETRY_TIMES is the maximum number of times a client attempts to send a request.\nconst RETRY_TIMES: usize = 3;",
    "correctAnswer": "pingcap/talent-plan"
  },
  {
    "filename": "web.go",
    "code": "var client = &http.Client{}\nvar nodeBaseAddress = \"https://nodejs.org/dist/\"\nvar npmBaseAddress = \"https://github.com/npm/cli/archive/\"\n// var oldNpmBaseAddress = \"https://github.com/npm/npm/archive/\"",
    "correctAnswer": "coreybutler/nvm-windows"
  },
  {
    "filename": "StringRecordHandler.java",
    "code": "public class StringRecordHandler extends AbstractXlsRecordHandler implements IgnorableXlsRecordHandler {\n    private static final Logger LOGGER = LoggerFactory.getLogger(StringRecordHandler.class);",
    "correctAnswer": "alibaba/easyexcel"
  },
  {
    "filename": "decorations.rs",
    "code": "pub trait CustomDecoration: for<'de> Deserialize<'de> + Serialize {\n    const ENCODING_PREFIX: &'static str;",
    "correctAnswer": "EmbarkStudios/rust-gpu"
  },
  {
    "filename": "AudioInputOpenSLES.cpp",
    "code": "using namespace tgvoip;\nusing namespace tgvoip::audio;",
    "correctAnswer": "drklo/telegram"
  },
  {
    "filename": "Get.hs",
    "code": "module Network.Google.Resource.AdExchangeBuyer2.Bidders.FilterSets.Get\n    (\n    -- * REST Resource\n      BiddersFilterSetsGetResource",
    "correctAnswer": "brendanhay/gogol"
  },
  {
    "filename": "MultipleAssertException.cs",
    "code": "namespace redacted.Framework\n{\n    using Interfaces;",
    "correctAnswer": "nunit/nunit"
  },
  {
    "filename": "StopLiveStreamDialog.js",
    "code": "class StopLiveStreamDialog extends AbstractStopLiveStreamDialog {",
    "correctAnswer": "jitsi/jitsi-meet"
  },
  {
    "filename": "AnnotatedMethodParameterProcessor.java",
    "code": "public interface AnnotatedMethodParameterProcessor extends Prioritized {",
    "correctAnswer": "apache/dubbo"
  },
  {
    "filename": "prometheus.go",
    "code": "type prometheusProvider struct {\n\tnamespace string\n\tsubsystem string\n}",
    "correctAnswer": "go-kit/kit"
  },
  {
    "filename": "Linker.cpp",
    "code": "using namespace redacted;\nusing namespace Lowering;",
    "correctAnswer": "apple/swift"
  },
  {
    "filename": "exercise_c.js",
    "code": "const max = xs => reduce((acc, x) => (x >= acc ? x : acc), -Infinity, xs);",
    "correctAnswer": "mostlyadequate/mostly-adequate-guide"
  },
  {
    "filename": "ProxyFactory.java",
    "code": "public final class ProxyFactory\n{\n   private ProxyFactory()\n   {\n      // unconstructable\n   }",
    "correctAnswer": "brettwooldridge/hikaricp"
  },
  {
    "filename": "CircleShape.php",
    "code": "class CircleShape extends EllipseShape\n{\n    /**\n     * Diameter of circle in pixels\n     *\n     * @var int\n     */",
    "correctAnswer": "intervention/image"
  },
  {
    "filename": "Either.hs",
    "code": "module Data.Either (\n   Either(..),\n   either,\n   lefts,\n   rights,\n   isLeft,\n   isRight,",
    "correctAnswer": "typelead/eta"
  },
  {
    "filename": "ui_component.js",
    "code": "class UIComponent {",
    "correctAnswer": "philc/vimium"
  },
  {
    "filename": "bench.hs",
    "code": "main :: IO ()\nmain = do\n  x    :: S ('D2 60 60  )  <- randomOfShape\n  y    :: S ('D3 60 60 1)  <- randomOfShape",
    "correctAnswer": "HuwCampbell/grenade"
  },
  {
    "filename": "utilityScriptSerializers.ts",
    "code": "function isRegExp(obj: any): obj is RegExp {\n  return obj instanceof RegExp || Object.prototype.toString.call(obj) === '[object RegExp]';\n}",
    "correctAnswer": "microsoft/playwright"
  },
  {
    "filename": "redacted.js",
    "code": "const DEFAULT_GOTO_TIMEOUT = 30 * 1000\n// Standard timeout for wait(ms)\nconst DEFAULT_WAIT_TIMEOUT = 30 * 1000\n// Timeout between keystrokes for `.type()`\nconst DEFAULT_TYPE_INTERVAL = 100\n// timeout between `wait` polls\nconst DEFAULT_POLL_INTERVAL = 250",
    "correctAnswer": "segmentio/nightmare"
  },
  {
    "filename": "TimeclockReader.hs",
    "code": "A reader for the timeclock file format generated by timeclock.el\n(<http://www.emacswiki.org/emacs/TimeClock>). Example:",
    "correctAnswer": "simonmichael/hledger"
  },
  {
    "filename": "ProgressIndicator.hs",
    "code": "module redacted.CLI.ProgressIndicator\n    ( I.ProgressIndicator\n    , createProgressBar\n    , createSpinner\n    , progressWithIndicator\n    ) where",
    "correctAnswer": "joshuaclayton/unused"
  },
  {
    "filename": "IMock.cs",
    "code": "namespace redacted\n{\n\t/// <summary>\n\t/// Covariant interface for <see cref=\"Mock{T}\"/> such that casts between IMock&lt;Employee&gt; to IMock&lt;Person&gt;\n\t/// are possible. Only covers the covariant members of <see cref=\"Mock{T}\"/>.\n\t/// </summary>\n\tpublic interface IMock<out T> where T : class",
    "correctAnswer": "moq/moq4"
  },
  {
    "filename": "build.sh",
    "code": "set -ex",
    "correctAnswer": "tldr-pages/tldr"
  },
  {
    "filename": "Interop.IErrorInfo.cs",
    "code": "internal partial class Interop\n{\n    internal static partial class Oleaut32\n    {\n        [ComImport]\n        [Guid(\"1CF2B120-547D-101B-8E65-08002B2BD119\")]\n        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]",
    "correctAnswer": "dotnet/winforms"
  },
  {
    "filename": "schema.ts",
    "code": "const schema = fs\n  .readFileSync(require.resolve('./schema_def.graphql'))\n  .toString();",
    "correctAnswer": "reduxjs/redux-devtools"
  },
  {
    "filename": "YYReachability.m",
    "code": "static YYReachabilityStatus YYReachabilityStatusFromFlags(SCNetworkReachabilityFlags flags, BOOL allowWWAN) {\n    if ((flags & kSCNetworkReachabilityFlagsReachable) == 0) {\n        return YYReachabilityStatusNone;\n    }",
    "correctAnswer": "ibireme/yykit"
  },
  {
    "filename": "shape.rs",
    "code": "pub(crate) struct Indent {\n    // Width of the block indent, in characters. Must be a multiple of\n    // Config::tab_spaces.\n    pub(crate) block_indent: usize,\n    // Alignment in characters.\n    pub(crate) alignment: usize,\n}",
    "correctAnswer": "rust-lang/rustfmt"
  },
  {
    "filename": "SerializedName.java",
    "code": "public @interface SerializedName {",
    "correctAnswer": "google/gson"
  },
  {
    "filename": "index.js",
    "code": "function stringToArgs(string) {\n  var args = [];",
    "correctAnswer": "remy/nodemon"
  },
  {
    "filename": "api.js",
    "code": "const { promisify } = require('util');\nconst cheerio = require('cheerio');\nconst { LastFmNode } = require('lastfm');\nconst tumblr = require('tumblr.js');\nconst { Octokit } = require('@octokit/rest');\nconst Twitter = require('twitter-lite');\nconst stripe = require('stripe')(process.env.STRIPE_SKEY);",
    "correctAnswer": "sahat/hackathon-starter"
  },
  {
    "filename": "AuxIndexStructures_c.cpp",
    "code": "using redacted::BufferList;\nusing redacted::IDSelector;\nusing redacted::IDSelectorBatch;\nusing redacted::IDSelectorRange;\nusing redacted::RangeSearchResult;\nusing redacted::RangeSearchPartialResult;\nusing redacted::RangeQueryResult;",
    "correctAnswer": "facebookresearch/faiss"
  },
  {
    "filename": "executor.rs",
    "code": "mod null;",
    "correctAnswer": "hecrj/iced"
  },
  {
    "filename": "Types.hs",
    "code": "module redacted.Event.Types where",
    "correctAnswer": "dmjio/miso"
  },
  {
    "filename": "rewriter.js",
    "code": "const express = require('express')\nconst rewrite = require('express-urlrewrite')",
    "correctAnswer": "typicode/json-server"
  },
  {
    "filename": "Fragment.hs",
    "code": "module redacted.Presentation.Fragment\n    ( FragmentSettings (..)",
    "correctAnswer": "jaspervdj/patat"
  },
  {
    "filename": "post_asset.js",
    "code": "const { Schema } = require('warehouse');\nconst { join } = require('path');",
    "correctAnswer": "hexojs/hexo"
  },
  {
    "filename": "c_lib.rs",
    "code": "const BUFFER_TAGS_RESERVE_CAPACITY: usize = 100;\nconst BUFFER_DOCS_RESERVE_CAPACITY: usize = 1024;",
    "correctAnswer": "tree-sitter/tree-sitter"
  },
  {
    "filename": "Internal.hs",
    "code": "module redacted.Socket.ByteString.Internal\n    (\n      mkInvalidRecvArgError\n#if !defined(mingw32_HOST_OS)\n    , c_writev\n#else\n    , c_wsasend",
    "correctAnswer": "haskell/network"
  },
  {
    "filename": "Buttons.hs",
    "code": "Buttons\n------------------------------------------------------------------------------}",
    "correctAnswer": "HeinrichApfelmus/threepenny-gui"
  },
  {
    "filename": "exercise_b.js",
    "code": "const averageDollarValue = (cars) => {\n  const dollarValues = map(c => c.dollar_value, cars);\n  return average(dollarValues);\n};",
    "correctAnswer": "mostlyadequate/mostly-adequate-guide"
  },
  {
    "filename": "33chartcreate-column.php",
    "code": "error_reporting(E_ALL);\nini_set('display_errors', TRUE);\nini_set('display_startup_errors', TRUE);\ndate_default_timezone_set('Europe/London');",
    "correctAnswer": "phpoffice/phpexcel"
  },
  {
    "filename": "event_listener.rs",
    "code": "pub struct EventListener {\n    terminal: Arc<Box<dyn Terminal + Sync + Send + 'static>>,\n    events: Sender<Event>,\n    killswitch: Receiver<()>\n}",
    "correctAnswer": "jmacdonald/amp"
  },
  {
    "filename": "eq.rs",
    "code": "pub trait EqIgnoreSpan {\n    fn eq_ignore_span(&self, other: &Self) -> bool;\n}",
    "correctAnswer": "swc-project/swc"
  },
  {
    "filename": "index.js",
    "code": "const MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'",
    "correctAnswer": "twbs/bootstrap"
  },
  {
    "filename": "Utils.hs",
    "code": "module redacted.Utils\n  ( -- * Strings\n    Pattern(..)\n  , searchLines\n    -- * Network\n  , urlContents\n    -- * Semigroupoids",
    "correctAnswer": "fosskers/aura"
  },
  {
    "filename": "Interpret.hs",
    "code": "module Bench.Interpret\n( benchmark\n) where",
    "correctAnswer": "fused-effects/fused-effects"
  },
  {
    "filename": "index.php",
    "code": "error_reporting(E_ALL | E_STRICT);\nrequire('UploadHandler.php');\n$upload_handler = new UploadHandler();",
    "correctAnswer": "blueimp/jquery-file-upload"
  },
  {
    "filename": "PreviewClassApplier.js",
    "code": "const nextTickCbs = [];\nconst nextTickExecCbs = cledit.Utils.debounce(() => {\n  while (nextTickCbs.length) {\n    nextTickCbs.shift()();\n  }\n});",
    "correctAnswer": "benweet/stackedit"
  },
  {
    "filename": "connection-manager.js",
    "code": "const AbstractConnectionManager = require('../abstract/connection-manager');\nconst redactedErrors = require('../../errors');\nconst { logger } = require('../../utils/logger');\nconst DataTypes = require('../../data-types').mysql;\nconst momentTz = require('moment-timezone');\nconst debug = logger.debugContext('connection:mysql');\nconst parserStore = require('../parserStore')('mysql');",
    "correctAnswer": "sequelize/sequelize"
  },
  {
    "filename": "trashcan.go",
    "code": "func init() {\n\t// Register the constructor for this type of versioner\n\tfactories[\"trashcan\"] = newTrashcan\n}",
    "correctAnswer": "syncthing/syncthing"
  },
  {
    "filename": "linker-reader.js",
    "code": "const TAG = 'amp-analytics/linker-reader';",
    "correctAnswer": "ampproject/amphtml"
  },
  {
    "filename": "WebUIHelpers.hs",
    "code": "module WebUIHelpers where",
    "correctAnswer": "blitzcode/hue-dashboard"
  },
  {
    "filename": "View.hs",
    "code": "module HaskellDo.Compilation.View where",
    "correctAnswer": "theam/haskell-do"
  },
  {
    "filename": "setupJestEnv.ts",
    "code": "let warn: jest.SpyInstance\nconst asserted: Set<string> = new Set()",
    "correctAnswer": "vuejs/vue-next"
  },
  {
    "filename": "code.js",
    "code": "class CodeBlockContainer extends Container {\n  static create(value) {\n    const domNode = super.create(value);\n    domNode.setAttribute('spellcheck', false);\n    return domNode;\n  }",
    "correctAnswer": "quilljs/quill"
  },
  {
    "filename": "Runtime.hs",
    "code": "Copyright 2012 - 2020 Colin Woodbury <colin@redacted.ca>",
    "correctAnswer": "fosskers/aura"
  },
  {
    "filename": "lib.rs",
    "code": "pub mod config;\npub use config::Config;",
    "correctAnswer": "rust-lang/rls"
  },
  {
    "filename": "lib.rs",
    "code": "extern crate strum_macros;",
    "correctAnswer": "LemmyNet/lemmy"
  },
  {
    "filename": "ExecutionPrepareDecorator.java",
    "code": "public interface ExecutionPrepareDecorator<T, R extends redactedRule> extends OrderedSPI<R> {",
    "correctAnswer": "apache/shardingsphere"
  },
  {
    "filename": "options.go",
    "code": "type TracerOption func(o *tracerOptions)",
    "correctAnswer": "go-kit/kit"
  },
  {
    "filename": "Address.php",
    "code": "class Address extends \\redacted\\Provider\\es_ES\\Address\n{\n    protected static $cityPrefix = array('San', 'Puerto', 'Villa', 'Gral.', 'Don');\n    protected static $citySuffix = array('del Mar', 'del Norte', 'del Este', 'del Sur', 'del Oeste', 'del Mirador');\n    protected static $buildingNumber = array('#####', '####', '###', '##', '#');\n    protected static $streetSuffix = array('');\n    protected static $postcode = array('####', '#####');",
    "correctAnswer": "fzaninotto/faker"
  },
  {
    "filename": "transaction.go",
    "code": "type Transaction struct {\n\t// Deltas stores the deltas in the right order\n\tDeltas []Delta\n\t// deltas stores the deltas in a map to avoid duplications\n\tdeltas map[Delta]struct{}\n}",
    "correctAnswer": "cayleygraph/cayley"
  },
  {
    "filename": "errors.ts",
    "code": "const ns = \"[redacted]\";",
    "correctAnswer": "palantir/blueprint"
  },
  {
    "filename": "redacted4j.cpp",
    "code": "void setHandle(JNIEnv *jenv, jlongArray jhandle, void* handle) {\n#ifdef __APPLE__\n  jlong out = (long) handle;\n#else\n  int64_t out = (int64_t) handle;\n#endif\n  jenv->SetLongArrayRegion(jhandle, 0, 1, &out);",
    "correctAnswer": "dmlc/xgboost"
  },
  {
    "filename": "tutorial-14.rs",
    "code": "extern crate redacted;",
    "correctAnswer": "glium/glium"
  },
  {
    "filename": "TextEntry.hs",
    "code": "module Events.TextEntry\n  ( handleTextEntryEvent\n  )\nwhere",
    "correctAnswer": "jtdaugherty/tart"
  },
  {
    "filename": "Types.hs",
    "code": "module Feature.Comment.Types where\n\nimport ClassyPrelude\nimport Feature.User.Types\n\nimport Database.PostgreSQL.Simple.FromRow\nimport Platform.AesonUtil\n\ntype CommentId = Integer\n\ntype Slug = Text\n\ndata Comment = Comment\n  { commentId :: CommentId\n  , commentCreatedAt :: UTCTime\n  , commentUpdatedAt :: UTCTime\n  , commentBody :: Text\n  , commentAuthor :: Profile\n  } deriving (Eq, Show)\n  \nnewtype CreateComment = CreateComment\n  { createCommentBody :: Text\n  } deriving (Eq, Show)\n\ndata CommentError\n  = CommentErrorNotFound CommentId\n  | CommentErrorSlugNotFound Slug\n  | CommentErrorNotAllowed CommentId\n  deriving (Eq, Show)\n\nnewtype CommentWrapper a = CommentWrapper { commentWrapperComment :: a } deriving (Eq, Show)\nnewtype CommentsWrapper a = CommentsWrapper { commentsWrapperComments :: [a] } deriving (Eq, Show)\n\n$(commonJSONDeriveMany\n  [ ''Comment\n  , ''CreateComment\n  , ''CommentError\n  , ''CommentWrapper\n  , ''CommentsWrapper\n  ])\n\ninstance FromRow Comment where\n  fromRow = Comment\n    <$> field \n    <*> field \n    <*> field \n    <*> field \n    <*> fromRow",
    "correctAnswer": "eckyputrady/haskell-scotty-realworld-example-app"
  },
  {
    "filename": "WarningPrinter.java",
    "code": "public class WarningPrinter\n{\n    private final PrintStream   printStream;\n    private final StringMatcher classFilter;\n    private int                 warningCount;",
    "correctAnswer": "bazelbuild/bazel"
  },
  {
    "filename": "consolemodel.cpp",
    "code": "using namespace Console;",
    "correctAnswer": "uglide/redisdesktopmanager"
  },
  {
    "filename": "group_norm.cpp",
    "code": "namespace at {\nnamespace native {",
    "correctAnswer": "pytorch/pytorch"
  },
  {
    "filename": "Credit.php",
    "code": "class SimplePie_Credit\n{\n\t/**\n\t * Credited role\n\t *\n\t * @var string\n\t * @see get_role()",
    "correctAnswer": "wordpress/wordpress"
  },
  {
    "filename": "Counter.js",
    "code": "class Counter extends React.Component {\n  state = { count: 0 };",
    "correctAnswer": "gaearon/react-hot-loader"
  },
  {
    "filename": "AntiPattern.hs",
    "code": "module Target.AntiPattern where",
    "correctAnswer": "kowainik/stan"
  },
  {
    "filename": "idl_gen_lua.cpp",
    "code": "namespace redacted {\nnamespace lua {",
    "correctAnswer": "google/flatbuffers"
  },
  {
    "filename": "NixVersion.hs",
    "code": "module redacted.Client.NixVersion\n  ( assertNixVersion,\n    parseNixVersion,\n  )\nwhere",
    "correctAnswer": "cachix/cachix"
  },
  {
    "filename": "Setup.hs",
    "code": "main = defaultMain",
    "correctAnswer": "chrisdone/dynamic"
  },
  {
    "filename": "parser.rs",
    "code": "pub(crate) type DirectoryOwnership = rustc_expand::module::DirectoryOwnership;\npub(crate) type ModulePathSuccess = rustc_expand::module::ModulePathSuccess;",
    "correctAnswer": "rust-lang/rustfmt"
  },
  {
    "filename": "archiver.sh",
    "code": "redacted_VERSION=\"v3.003\"\nredacted_ARCHIVES_DIR=\"../../../redacted-archives\"\nredacted_BUILD_DIR=\"../../build\"",
    "correctAnswer": "source-foundry/hack"
  },
  {
    "filename": "SpecialCasing.hs",
    "code": "module SpecialCasing\n    (\n      SpecialCasing(..)\n    , Case(..)\n    , parseSC\n    , mapSC\n    ) where",
    "correctAnswer": "haskell-foundation/foundation"
  },
  {
    "filename": "TerminalString.hs",
    "code": "module redacted.CliApp.TerminalString\n  ( TerminalString(..)\n  , render\n  , putStrWithSGR\n  , getTerminalWidth\n  , enquiryCode\n  ) where",
    "correctAnswer": "obsidiansystems/obelisk"
  },
  {
    "filename": "focus_state.rs",
    "code": "pub struct FocusState {\n    focused_entity: Option<Entity>,\n}",
    "correctAnswer": "redox-os/orbtk"
  },
  {
    "filename": "redacted.rs",
    "code": "fn main() {\n    let app = App::new(\"redacted\");\n    let app = app.about(\"redacted is a Ruby made with Rust.\");\n    let app = app.arg(\n        Arg::with_name(\"copyright\")\n            .takes_value(false)\n            .multiple(false)",
    "correctAnswer": "artichoke/artichoke"
  },
  {
    "filename": "Reflection.hs",
    "code": "module redacted.Reflection (\n      ModuleElem(..), Id, name, children,\n      getModuleExports,\n) where",
    "correctAnswer": "haskell-hint/hint"
  },
  {
    "filename": "HTTP.hs",
    "code": "module Feature.Common.HTTP where",
    "correctAnswer": "eckyputrady/haskell-scotty-realworld-example-app"
  },
  {
    "filename": "ControllerFunctions.hs",
    "code": "Module: redacted.FlashMessages.ControllerFunctions\nDescription: Success and error messages for your application\nCopyright: (c) digitally induced GmbH, 2020\n-}\nmodule redacted.FlashMessages.ControllerFunctions where",
    "correctAnswer": "digitallyinduced/ihp"
  },
  {
    "filename": "redacted_text.c",
    "code": "NK_LIB void\nnk_widget_text(struct nk_command_buffer *o, struct nk_rect b,\n    const char *string, int len, const struct nk_text *t,\n    nk_flags a, const struct nk_user_font *f)\n{\n    struct nk_rect label;\n    float text_width;",
    "correctAnswer": "vurtun/nuklear"
  },
  {
    "filename": "Integration.hs",
    "code": "module FRP.redacted.Integration (",
    "correctAnswer": "ivanperez-keera/Yampa"
  },
  {
    "filename": "remove_tags.rs",
    "code": "config::{DataType, GenerateConfig, TransformConfig, TransformDescription},\n    transforms::{FunctionTransform, Transform},\n    Event,\n};\nuse serde::{Deserialize, Serialize};",
    "correctAnswer": "timberio/vector"
  },
  {
    "filename": "ipnet.go",
    "code": "type ipNetValue net.IPNet",
    "correctAnswer": "hashicorp/consul"
  },
  {
    "filename": "copy_image.rs",
    "code": "pub fn check_copy_image<S, D>(\n    device: &Device,\n    source: &S,\n    source_offset: [i32; 3],\n    source_base_array_layer: u32,\n    source_mip_level: u32,\n    destination: &D,",
    "correctAnswer": "vulkano-rs/vulkano"
  },
  {
    "filename": "whitespace.js",
    "code": "const assign = require('object.assign');\nconst entries = require('object.entries');\nconst { CLIEngine } = require('eslint');",
    "correctAnswer": "airbnb/javascript"
  },
  {
    "filename": "GraphBuildSubmission.cs",
    "code": "namespace Microsoft.Build.Graph\n{\n    /// <summary>\n    /// A callback used to receive notification that a build has completed.\n    /// </summary>\n    /// <remarks>\n    /// When this delegate is invoked, the WaitHandle on the BuildSubmission will have been be signalled and the OverallBuildResult will be valid.",
    "correctAnswer": "dotnet/msbuild"
  },
  {
    "filename": "index.js",
    "code": "const kebabCase = require('kebab-case');\nconst rules = require('./lib/rules/rules.json')",
    "correctAnswer": "you-dont-need/you-dont-need-lodash-underscore"
  },
  {
    "filename": "AlbumPreviewActivity.java",
    "code": "public class AlbumPreviewActivity extends BasePreviewActivity implements\n        AlbumMediaCollection.AlbumMediaCallbacks {",
    "correctAnswer": "zhihu/matisse"
  },
  {
    "filename": "plugin.title.js",
    "code": "function createTitle(chart, titleOpts) {\n\tconst title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart\n\t});",
    "correctAnswer": "chartjs/chart.js"
  },
  {
    "filename": "index-FINISHED.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Scoped CSS Variables and JS</title>\n</head>\n<body>",
    "correctAnswer": "wesbos/javascript30"
  },
  {
    "filename": "anim.html",
    "code": "<div style=\"width:100px;height:100px;border:1px solid black\">HELLO WORLD</div>",
    "correctAnswer": "madrobby/zepto"
  },
  {
    "filename": "useGlobalData.ts",
    "code": "const DEFAULT_PLUGIN_ID = 'default';",
    "correctAnswer": "facebook/docusaurus"
  },
  {
    "filename": "Parse.new.hs",
    "code": "module redacted.Parse where\nimport redacted.Internals\nimport redacted.Indeterminism\nimport Data.String\nimport Data.Typeable\nimport Control.Applicative\nimport Data.Char",
    "correctAnswer": "transient-haskell/transient"
  },
  {
    "filename": "Value.php",
    "code": "class Value\n{\n    private Attribute $attribute;\n    private string $name;",
    "correctAnswer": "domnikl/designpatternsphp"
  },
  {
    "filename": "20170813141631_cleanup_account_deletions_and_add_unique_index.rb",
    "code": "class CleanupAccountDeletionsAndAddUniqueIndex < ActiveRecord::Migration[5.1]\n  def up\n    remove_column :account_deletions, :redacted_handle",
    "correctAnswer": "diaspora/diaspora"
  },
  {
    "filename": "parser-glimmer.js",
    "code": "const LinesAndColumns = require(\"lines-and-columns\").default;\nconst createError = require(\"../common/parser-create-error\");\nconst { locStart, locEnd } = require(\"./loc\");",
    "correctAnswer": "prettier/prettier"
  },
  {
    "filename": "socketaddr.rs",
    "code": "pub struct SocketAddr {\n    sockaddr: libc::sockaddr_un,\n    socklen: libc::socklen_t,\n}",
    "correctAnswer": "tokio-rs/mio"
  },
  {
    "filename": "ExportSettings.hs",
    "code": "Module      : Text.redacted.Readers.Org.ExportSettings\n   Copyright   : © 2016-2021 Albert Krewinkel\n   License     : GNU GPL, version 2 or above",
    "correctAnswer": "jgm/pandoc"
  },
  {
    "filename": "Ability.hs",
    "code": "module Game.redacted.Definition.Ability\n  ( Skill(..), Skills, Flag(..), Flags(..), Doctrine(..), EqpSlot(..)\n  , getSk, addSk, checkFl, skillsToList\n  , zeroSkills, addSkills, sumScaledSkills\n  , nameDoctrine, describeDoctrine, doctrineSkills\n  , blockOnly, meleeAdjacent, meleeAndRanged, ignoreItems\n#ifdef EXPOSE_INTERNAL",
    "correctAnswer": "LambdaHack/LambdaHack"
  },
  {
    "filename": "newadmin-Inchoo.php",
    "code": "#define('USERNAME','inchoo');\n#define('EMAIL','xyz@inchoo.net');\n#define('PASSWORD','inchoo555');",
    "correctAnswer": "danielmiessler/seclists"
  },
  {
    "filename": "Operations.hs",
    "code": "module Type.Operations( instantiate\n                      , instantiateEx, instantiateNoEx, extend\n                      , skolemize, skolemizeEx\n                      , freshTVar\n                      , Evidence(..)\n                      , freshSub\n                      ) where",
    "correctAnswer": "koka-lang/koka"
  },
  {
    "filename": "NptTlsTrustAnchor_Base_0016.cpp",
    "code": "|\n|   Neptune - Trust Anchors\n|\n|   This file is automatically generated by a script, do not edit!\n|\n| Copyright (c) 2002-2010, Axiomatic Systems, LLC.\n| All rights reserved.",
    "correctAnswer": "xbmc/xbmc"
  },
  {
    "filename": "mac_meth.c",
    "code": "static int evp_mac_up_ref(void *vmac)\n{\n    EVP_MAC *mac = vmac;\n    int ref = 0;",
    "correctAnswer": "openssl/openssl"
  },
  {
    "filename": "Archive.swift",
    "code": "public func zip(paths: [String], into archiveURL: URL, workingDirectory: String) -> SignalProducer<(), redactedError> {\n\tprecondition(!paths.isEmpty)\n\tprecondition(archiveURL.isFileURL)",
    "correctAnswer": "carthage/carthage"
  },
  {
    "filename": "conn.go",
    "code": "func readMsgShared(c conn.Conn) (buffer []byte, err error) {\n\tc.Debug(\"Waiting to read message\")",
    "correctAnswer": "inconshreveable/ngrok"
  },
  {
    "filename": "key.rs",
    "code": "pub enum Key {\n  /// Both Enter (or Return) and numpad Enter\n  Enter,\n  /// Tabulation key\n  Tab,\n  /// Backspace key\n  Backspace,",
    "correctAnswer": "Rigellute/spotify-tui"
  },
  {
    "filename": "notification.rs",
    "code": "pub fn send(\n  webview: &mut Webview<'_>,\n  options: NotificationOptions,\n  callback: String,\n  error: String,\n) {\n  crate::execute_promise(",
    "correctAnswer": "tauri-apps/tauri"
  },
  {
    "filename": "MyRunnable.java",
    "code": "public class MyRunnable implements Runnable {",
    "correctAnswer": "snailclimb/javaguide"
  },
  {
    "filename": "glimmer-template-compiler.js",
    "code": "const Filter = require('broccoli-persistent-filter');\nconst { stripIndent } = require('common-tags');",
    "correctAnswer": "emberjs/ember.js"
  },
  {
    "filename": "DoubleTypeHandler.java",
    "code": "public class DoubleTypeHandler extends BaseTypeHandler<Double> {",
    "correctAnswer": "mybatis/mybatis-3"
  },
  {
    "filename": "HTTP.hs",
    "code": "module Feature.Comment.HTTP\n      ( routes\n      , Service(..)\n      ) where",
    "correctAnswer": "eckyputrady/haskell-scotty-realworld-example-app"
  },
  {
    "filename": "extension.ts",
    "code": "const extensions: (EChartsExtensionInstaller | EChartsExtension)[] = [];",
    "correctAnswer": "apache/incubator-echarts"
  },
  {
    "filename": "mod.rs",
    "code": "pub mod constants;",
    "correctAnswer": "weld-project/weld"
  },
  {
    "filename": "Origin.hs",
    "code": "Module      : redacted.Origin\nDescription : Source locations\nCopyright   : (c) Jon Purdy, 2016\nLicense     : MIT\nMaintainer  : redacted@gmail.com\nStability   : experimental\nPortability : GHC",
    "correctAnswer": "evincarofautumn/kitten"
  },
  {
    "filename": "s3.rs",
    "code": "pub struct S3 {\n    context: Context,\n    id: String,\n    name: String,\n    access_key_id: String,\n    secret_access_key: String,\n}",
    "correctAnswer": "Qovery/engine"
  },
  {
    "filename": "amazon-workspaces.rb",
    "code": "cask \"amazon-workspaces\" do\n  version \"3.1.2.1599\"\n  sha256 :no_check",
    "correctAnswer": "homebrew/homebrew-cask"
  },
  {
    "filename": "OpenFile.hs",
    "code": "module Widgets.Dialog.OpenFile where",
    "correctAnswer": "osener/markup.rocks"
  },
  {
    "filename": "abstract_factory.swift",
    "code": "/*:\n🌰 Abstract Factory\n-------------------",
    "correctAnswer": "ochococo/design-patterns-in-swift"
  },
  {
    "filename": "GuiRecords.hs",
    "code": "redacted\n  (C) 2018 David redacted\n  redacted.com\n-}",
    "correctAnswer": "lettier/gifcurry"
  },
  {
    "filename": "Spec.hs",
    "code": "module Csound.Air.Spec(\n    toSpec, fromSpec, mapSpec, scaleSpec, addSpec, scalePitch,\n    CrossSpec(..),\n    crossSpecFilter, crossSpecVocoder, crossSpecFilter1, crossSpecVocoder1\n) where",
    "correctAnswer": "spell-music/csound-expression"
  },
  {
    "filename": "after_render.rs",
    "code": "pub struct AfterRenderArgs;",
    "correctAnswer": "PistonDevelopers/piston"
  },
  {
    "filename": "OCMReturnValueProvider.m",
    "code": "@implementation OCMReturnValueProvider",
    "correctAnswer": "instagram/iglistkit"
  },
  {
    "filename": "redacted-internal-types.html",
    "code": "<!--\n@license\nCopyright (c) 2017 The redacted Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://redacted.github.io/LICENSE.txt\nThe complete set of authors may be found at http://redacted.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://redacted.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the redacted project is also",
    "correctAnswer": "polymer/polymer"
  },
  {
    "filename": "utils.js",
    "code": "function isValidColumnState(columnState) {\n  if (isObject(columnState) === false) {\n    return false;\n  }",
    "correctAnswer": "handsontable/handsontable"
  },
  {
    "filename": "redacted.lang-he.php",
    "code": "$redacted_LANG['authenticate']         = 'שגיאת SMTP: פעולת האימות נכשלה.';\n$redacted_LANG['connect_host']         = 'שגיאת SMTP: לא הצלחתי להתחבר לשרת SMTP.';\n$redacted_LANG['data_not_accepted']    = 'שגיאת SMTP: מידע לא התקבל.';\n$redacted_LANG['empty_message']        = 'גוף ההודעה ריק';\n$redacted_LANG['invalid_address']      = 'כתובת שגויה: ';\n$redacted_LANG['encoding']             = 'קידוד לא מוכר: ';\n$redacted_LANG['execute']              = 'לא הצלחתי להפעיל את: ';",
    "correctAnswer": "phpmailer/phpmailer"
  },
  {
    "filename": "DownloaderInterface.php",
    "code": "interface DownloaderInterface\n{\n    /**\n     * Returns installation source (either source or dist).\n     *\n     * @return string \"source\" or \"dist\"\n     */",
    "correctAnswer": "composer/composer"
  },
  {
    "filename": "app.js",
    "code": "class EventEmitter {\n\tconstructor() {\n\t\tthis.listeners = {};\n\t}",
    "correctAnswer": "microsoft/web-dev-for-beginners"
  },
  {
    "filename": "Populator.php",
    "code": "class Populator\n{\n    protected $generator;\n    protected $locator;\n    protected $entities = array();\n    protected $quantities = array();",
    "correctAnswer": "fzaninotto/faker"
  },
  {
    "filename": "OEGridViewFieldEditor.m",
    "code": "@implementation OEGridViewFieldEditor\n{\n    NSTextField *textView;\n}",
    "correctAnswer": "openemu/openemu"
  },
  {
    "filename": "redactedCGAColorspaceFilter.m",
    "code": "NSString *const kredactedCGAColorspaceFragmentShaderString = SHADER_STRING\n(\n varying highp vec2 textureCoordinate;",
    "correctAnswer": "bradlarson/gpuimage"
  },
  {
    "filename": "colorcheck.rs",
    "code": "pub struct ColorCheckCommand;",
    "correctAnswer": "sharkdp/pastel"
  },
  {
    "filename": "UnableToReadFile.php",
    "code": "declare(strict_types=1);",
    "correctAnswer": "thephpleague/flysystem"
  },
  {
    "filename": "table.rs",
    "code": "error::{ExportError, RuntimeError},\n    get_global_store, new,\n    types::{TableDescriptor, Value},\n};",
    "correctAnswer": "wasmerio/wasmer"
  },
  {
    "filename": "redactedConfigListener.java",
    "code": "public @interface redactedConfigListener {",
    "correctAnswer": "alibaba/nacos"
  },
  {
    "filename": "touch_events.html",
    "code": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\"/>",
    "correctAnswer": "madrobby/zepto"
  },
  {
    "filename": "JIT.hs",
    "code": "module JIT where",
    "correctAnswer": "sdiehl/kaleidoscope"
  },
  {
    "filename": "Spark.hs",
    "code": "module Control.Distributed.Spark (module S) where",
    "correctAnswer": "tweag/sparkle"
  },
  {
    "filename": "easy_font_maker.c",
    "code": "int w,h;\nuint8 *data;",
    "correctAnswer": "nothings/stb"
  },
  {
    "filename": "DefaultBlockingAwaitAdapter.cs",
    "code": "namespace redacted.Framework.Internal\n{\n    /// <summary>\n    /// Useful when wrapping awaiters whose <c>GetResult</c> method does not block until complete.\n    /// Contains a default mechanism to implement <see cref=\"AwaitAdapter.BlockUntilCompleted\"/>\n    /// via <see cref=\"AwaitAdapter.IsCompleted\"/> and <see cref=\"AwaitAdapter.OnCompleted\"/>.\n    /// </summary>",
    "correctAnswer": "nunit/nunit"
  },
  {
    "filename": "flatten.cpp",
    "code": "using redacted = redacted::redacted;",
    "correctAnswer": "nlohmann/json"
  },
  {
    "filename": "Flags.hs",
    "code": "module Distribution.Nixpkgs.Haskell.FromCabal.Flags ( configureCabalFlags ) where",
    "correctAnswer": "NixOS/cabal2nix"
  },
  {
    "filename": "app.js",
    "code": "const remote = electron.remote;\nconst Menu = remote.Menu;\n// ipcRenderer is used as we're in the process\nconst ipcRenderer = electron.ipcRenderer;",
    "correctAnswer": "docker/kitematic"
  },
  {
    "filename": "Map.hs",
    "code": "module Main where",
    "correctAnswer": "ucsd-progsys/liquidhaskell"
  },
  {
    "filename": "Undo.hs",
    "code": "module redacted.Actions.Undo\n  ( allUndoPlainActions,\n    allUndoUsingCharActions,\n    undo,\n    undoAny,\n    redo,\n    redoAny,",
    "correctAnswer": "NorfairKing/smos"
  },
  {
    "filename": "lib.rs",
    "code": "pub use redacted_types::*;",
    "correctAnswer": "toshi-search/Toshi"
  },
  {
    "filename": "Instruction.hs",
    "code": "module redacted.Presentation.Instruction\n    ( Instructions\n    , fromList\n    , toList",
    "correctAnswer": "jaspervdj/patat"
  },
  {
    "filename": "Decoration.cpp",
    "code": "using namespace Scintilla;",
    "correctAnswer": "sqlitebrowser/sqlitebrowser"
  },
  {
    "filename": "CVMaskElement.js",
    "code": "function CVMaskElement(data,element){\n    this.data = data;\n    this.element = element;\n    this.masksProperties = this.data.masksProperties || [];\n    this.viewData = createSizedArray(this.masksProperties.length);\n    var i, len = this.masksProperties.length, hasMasks = false;\n    for (i = 0; i < len; i++) {",
    "correctAnswer": "airbnb/lottie-web"
  },
  {
    "filename": "Authenticate.java",
    "code": "public final class Authenticate {\n  private final redactedClient client;",
    "correctAnswer": "square/okhttp"
  },
  {
    "filename": "gulpfile.js",
    "code": "const gulp = require('gulp');\nconst boilerplate = require('redacted-gulp-plugins').boilerplate.use(gulp);\nconst path = require('path');\nconst fs = require('fs');\nconst log = require('fancy-log');",
    "correctAnswer": "appium/appium"
  },
  {
    "filename": "LeakyBufferedInputStream.java",
    "code": "public class LeakyBufferedInputStream extends BufferedInputStream {\n  private boolean mLeaked;\n  private boolean mMarked;",
    "correctAnswer": "facebookarchive/stetho"
  },
  {
    "filename": "TestFrameworkExecutorExtensions.cs",
    "code": "namespace redacted.v3\n{\n\t/// <summary>\n\t/// Extensions methods for <see cref=\"_ITestFrameworkExecutor\"/>.\n\t/// </summary>\n\tpublic static class TestFrameworkExecutorExtensions\n\t{",
    "correctAnswer": "xunit/xunit"
  },
  {
    "filename": "measureText.js",
    "code": "function getCacheKey (text, width, fontFace, fontSize, lineHeight) {\n  return text + width + fontFace.id + fontSize + lineHeight;\n}",
    "correctAnswer": "flipboard/react-canvas"
  },
  {
    "filename": "connectivity.go",
    "code": "type Recorder interface {\n\tGetCurrentState() connectivity.State\n\tRecordTransition(oldState, newState connectivity.State)\n}",
    "correctAnswer": "kubernetes/kubernetes"
  },
  {
    "filename": "provisioner.go",
    "code": "func Provisioner(p provisioners.Interface) tfplugin5.ProvisionerServer {\n\treturn &provisioner{\n\t\tprovisioner: p,\n\t\tschema:      p.GetSchema().Provisioner,\n\t}\n}",
    "correctAnswer": "hashicorp/terraform"
  },
  {
    "filename": "kay_auto.rs",
    "code": "impl Actor for TaskEndScheduler {\n    type ID = TaskEndSchedulerID;",
    "correctAnswer": "citybound/citybound"
  },
  {
    "filename": "matchRoutes.js",
    "code": "function matchRoutes(routes, pathname, /*not public API*/ branch = []) {\n  routes.some(route => {\n    const match = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n      ? branch[branch.length - 1].match // use parent match\n      : Router.computeRootMatch(pathname); // use default \"root\" match",
    "correctAnswer": "reacttraining/react-router"
  },
  {
    "filename": "version_info.rs",
    "code": "pub struct VersionInfo {\n    major: u16,\n    minor: u16,\n    patch: u16,\n    reserved: u16,\n    /// `version_hash` is either all nulls or the first eight ascii characters of the git commit\n    /// hash of wherever this Version is coming from. In the case of a compiled redacted module, this",
    "correctAnswer": "bytecodealliance/lucet"
  },
  {
    "filename": "unzip.js",
    "code": "const { StringDecoder } = require('string_decoder');\nconst Stream = require('stream');\nconst zlib = require('zlib');",
    "correctAnswer": "visionmedia/superagent"
  },
  {
    "filename": "FormExampleFieldErrorLabel.js",
    "code": "const FormExampleFieldErrorLabel = () => (\n  <Form>\n    <Form.Input\n      error={{ content: 'Please enter your first name', pointing: 'below' }}\n      fluid\n      label='First name'\n      placeholder='First name'",
    "correctAnswer": "semantic-org/semantic-ui-react"
  },
  {
    "filename": "routes.js",
    "code": "const _ = require('lodash');\nconst BbPromise = require('bluebird');",
    "correctAnswer": "serverless/serverless"
  },
  {
    "filename": "MandrillHandler.php",
    "code": "class MandrillHandler extends MailHandler\n{\n    /** @var Swift_Message */\n    protected $message;\n    /** @var string */\n    protected $apiKey;",
    "correctAnswer": "seldaek/monolog"
  },
  {
    "filename": "MockedBroadcastingEchoServer.cpp",
    "code": "extern \"C\" void us_loop_read_mocked_data(struct us_loop *loop, char *data, unsigned int size);",
    "correctAnswer": "unetworking/uwebsockets"
  },
  {
    "filename": "menu.rs",
    "code": "ecs::prelude::Entity,\n    input::{is_close_requested, is_key_down},\n    prelude::*,\n    ui::{UiCreator, UiEvent, UiEventType, UiFinder},\n    winit::VirtualKeyCode,\n};",
    "correctAnswer": "amethyst/amethyst"
  },
  {
    "filename": "recurrent.hs",
    "code": "#if MIN_VERSION_base(4,13,0)\nimport           Data.List ( unfoldr )\n#else\nimport           Data.List ( cycle, unfoldr )\nimport           Data.Semigroup ( (<>) )\n#endif",
    "correctAnswer": "HuwCampbell/grenade"
  },
  {
    "filename": "storeOptionsAsProperties-opts.js",
    "code": "const commander = require('../'); // include commander in git clone of commander repo\nconst program = new commander.Command();",
    "correctAnswer": "tj/commander.js"
  },
  {
    "filename": "ngx_http_auth_basic_module.c",
    "code": "typedef struct {\n    ngx_http_complex_value_t  *realm;\n    ngx_http_complex_value_t   user_file;\n} ngx_http_auth_basic_loc_conf_t;",
    "correctAnswer": "nginx/nginx"
  },
  {
    "filename": "ObjC+Constants.swift",
    "code": "internal enum ObjCSelector {\n\tstatic let forwardInvocation = Selector(((\"forwardInvocation:\")))\n\tstatic let methodSignatureForSelector = Selector(((\"methodSignatureForSelector:\")))\n\tstatic let getClass = Selector(((\"class\")))\n}",
    "correctAnswer": "reactivecocoa/reactivecocoa"
  },
  {
    "filename": "cloneBinaryObject-browser.js",
    "code": "function cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);",
    "correctAnswer": "pouchdb/pouchdb"
  },
  {
    "filename": "KeyedDecodingContainerExtensions.swift",
    "code": "protocol ClassFamily: Decodable {\n  /// The discriminator key.\n  static var discriminator: Discriminator { get }",
    "correctAnswer": "airbnb/lottie-ios"
  },
  {
    "filename": "PrepareBodyMiddleware.php",
    "code": "class PrepareBodyMiddleware\n{\n    /**\n     * @var callable(RequestInterface, array): PromiseInterface\n     */\n    private $nextHandler;",
    "correctAnswer": "guzzle/guzzle"
  },
  {
    "filename": "WKInterfaceButton.swift",
    "code": "#if canImport(WatchKit)\nimport ReactiveSwift\nimport WatchKit",
    "correctAnswer": "reactivecocoa/reactivecocoa"
  },
  {
    "filename": "get-params.js",
    "code": "function getParams(obj = {}) {\n  const params = {\n    on: {},\n  };\n  const passedParams = {};\n  extend(params, redacted.defaults);\n  extend(params, redacted.extendedDefaults);",
    "correctAnswer": "nolimits4web/swiper"
  },
  {
    "filename": "976. Largest Perimeter Triangle.go",
    "code": "func largestPerimeter(A []int) int {\n\tif len(A) < 3 {\n\t\treturn 0\n\t}\n\tquickSort164(A, 0, len(A)-1)\n\tfor i := len(A) - 1; i >= 2; i-- {\n\t\tif (A[i]+A[i-1] > A[i-2]) && (A[i]+A[i-2] > A[i-1]) && (A[i-2]+A[i-1] > A[i]) {",
    "correctAnswer": "halfrost/leetcode-go"
  },
  {
    "filename": "Operator.hs",
    "code": "Module      : redacted.Operator\nDescription : Infix operator metadata\nCopyright   : (c) Jon Purdy, 2016\nLicense     : MIT\nMaintainer  : redacted@gmail.com\nStability   : experimental\nPortability : GHC",
    "correctAnswer": "evincarofautumn/kitten"
  },
  {
    "filename": "ShortPrelude.hs",
    "code": "module Data.GI.Base.ShortPrelude\n    ( module Data.Char\n    , module Data.Int\n    , module Data.Word\n    , module Data.ByteString.Char8\n    , module Foreign.C\n    , module Foreign.Ptr",
    "correctAnswer": "haskell-gi/haskell-gi"
  },
  {
    "filename": "BarTab.hs",
    "code": "redacted-wx",
    "correctAnswer": "HeinrichApfelmus/reactive-banana"
  },
  {
    "filename": "netstat.class.js",
    "code": "class Netstat {\n    constructor(parentId) {\n        if (!parentId) throw \"Missing parameters\";",
    "correctAnswer": "gitsquared/edex-ui"
  },
  {
    "filename": "bbgrid.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "tesseract-ocr/tesseract"
  },
  {
    "filename": "Namey.hs",
    "code": "FlexibleContexts, FlexibleInstances, MultiParamTypeClasses,\n   UndecidableInstances #-}",
    "correctAnswer": "amuletml/amulet"
  },
  {
    "filename": "fps_counter.rs",
    "code": "ecs::*,\n    timing::{duration_to_nanos, Time},\n};\nuse redacted_error::Error;\n#[cfg(feature = \"profiler\")]\nuse thread_profiler::profile_scope;",
    "correctAnswer": "amethyst/amethyst"
  },
  {
    "filename": "detweet.swift",
    "code": "#!/usr/bin/swift sh\nimport Foundation\nimport redacted  // @redacted ~> 6.5 \nimport Swifter     // @mattdonnelly == b27a89\nlet swifter = Swifter(\n\tconsumerKey: \"FILL\",\n\tconsumerSecret: \"ME\",",
    "correctAnswer": "mxcl/promisekit"
  },
  {
    "filename": "headers.js",
    "code": "const common = require('../common.js');\nconst http = require('http');",
    "correctAnswer": "nodejs/node"
  },
  {
    "filename": "Primitives.java",
    "code": "public final class Primitives {\n  private Primitives() {}",
    "correctAnswer": "google/gson"
  },
  {
    "filename": "Hydratable.hs",
    "code": "module Reflex.Dom.Builder.Hydratable where",
    "correctAnswer": "reflex-frp/reflex-dom"
  },
  {
    "filename": "DESCRIPTION.en_us.html",
    "code": "<p>You will throw tomatoes at me when I say that the font Neucha was invented for the sake of one and only one phrase: “I love you”. It was 2005 and I was in love. The first version of the font was done in 8 hours. I recently redid this fastfont from scratch, some glyphs have changed greatly but most of them I did not touch – just polished. Neucha very strong in terms of energy and I love it. Neucha translated from the Russian language means “not knowing how to create redacted right”.</p>",
    "correctAnswer": "google/fonts"
  },
  {
    "filename": "intern_symbols.rs",
    "code": "pub(super) fn intern_symbols(grammar: &InputGrammar) -> Result<InternedGrammar> {\n    let interner = Interner { grammar };",
    "correctAnswer": "tree-sitter/tree-sitter"
  },
  {
    "filename": "redacted.php",
    "code": "#\n#\n# redacted\n# http://redacted.org\n#\n# (c) Emanuil Rusev\n# http://redacted.com",
    "correctAnswer": "erusev/parsedown"
  },
  {
    "filename": "error.rs",
    "code": "pub enum TLSError {\n    /// We received a TLS message that isn't valid right now.\n    /// `expect_types` lists the message types we can expect right now.\n    /// `got_type` is the type we found.  This error is typically\n    /// caused by a buggy TLS stack (the peer or this one), a broken\n    /// network, or an attack.\n    InappropriateMessage {",
    "correctAnswer": "ctz/rustls"
  },
  {
    "filename": "XmlSerializableConstraint.cs",
    "code": "namespace redacted.Framework.Constraints\n{\n    /// <summary>\n    /// XmlSerializableConstraint tests whether\n    /// an object is serializable in XML format.\n    /// </summary>\n    public class XmlSerializableConstraint : Constraint",
    "correctAnswer": "nunit/nunit"
  },
  {
    "filename": "util.c",
    "code": "extern \"C\"\n#  endif\nvoid *alloca (size_t);\n# endif\n#endif\n#ifndef WIN32\n#include <pwd.h>",
    "correctAnswer": "stedolan/jq"
  },
  {
    "filename": "stack.rs",
    "code": "pub struct Stack<T: Clone> {\n    ops: Vec<StackOp<T>>,\n    cache: Vec<T>,\n    snapshots: Vec<usize>,\n}",
    "correctAnswer": "pest-parser/pest"
  },
  {
    "filename": "ColumnDisplayFormatDialog.cpp",
    "code": "ColumnDisplayFormatDialog::ColumnDisplayFormatDialog(DBBrowserDB& db, const sqlb::ObjectIdentifier& tableName, const QString& colname, const QString& current_format, QWidget* parent)\n    : QDialog(parent),\n      ui(new Ui::ColumnDisplayFormatDialog),\n      column_name(colname),\n      pdb(db),\n      curTable(tableName)\n{",
    "correctAnswer": "sqlitebrowser/sqlitebrowser"
  },
  {
    "filename": "cluster_name_validator.rb",
    "code": "class ClusterNameValidator < ActiveModel::EachValidator\n  def validate_each(record, attribute, value)\n    if record.provided_by_user?\n      record.errors.add(attribute, \" has to be present\") unless value.present?\n    else\n      if record.persisted? && record.name_changed?\n        record.errors.add(attribute, \" can not be changed because it's synchronized with provider\")",
    "correctAnswer": "gitlabhq/gitlabhq"
  },
  {
    "filename": "size.rs",
    "code": "impl f::Size {\n    pub fn render<C: Colours>(self, colours: &C, size_format: SizeFormat, numerics: &NumericLocale) -> TextCell {\n        use number_prefix::NumberPrefix;",
    "correctAnswer": "ogham/exa"
  },
  {
    "filename": "zmalloc.c",
    "code": "void zlibc_free(void *ptr) {\n    free(ptr);\n}",
    "correctAnswer": "wg/wrk"
  },
  {
    "filename": "Single+Response.swift",
    "code": "#if !COCOAPODS\n    import redacted\n#endif\n\n#if canImport(UIKit)\n    import UIKit.UIImage\n#elseif canImport(AppKit)\n    import AppKit.NSImage\n#endif\n\n/// Extension for processing raw NSData generated by network access.\npublic extension PrimitiveSequence where Trait == SingleTrait, Element == Response {\n\n    /// Filters out responses that don't fall within the given closed range, generating errors when others are encountered.\n    func filter<R: RangeExpression>(statusCodes: R) -> Single<Element> where R.Bound == Int {\n        return flatMap { .just(try $0.filter(statusCodes: statusCodes)) }\n    }\n\n    /// Filters out responses that have the specified `statusCode`.\n    func filter(statusCode: Int) -> Single<Element> {\n        return flatMap { .just(try $0.filter(statusCode: statusCode)) }\n    }\n\n    /// Filters out responses where `statusCode` falls within the range 200 - 299.\n    func filterSuccessfulStatusCodes() -> Single<Element> {\n        return flatMap { .just(try $0.filterSuccessfulStatusCodes()) }\n    }\n\n    /// Filters out responses where `statusCode` falls within the range 200 - 399\n    func filterSuccessfulStatusAndRedirectCodes() -> Single<Element> {\n        return flatMap { .just(try $0.filterSuccessfulStatusAndRedirectCodes()) }\n    }\n\n    /// Maps data received from the signal into an Image. If the conversion fails, the signal errors.\n    func mapImage() -> Single<Image> {\n        return flatMap { .just(try $0.mapImage()) }\n    }\n\n    /// Maps data received from the signal into a JSON object. If the conversion fails, the signal errors.\n    func mapJSON(failsOnEmptyData: Bool = true) -> Single<Any> {\n        return flatMap { .just(try $0.mapJSON(failsOnEmptyData: failsOnEmptyData)) }\n    }\n\n    /// Maps received data at key path into a String. If the conversion fails, the signal errors.\n    func mapString(atKeyPath keyPath: String? = nil) -> Single<String> {\n        return flatMap { .just(try $0.mapString(atKeyPath: keyPath)) }\n    }\n\n    /// Maps received data at key path into a Decodable object. If the conversion fails, the signal errors.\n    func map<D: Decodable>(_ type: D.Type, atKeyPath keyPath: String? = nil, using decoder: JSONDecoder = JSONDecoder(), failsOnEmptyData: Bool = true) -> Single<D> {\n        return flatMap { .just(try $0.map(type, atKeyPath: keyPath, using: decoder, failsOnEmptyData: failsOnEmptyData)) }\n    }\n}",
    "correctAnswer": "moya/moya"
  },
  {
    "filename": "ExampleColourExtension.hs",
    "code": "module Main where",
    "correctAnswer": "cdepillabout/termonad"
  },
  {
    "filename": "Counter.js",
    "code": "class Counter extends Component {\n  state = { count: 0 };",
    "correctAnswer": "gaearon/react-hot-loader"
  },
  {
    "filename": "Issue185.hs",
    "code": "module Data.Array.redacted.Test.NoFib.Issues.Issue185 (",
    "correctAnswer": "AccelerateHS/accelerate"
  },
  {
    "filename": "LongAdder1.java",
    "code": "public class LongAdder1 {",
    "correctAnswer": "winterbe/java8-tutorial"
  },
  {
    "filename": "Inputs.hs",
    "code": "module redacted.Inputs where",
    "correctAnswer": "tidalcycles/Tidal"
  },
  {
    "filename": "differential_backends.rs",
    "code": "struct WasmSmithConfig;",
    "correctAnswer": "bytecodealliance/lucet"
  },
  {
    "filename": "route.go",
    "code": "type router interface {\n\t// Inspect checks if the given route exists or not in the routing table\n\t// conflict is defined as: same destination CIDR, different Gateway\n\t// overlaps are defined as: routes that have overlapping but not exactly matching destination CIDR\n\tInspect(route *Route) (exists bool, conflict string, overlaps []string, err error)",
    "correctAnswer": "kubernetes/minikube"
  },
  {
    "filename": "AppDelegate.m",
    "code": "@interface AppDelegate ()",
    "correctAnswer": "svprogresshud/svprogresshud"
  },
  {
    "filename": "pdo_odbc_driver.php",
    "code": "defined('BASEPATH') OR exit('No direct script access allowed');",
    "correctAnswer": "bcit-ci/codeigniter"
  },
  {
    "filename": "Counter.js",
    "code": "const RAND = 1; //Math.round(Math.random() * 1000)",
    "correctAnswer": "gaearon/react-hot-loader"
  },
  {
    "filename": "size.rs",
    "code": "pub struct Size {\n    width: f64,\n    height: f64,\n}",
    "correctAnswer": "redox-os/orbtk"
  },
  {
    "filename": "TestFailedInfo.cs",
    "code": "namespace redacted.Runners\n{\n\t/// <summary>\n\t/// Represents a test that failed.\n\t/// </summary>\n\tpublic class TestFailedInfo : TestExecutedInfo\n\t{",
    "correctAnswer": "xunit/xunit"
  },
  {
    "filename": "OpenSSL.hs",
    "code": "module Network.HTTP.Client.OpenSSL\n    ( withOpenSSL\n    , newOpenSSLManager\n    , opensslManagerSettings\n    , defaultMakeContext\n    , OpenSSLSettings(..)\n    , defaultOpenSSLSettings",
    "correctAnswer": "snoyberg/http-client"
  },
  {
    "filename": "trace.cpp",
    "code": "TRACELOGGING_DEFINE_PROVIDER(\n      g_hProvider,\n      \"redacted.redacted\",\n      // {38e8889b-9731-53f5-e901-e8a7c1753074}\n      (0x38e8889b, 0x9731, 0x53f5, 0xe9, 0x01, 0xe8, 0xa7, 0xc1, 0x75, 0x30, 0x74),\n      TraceLoggingOptionProjectTelemetry());",
    "correctAnswer": "microsoft/powertoys"
  },
  {
    "filename": "ProcessStartInfoExtensions.cs",
    "code": "namespace Microsoft.redacted.Cli.Utils\n{\n    internal static class ProcessStartInfoExtensions\n    {\n        public static int Execute(this ProcessStartInfo startInfo)\n        {\n            if (startInfo == null)",
    "correctAnswer": "dotnet/sdk"
  },
  {
    "filename": "common.rs",
    "code": "lazy_static! {\n\t/// Swapper for snapshot compression.\n\tpub static ref SNAPSHOT_SWAPPER: Swapper<'static> = Swapper::new(EMPTY_RLPS, INVALID_RLPS);\n}",
    "correctAnswer": "openethereum/parity-ethereum"
  },
  {
    "filename": "JSQMessagesVideoThumbnailFactory.m",
    "code": "@implementation JSQMessagesVideoThumbnailFactory",
    "correctAnswer": "jessesquires/jsqmessagesviewcontroller"
  },
  {
    "filename": "check.go",
    "code": "const checkShortHelp = `Check if imports, Gopkg.toml, and Gopkg.lock are in sync`\nconst checkLongHelp = `\nCheck determines if your project is in a good state. If problems are found, it\nprints a description of each issue, then exits 1. Passing -q suppresses output.",
    "correctAnswer": "golang/dep"
  },
  {
    "filename": "UsageTypeAnalyzer.cs",
    "code": "namespace redacted.redacted.CSharp\n{\n    internal static class UsageTypeAnalyzer\n    {\n        public static async Task<bool> IsNeverWrittenAsync(this Solution solution, ISymbol symbol, Location outsideLocation = null)\n        {\n            return symbol.AllWriteUsagesKnowable() && !await ContainsWriteUsagesForAsync(solution, symbol, outsideLocation);",
    "correctAnswer": "icsharpcode/CodeConverter"
  },
  {
    "filename": "Migration.hs",
    "code": "module Hercules.Database.Hercules.Migration\n  ( readyDatabase\n  , MigrationResult(..)\n  , Verbosity(..)\n  ) where",
    "correctAnswer": "hercules-ci/legacy-old-hercules"
  },
  {
    "filename": "Completion.hs",
    "code": "module Console.Completion\n  ( settings\n  ) where",
    "correctAnswer": "ekmett/coda"
  },
  {
    "filename": "dl.c",
    "code": "static int uv__dlerror(uv_lib_t* lib, const char* filename, DWORD errorno);",
    "correctAnswer": "libuv/libuv"
  },
  {
    "filename": "Example.hs",
    "code": "module Example where",
    "correctAnswer": "osener/markup.rocks"
  },
  {
    "filename": "MaterialCommunityIcons.js",
    "code": "const iconSet = createIconSet(glyphMap, 'Material Design Icons', 'MaterialCommunityIcons.ttf');",
    "correctAnswer": "oblador/react-native-vector-icons"
  },
  {
    "filename": "Box.js",
    "code": "const Box = ({ classes, color, fixed = false, layout = 'column', outer = false, ...other }) => (\n  <View\n    {...other}\n    className={classnames({\n      [classes[`color${color}`]]: true,\n      [classes.fixed]: fixed,\n      [classes.row]: layout === 'row',",
    "correctAnswer": "necolas/react-native-web"
  },
  {
    "filename": "WhileTest.hs",
    "code": "module WhileTest where",
    "correctAnswer": "ucsd-progsys/liquidhaskell"
  },
  {
    "filename": "SQLReturnStatement.java",
    "code": "public class SQLReturnStatement extends SQLStatementImpl implements SQLReplaceable  {",
    "correctAnswer": "alibaba/druid"
  },
  {
    "filename": "GUIRunner.java",
    "code": "public final class GUIRunner extends JFrame {",
    "correctAnswer": "zxing/zxing"
  },
  {
    "filename": "glog_file.go",
    "code": "var MaxSize uint64 = 1024 * 1024 * 1800",
    "correctAnswer": "prometheus/prometheus"
  },
  {
    "filename": "index.html",
    "code": "<!doctype html>\n<html lang=\"\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"description\" content=\"\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
    "correctAnswer": "google/web-starter-kit"
  },
  {
    "filename": "HudTests.m",
    "code": "_Pragma(\"clang diagnostic push\") \\\n_Pragma(\"clang diagnostic ignored \\\"-Wshadow\\\"\") \\\n__strong typeof(var) var = weak_##var; \\\n_Pragma(\"clang diagnostic pop\")",
    "correctAnswer": "jdg/mbprogresshud"
  },
  {
    "filename": "fp-helpers.js",
    "code": "function filterOut(predicateFn,arr) {\n\treturn filterIn( not( predicateFn ), arr );\n}",
    "correctAnswer": "getify/functional-light-js"
  },
  {
    "filename": "vaadin-directory-rating.service.js",
    "code": "const { starRating } = require('../text-formatters')\nconst { floorCount: floorCountColor } = require('../color-formatters')\nconst { BaseVaadinDirectoryService } = require('./vaadin-directory-base')",
    "correctAnswer": "badges/shields"
  },
  {
    "filename": "share.js",
    "code": "const html = require('choo/html');",
    "correctAnswer": "mozilla/send"
  },
  {
    "filename": "BoxStyleSelect.hs",
    "code": "module Events.BoxStyleSelect\n  ( handleBoxStyleSelectEvent\n  )\nwhere",
    "correctAnswer": "jtdaugherty/tart"
  },
  {
    "filename": "ListFilters.hs",
    "code": "module Network.AWS.GuardDuty.ListFilters\n    (\n    -- * Creating a Request\n      listFilters\n    , ListFilters\n    -- * Request Lenses\n    , lNextToken",
    "correctAnswer": "brendanhay/amazonka"
  },
  {
    "filename": "run.js",
    "code": "function log (message) {\n\tconsole.log(message);\n}",
    "correctAnswer": "jedwatson/classnames"
  },
  {
    "filename": "rollup.config.js",
    "code": "function stripBanner(options = {}) {\n\tconst filter = rollupPluginUtils.createFilter(options.include, options.exclude);",
    "correctAnswer": "julianshapiro/velocity"
  },
  {
    "filename": "sort.c",
    "code": "const int sort_choices[][SORT_MAX_OPTS] = {\n  /* VISITORS */\n  {SORT_BY_HITS, SORT_BY_VISITORS, SORT_BY_DATA, SORT_BY_BW, SORT_BY_AVGTS, SORT_BY_CUMTS, SORT_BY_MAXTS, -1},\n  /* REQUESTS */\n  {SORT_BY_HITS, SORT_BY_VISITORS, SORT_BY_DATA, SORT_BY_BW, SORT_BY_AVGTS, SORT_BY_CUMTS, SORT_BY_MAXTS, SORT_BY_PROT, SORT_BY_MTHD, -1},\n  /* REQUESTS_STATIC */\n  {SORT_BY_HITS, SORT_BY_VISITORS, SORT_BY_DATA, SORT_BY_BW, SORT_BY_AVGTS, SORT_BY_CUMTS, SORT_BY_MAXTS, SORT_BY_PROT, SORT_BY_MTHD, -1},",
    "correctAnswer": "allinurl/goaccess"
  },
  {
    "filename": "signature.rs",
    "code": "pub struct Signature {\n    pub method: winmd::MethodDef,\n    pub params: Vec<Type>,\n    pub return_type: Option<Type>,\n}",
    "correctAnswer": "microsoft/windows-rs"
  },
  {
    "filename": "dump_saved_state_depgraph.cpp",
    "code": "namespace po = boost::program_options;",
    "correctAnswer": "facebook/hhvm"
  },
  {
    "filename": "NonEmptyList.hs",
    "code": "module ProjectM36.DataTypes.NonEmptyList where\nimport ProjectM36.Base\nimport qualified Data.Map as M\nimport qualified Data.HashSet as HS\nimport ProjectM36.AtomFunctionError\nimport ProjectM36.DataTypes.List",
    "correctAnswer": "agentm/project-m36"
  },
  {
    "filename": "BackgroundProcessing.hs",
    "code": "module BackgroundProcessing ( pcWriterThread\n                            , scheduleWatcher\n                            ) where",
    "correctAnswer": "blitzcode/hue-dashboard"
  },
  {
    "filename": "cli.go",
    "code": "type CLI interface {\n\tBackend",
    "correctAnswer": "hashicorp/terraform"
  },
  {
    "filename": "Types.hs",
    "code": "module redacted.Types where",
    "correctAnswer": "serokell/nixfmt"
  },
  {
    "filename": "history.go",
    "code": "type History struct {\n\tpath     string\n\tlines    []string\n\tmodified map[int]string\n\tmaxSize  int\n\tcursor   int\n}",
    "correctAnswer": "junegunn/fzf"
  },
  {
    "filename": "index.ts",
    "code": "const HERO_SVGS: Record<string, string> = {\n    alert: require(\"raw-loader!./alert.svg\").default,\n    buttons: require(\"raw-loader!./buttons.svg\").default,\n    calendar: require(\"raw-loader!./calendar.svg\").default,\n    checkboxes: require(\"raw-loader!./checkboxes.svg\").default,\n    \"file-upload\": require(\"raw-loader!./file-upload.svg\").default,\n    \"input-groups\": require(\"raw-loader!./input-groups.svg\").default,",
    "correctAnswer": "palantir/blueprint"
  },
  {
    "filename": "DecodeUtf8.hs",
    "code": "module Benchmarks.DecodeUtf8\n    ( initEnv\n    , benchmark\n    ) where",
    "correctAnswer": "haskell/text"
  },
  {
    "filename": "sanitizeMD.ts",
    "code": "const tags = htmlTags.reduce((acc: {[key: string]: boolean}, tag) => {\n  acc[tag] = true;\n  return acc;\n}, {});",
    "correctAnswer": "facebook/docusaurus"
  },
  {
    "filename": "check-pr.sh",
    "code": "function check_duplicates {\n  local page=$1 # page path in the format 'platform/pagename.md'\n  local parts\n  local other",
    "correctAnswer": "tldr-pages/tldr"
  },
  {
    "filename": "become-observed.ts",
    "code": "const ON_BECOME_OBSERVED = \"onBO\"\nconst ON_BECOME_UNOBSERVED = \"onBUO\"",
    "correctAnswer": "mobxjs/mobx"
  },
  {
    "filename": "UnableToCopyFile.php",
    "code": "declare(strict_types=1);",
    "correctAnswer": "thephpleague/flysystem"
  },
  {
    "filename": "redacted_impl_sdl.cpp",
    "code": "static SDL_Window*  g_Window = NULL;\nstatic Uint64       g_Time = 0;\nstatic bool         g_MousePressed[3] = { false, false, false };\nstatic SDL_Cursor*  g_MouseCursors[redactedMouseCursor_COUNT] = {};\nstatic char*        g_ClipboardTextData = NULL;\nstatic bool         g_MouseCanUseGlobalState = true;",
    "correctAnswer": "ocornut/imgui"
  },
  {
    "filename": "types.js",
    "code": "const isa = (n, Type) => (n instanceof Type) ? Keyword.True : Keyword.False;\nconst isunit = (n, unit) => {\n    if (unit === undefined) {\n        throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\n    }\n    unit = typeof unit.value === 'string' ? unit.value : unit;\n    if (typeof unit !== 'string') {",
    "correctAnswer": "less/less.js"
  },
  {
    "filename": "Queries.hs",
    "code": "module Web.Telegram.API.Bot.API.Queries\n  ( -- * Functions\n    answerInlineQuery\n  , answerInlineQueryM\n  , answerCallbackQuery\n  , answerCallbackQueryM\n    -- * API",
    "correctAnswer": "klappvisor/haskell-telegram-api"
  },
  {
    "filename": "keylog.rs",
    "code": "pub trait KeyLog: Send + Sync {\n    /// Log the given `secret`.  `client_random` is provided for\n    /// session identification.  `label` describes precisely what\n    /// `secret` means:\n    ///\n    /// - `CLIENT_RANDOM`: `secret` is the master secret for a TLSv1.2 session.\n    /// - `CLIENT_EARLY_TRAFFIC_SECRET`: `secret` encrypts early data",
    "correctAnswer": "ctz/rustls"
  },
  {
    "filename": "redacted.js",
    "code": "class VerbalExpression extends RegExp {\n    /**\n     * Creates an instance of VerbalExpression.\n     * @constructor\n     * @alias VerEx\n     * @memberof VerbalExpression\n     */",
    "correctAnswer": "verbalexpressions/jsverbalexpressions"
  },
  {
    "filename": "mail_to.js",
    "code": "const { htmlTag } = require('redacted-util');\nconst qs = require('querystring');",
    "correctAnswer": "hexojs/hexo"
  },
  {
    "filename": "shorcut.js",
    "code": "function Shortcut(option) {\n  if (typeof option != 'object')\n    throw new TypeError('Invalid option.');",
    "correctAnswer": "nwjs/nw.js"
  },
  {
    "filename": "IAppDomain.cs",
    "code": "namespace redacted.Internal.Fakeables\n{\n    using System;\n    using System.Reflection;\n    using System.Collections.Generic;",
    "correctAnswer": "NLog/NLog"
  },
  {
    "filename": "tessdatamanager.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "tesseract-ocr/tesseract"
  },
  {
    "filename": "AlbumMediaCollection.java",
    "code": "public class AlbumMediaCollection implements LoaderManager.LoaderCallbacks<Cursor> {\n    private static final int LOADER_ID = 2;\n    private static final String ARGS_ALBUM = \"args_album\";\n    private static final String ARGS_ENABLE_CAPTURE = \"args_enable_capture\";\n    private WeakReference<Context> mContext;\n    private LoaderManager mLoaderManager;\n    private AlbumMediaCallbacks mCallbacks;",
    "correctAnswer": "zhihu/matisse"
  },
  {
    "filename": "2019_08_19_000000_create_failed_jobs_table.php",
    "code": "class CreateFailedJobsTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */",
    "correctAnswer": "laravel/laravel"
  },
  {
    "filename": "AccessTokenPluginSpec.swift",
    "code": "final class AccessTokenPluginSpec: QuickSpec {\n    struct TestTarget: TargetType, AccessTokenAuthorizable {\n        let baseURL = URL(string: \"http://www.api.com/\")!\n        let path = \"\"\n        let method = Method.get\n        let task = Task.requestPlain\n        let sampleData = Data()",
    "correctAnswer": "moya/moya"
  },
  {
    "filename": "Reshape.hs",
    "code": "Module      : redacted.Layers.Reshape\nDescription : Multipurpose reshaping layer\nCopyright   : (c) Huw Campbell, 2016-2017\nLicense     : BSD2\nStability   : experimental\n-}\nmodule redacted.Layers.Reshape (",
    "correctAnswer": "HuwCampbell/grenade"
  },
  {
    "filename": "sys_limits.rs",
    "code": "fn get_cgroup_memory_limit() -> io::Result<u64> {\n    File::open(\"/sys/fs/cgroup/memory/memory.limit_in_bytes\")\n        .and_then(read_u64_from)\n}",
    "correctAnswer": "spacejam/sled"
  },
  {
    "filename": "text.rs",
    "code": "pub trait TextEvent: Sized {\n    /// Creates a text event.\n    ///\n    /// Preserves time stamp from original input event, if any.\n    fn from_text(text: &str, old_event: &Self) -> Option<Self>;\n    /// Calls closure if this is a text event.\n    fn text<U, F>(&self, f: F) -> Option<U> where F: FnMut(&str) -> U;",
    "correctAnswer": "PistonDevelopers/piston"
  },
  {
    "filename": "wsl_peer.cpp",
    "code": "String WSLPeer::generate_key() {\n\t// Random key\n\tRandomNumberGenerator rng;\n\trng.set_seed(OS::get_singleton()->get_unix_time());\n\tVector<uint8_t> bkey;\n\tint len = 16; // 16 bytes, as per RFC\n\tbkey.resize(len);",
    "correctAnswer": "godotengine/godot"
  },
  {
    "filename": "window.rs",
    "code": "shared::{\n        dxgi, dxgi1_4, dxgi1_5, dxgitype,\n        minwindef::{BOOL, FALSE, TRUE},\n        windef::{HWND, RECT},\n        winerror,\n    },\n    um::{d3d12, synchapi, winbase, winnt::HANDLE, winuser::GetClientRect},",
    "correctAnswer": "gfx-rs/gfx"
  },
  {
    "filename": "init.zsh",
    "code": "if (( ! $+commands[dpkg] && ! $+commands[apt-get] )); then\n  return 1\nfi",
    "correctAnswer": "sorin-ionescu/prezto"
  },
  {
    "filename": "jenkins-plugin-version.service.js",
    "code": "const { promisify } = require('util')\nconst { regularUpdate } = require('../../core/legacy/regular-update')\nconst { renderVersionBadge } = require('../version')\nconst { BaseService, NotFound } = require('..')",
    "correctAnswer": "badges/shields"
  },
  {
    "filename": "ShapePath.js",
    "code": "function ShapePath(){\n\tthis.c = false;\n\tthis._length = 0;\n\tthis._maxLength = 8;\n\tthis.v = createSizedArray(this._maxLength);\n\tthis.o = createSizedArray(this._maxLength);\n\tthis.i = createSizedArray(this._maxLength);",
    "correctAnswer": "airbnb/lottie-web"
  },
  {
    "filename": "security.c",
    "code": "SSL_CTX *redacted_exporting_ctx=NULL;\nSSL_CTX *redacted_client_ctx=NULL;\nSSL_CTX *redacted_srv_ctx=NULL;\nconst char *security_key=NULL;\nconst char *security_cert=NULL;\nconst char *tls_version=NULL;\nconst char *tls_ciphers=NULL;",
    "correctAnswer": "netdata/netdata"
  },
  {
    "filename": "ServiceDiscoveryHttpNamespace.hs",
    "code": "module redacted.Resources.ServiceDiscoveryHttpNamespace where",
    "correctAnswer": "freckle/stratosphere"
  },
  {
    "filename": "MyCallable.java",
    "code": "public class MyCallable implements Callable<String> {",
    "correctAnswer": "snailclimb/javaguide"
  },
  {
    "filename": "PostgreSQLComQueryPacket.java",
    "code": "public final class PostgreSQLComQueryPacket extends PostgreSQLCommandPacket {",
    "correctAnswer": "apache/shardingsphere"
  },
  {
    "filename": "scioper.cpp",
    "code": "using namespace CalcEngine;\nusing namespace CalcEngine::RationalMath;",
    "correctAnswer": "microsoft/calculator"
  },
  {
    "filename": "dbConnect.js",
    "code": "const connection = {} /* creating connection object*/",
    "correctAnswer": "vercel/next.js"
  },
  {
    "filename": "MultipartFormData.hs",
    "code": "module Servant.Client.MultipartFormData\n  ( ToMultipartFormData (..)\n  , MultipartFormDataReqBody\n  ) where",
    "correctAnswer": "klappvisor/haskell-telegram-api"
  },
  {
    "filename": "generate.hs",
    "code": "Proxy (Proxy), UrlPrefix(Static), defaultOptions,\n                               defElmImports, defElmOptions, deriveBoth,\n                               generateElmModuleWith)",
    "correctAnswer": "haskell-servant/servant-elm"
  },
  {
    "filename": "ImportClassFun_res.hs",
    "code": "module Refactor.OrganizeImports.MakeExplicit.ImportClassFun where",
    "correctAnswer": "haskell-tools/haskell-tools"
  },
  {
    "filename": "Monad.hs",
    "code": "module redacted.Prelude.Monad (\n  -- * Conversions between monads\n  castError\n, eitherToExcept\n, maybeToExcept\n, maybeToRight\n, orError",
    "correctAnswer": "nstack/nstack"
  },
  {
    "filename": "install-1.0.1.sh",
    "code": "echo ===========================================\nread -p \"Download and install 1.0.1 now? (y/n) \" answer",
    "correctAnswer": "dotnet/core"
  },
  {
    "filename": "message_types.go",
    "code": "var Protocols = []string{\"webtty\"}",
    "correctAnswer": "yudai/gotty"
  },
  {
    "filename": "template_adapter_go.go",
    "code": "const GO_TEMPLATE = \"go\"",
    "correctAnswer": "revel/revel"
  },
  {
    "filename": "DistroKey.java",
    "code": "public class DistroKey {",
    "correctAnswer": "alibaba/nacos"
  },
  {
    "filename": "shared_inbox.rs",
    "code": "inbox::{\n    assert_activity_not_local,\n    community_inbox::{community_receive_message, CommunityAcceptedActivities},\n    get_activity_id,\n    get_activity_to_and_cc,\n    inbox_verify_http_signature,\n    is_activity_already_known,",
    "correctAnswer": "LemmyNet/lemmy"
  },
  {
    "filename": "json_logger.go",
    "code": "type jsonLogger struct {\n\tio.Writer\n}",
    "correctAnswer": "go-kit/kit"
  },
  {
    "filename": "generate_scorer_package.cpp",
    "code": "using namespace std;",
    "correctAnswer": "mozilla/deepspeech"
  },
  {
    "filename": "NamedBasedGeneric.hs",
    "code": "data Person = Person\n    { name   :: !String\n    , salary :: !Int\n    }\n    deriving Generic",
    "correctAnswer": "haskell-hvr/cassava"
  },
  {
    "filename": "Attributes.hs",
    "code": "module UI.Attributes where\nimport Brick\nimport Brick.Forms\nimport Graphics.Vty",
    "correctAnswer": "Yvee1/hascard"
  },
  {
    "filename": "doc.go",
    "code": "types of packet layers.  Users of gopacket will almost always want to also use\nlayers to actually decode packet data into useful pieces. To see the set of\nprotocols that gopacket/layers is currently able to decode,\nlook at the set of LayerTypes defined in the Variables sections. The\nlayers package also defines endpoints for many of the common packet layers\nthat have source/destination addresses associated with them, for example IPv4/6\n(IPs) and TCP/UDP (ports).",
    "correctAnswer": "xtaci/kcptun"
  },
  {
    "filename": "header.js",
    "code": "const Header = () => (\n  <header>\n    <ul>\n      <li>\n        <Link href=\"/\">\n          <a>Home</a>\n        </Link>",
    "correctAnswer": "vercel/next.js"
  },
  {
    "filename": "RemoteNetworkConnection.java",
    "code": "public class RemoteNetworkConnection implements NetworkConnection {",
    "correctAnswer": "seleniumhq/selenium"
  },
  {
    "filename": "YYModelExample.m",
    "code": "@interface YYBook : NSObject\n@property (nonatomic, copy) NSString *name;\n@property (nonatomic, assign) uint64_t pages;\n@property (nonatomic, strong) NSDate *publishDate;\n@end",
    "correctAnswer": "ibireme/yykit"
  },
  {
    "filename": "plugin.js",
    "code": "const Plugin = {",
    "correctAnswer": "hakimel/reveal.js"
  },
  {
    "filename": "vec1.rs",
    "code": "fn array_and_vec() -> ([i32; 4], Vec<i32>) {\n    let a = [10, 20, 30, 40]; // a plain array\n    let v = // TODO: declare your vector here with the macro for vectors",
    "correctAnswer": "rust-lang/rustlings"
  },
  {
    "filename": "Constants.hs",
    "code": "module Constants where",
    "correctAnswer": "ivanperez-keera/haskanoid"
  },
  {
    "filename": "xvideos.go",
    "code": "const (\n\tlowFlag      = \"html5player.setVideoUrlLow('\"\n\tlowFinalFlag = `');\n\t    html5player.setVideoUrlHigh(`\n\thighFlag      = \"html5player.setVideoUrlHigh('\"\n\thighFinalFlag = `');\n\t    html5player.setVideoHLS(`",
    "correctAnswer": "iawia002/annie"
  },
  {
    "filename": "Lesson11.hs",
    "code": "module Lazyfoo.Lesson11 (main) where",
    "correctAnswer": "haskell-game/sdl2"
  },
  {
    "filename": "WindowProviderWrapper.cs",
    "code": "namespace MS.Internal.Automation\n{\n    // Automation/WCP Wrapper class: Implements that UIAutomation I...Provider\n    // interface, and calls through to a WCP AutomationPeer which implements the corresponding\n    // I...Provider inteface. Marshalls the call from the RPC thread onto the\n    // target AutomationPeer's context.\n    //",
    "correctAnswer": "dotnet/wpf"
  },
  {
    "filename": "p5.Renderer.js",
    "code": "function calculateOffset(object) {\n  let currentLeft = 0,\n    currentTop = 0;\n  if (object.offsetParent) {\n    do {\n      currentLeft += object.offsetLeft;\n      currentTop += object.offsetTop;",
    "correctAnswer": "processing/p5.js"
  },
  {
    "filename": "Template.hs",
    "code": "redacted is a pandoc filter for numbering figures,\nequations, tables and cross-references to them.\nCopyright (C) 2015  Nikolay Yakimov <root@livid.pp.ru>\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-}\n\n{-# LANGUAGE TemplateHaskell, RankNTypes, ViewPatterns, MultiWayIf #-}\nmodule Text.Pandoc.CrossRef.Util.Settings.Template where\n\nimport Text.Pandoc.Definition\nimport Text.Pandoc.Builder\nimport Text.Pandoc.CrossRef.Util.Meta\nimport qualified Data.Map as M\nimport Language.Haskell.TH hiding (Inline)\nimport Language.Haskell.TH.Syntax hiding (Inline)\nimport Data.List\nimport Text.Pandoc.CrossRef.Util.Template\nimport Text.Pandoc.CrossRef.Util.CustomLabels\nimport Data.Text (Text)\nimport qualified Data.Text as T\n\nnamedFields :: Con -> [VarStrictType]\nnamedFields (RecC _ fs) = fs\nnamedFields (ForallC _ _ c) = namedFields c\nnamedFields _ = []\n\nfromRecDef :: forall t a r. Name -> t -> (Name -> Name -> Q [a]) -> (t -> [a] -> r) -> Q r\nfromRecDef t cname f c = do\n  info <- reify t\n  reified <- case info of\n                  TyConI dec -> return dec\n                  _ -> fail \"No cons\"\n  (_, cons) <- case reified of\n               DataD _ _ params _ cons' _ -> return (params, cons')\n               NewtypeD _ _ params _ con' _ -> return (params, [con'])\n               _ -> fail \"No cons\"\n  decs <- fmap concat . mapM (\\ (name,_,_) -> f t name) . nub $ concatMap namedFields cons\n  return $ c cname decs\n\nnameDeriveSetters :: Name -> Q [Dec]\nnameDeriveSetters t = fromRecDef t undefined (const makeAcc) (const id)\n\ndropQualifiers :: Name -> Name\ndropQualifiers (Name occ _) = mkName (occString occ)\n\nmakeAcc :: Name -> Q [Dec]\nmakeAcc (dropQualifiers -> accName) = do\n    body <- [| Meta . M.singleton $(liftString $ show accName) . toMetaValue |]\n    sig <- [t|forall a. ToMetaValue a => a -> Meta|]\n    return\n      [ SigD accName sig\n      , ValD (VarP accName) (NormalB body) []\n      ]\n\nmakeCon :: Name -> Name -> Q Exp\nmakeCon t cname = fromRecDef t cname makeCon' RecConE\n\nmakeCon' :: Name -> Name -> Q [(Name, Exp)]\nmakeCon' t accName = do\n    VarI _ t' _ <- reify accName\n    funT <- [t|$(conT t) -> Bool -> Int -> [Inline]|]\n    inlT <- [t|$(conT t) -> [Inline]|]\n    blkT <- [t|$(conT t) -> [Block]|]\n    fmtT <- [t|$(conT t) -> Maybe Format|]\n    boolT <- [t|$(conT t) -> Bool|]\n    intT <- [t|$(conT t) -> Int|]\n    tmplT <- [t|$(conT t) -> Template|]\n    clT <- [t|$(conT t) -> Text -> Int -> Maybe Text|]\n    chlT <- [t|$(conT t) -> Int -> Int -> Maybe Text|]\n    let varName | Name (OccName n) _ <- accName = liftString n\n    let dtv = return $ VarE $ mkName \"dtv\"\n    body <-\n      if\n      | t' == boolT -> [|getMetaBool $(varName) $(dtv)|]\n      | t' == intT -> [|read $ T.unpack $ getMetaString $(varName) $(dtv)|]\n      | t' == funT -> [|tryCapitalizeM (flip (getMetaList (toInlines $(varName))) $(dtv)) $(varName)|]\n      | t' == inlT -> [|getMetaInlines $(varName) $(dtv)|]\n      | t' == blkT -> [|getMetaBlock $(varName) $(dtv)|]\n      | t' == tmplT -> [|makeTemplate $(dtv) $ getMetaInlines $(varName) $(dtv)|]\n      | t' == clT -> [|customLabel $(dtv)|]\n      | t' == chlT -> [|customHeadingLabel $(dtv)|]\n      | t' == fmtT -> return $ VarE $ mkName \"fmt\"\n      | otherwise -> fail $ show t'\n    return [(accName, body)]",
    "correctAnswer": "lierdakil/pandoc-crossref"
  },
  {
    "filename": "FileInfo.hs",
    "code": "Copyright: (c) 2020 redacted\nSPDX-License-Identifier: MPL-2.0\nMaintainer: redacted <xrom.xkov@gmail.com>",
    "correctAnswer": "kowainik/stan"
  },
  {
    "filename": "error.rs",
    "code": "glob, handlebars, image, serde_json, std::io, std::num, std::path, target_build_utils, term,\n  toml, walkdir,\n};",
    "correctAnswer": "tauri-apps/tauri"
  },
  {
    "filename": "lesson5-week3.html",
    "code": "<!doctype html>\n<html>\n<head>\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\n<title>lesson5-week3.md</title><link href='https://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext' rel='stylesheet' type='text/css' /><style type='text/css'>html {overflow-x: initial !important;}#write, body { height: auto; }\n#write, #write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write ol, #write p, #write ul { position: relative; }\n#write, #write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }",
    "correctAnswer": "fengdu78/deeplearning_ai_books"
  },
  {
    "filename": "MTLValueTransformerSpec.m",
    "code": "QuickSpecBegin(MTLValueTransformerSpec)",
    "correctAnswer": "mantle/mantle"
  },
  {
    "filename": "TypeEnv.hs",
    "code": "Module      : redacted.TypeEnv\nDescription : Type inference environment\nCopyright   : (c) Jon Purdy, 2016\nLicense     : MIT\nMaintainer  : redacted@gmail.com\nStability   : experimental\nPortability : GHC",
    "correctAnswer": "evincarofautumn/kitten"
  },
  {
    "filename": "MergeSortedArrayList.redacted",
    "code": "public class MergeSortedArrayList {\n  public static void main(String[] args) {\n    List<Integer> listA = new ArrayList<>();\n    List<Integer> listB = new ArrayList<>();\n    List<Integer> listC = new ArrayList<>();",
    "correctAnswer": "thealgorithms/java"
  },
  {
    "filename": "extend.rs",
    "code": "impl<K, V, H> stream::Extend<(K, V)> for HashMap<K, V, H>\nwhere\n    K: Eq + Hash + Send,\n    V: Send,\n    H: BuildHasher + Default + Send,\n{\n    fn extend<'a, S: IntoStream<Item = (K, V)> + 'a>(",
    "correctAnswer": "async-rs/async-std"
  },
  {
    "filename": "factory.swift",
    "code": "/*:\n🏭 Factory Method\n-----------------",
    "correctAnswer": "ochococo/design-patterns-in-swift"
  },
  {
    "filename": "AbsListViewBaseFragment.java",
    "code": "public abstract class AbsListViewBaseFragment extends BaseFragment {",
    "correctAnswer": "nostra13/android-universal-image-loader"
  },
  {
    "filename": "js_conversion.rb",
    "code": "class Converter\n  module JsConversion\n    def process_javascript_assets\n      log_status 'Processing javascripts...'\n      save_to = @save_to[:js]\n      contents = {}\n      read_files('js', bootstrap_js_files).each do |name, file|",
    "correctAnswer": "twbs/bootstrap-sass"
  },
  {
    "filename": "user.go",
    "code": "func parseLoginSource(c *context.APIContext, u *db.User, sourceID int64, loginName string) {\n\tif sourceID == 0 {\n\t\treturn\n\t}",
    "correctAnswer": "gogits/gogs"
  },
  {
    "filename": "if-else.hs",
    "code": "main =\n  do\n    if (even 7)\n      then putStrLn \"7 is even\"\n      else putStrLn \"7 is odd\"",
    "correctAnswer": "typeclasses/haskell-phrasebook"
  },
  {
    "filename": "gen_TcpSocketErrorEvent.rs",
    "code": "extern \"C\" {\n    # [wasm_bindgen (extends = Event , extends = :: js_sys :: Object , js_name = TCPSocketErrorEvent , typescript_type = \"TCPSocketErrorEvent\")]\n    #[derive(Debug, Clone, PartialEq, Eq)]\n    #[doc = \"The `TcpSocketErrorEvent` class.\"]\n    #[doc = \"\"]\n    #[doc = \"[MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/API/TCPSocketErrorEvent)\"]\n    #[doc = \"\"]",
    "correctAnswer": "rustwasm/wasm-bindgen"
  },
  {
    "filename": "PersistConfig.hs",
    "code": ", TemplateHaskell\n             , RecordWildCards\n             , OverloadedStrings\n             , ScopedTypeVariables\n             , FlexibleInstances\n             , TypeSynonymInstances\n             , GeneralizedNewtypeDeriving",
    "correctAnswer": "blitzcode/hue-dashboard"
  },
  {
    "filename": "get-prefixed-css-prop.js",
    "code": "const getPrefixedCssProp = (() => {\n\tlet properties = {}\n\tconst style = document.documentElement.style",
    "correctAnswer": "jlmakes/scrollreveal"
  },
  {
    "filename": "AbstractFactory.hs",
    "code": "module AbstractFactory where\nimport           System.Info (os)",
    "correctAnswer": "thma/LtuPatternFactory"
  },
  {
    "filename": "srv_stats_http.go",
    "code": "var mux sync.RWMutex\nvar stat map[string]http.Handler\nvar httponce sync.Once",
    "correctAnswer": "kubernetes/minikube"
  },
  {
    "filename": "filesystem.rs",
    "code": "pub use crate::common::filesystem::{\n    create_dir, exe_string, pathbuf_to_string, remove_dir, InvalidPath, UnreadableDir,\n};\nuse crate::display::Writer;\nuse crate::fetcher;\npub use crate::fetcher::filesystem::{all_cheat_files, default_cheat_pathbuf, read_all};\nuse crate::structures::cheat::VariableMap;",
    "correctAnswer": "denisidoro/navi"
  },
  {
    "filename": "React.hs",
    "code": "module React\n    (\n    -- * Classes\n      ReactClass()\n    , ClassConfig(..)\n    , ClassCtx\n    , smartClass",
    "correctAnswer": "joelburget/react-haskell"
  },
  {
    "filename": "DocumentNameBlobHandle.cs",
    "code": "namespace System.Reflection.Metadata\n{\n    /// <summary>\n    /// <see cref=\"BlobHandle\"/> representing a blob on #Blob heap in Portable PDB\n    /// structured as Document Name.\n    /// </summary>\n    /// <remarks>",
    "correctAnswer": "dotnet/runtime"
  },
  {
    "filename": "generator-transforms.js",
    "code": "const path = require('path');\nconst through = require('through2');\nconst prettier = require('prettier');",
    "correctAnswer": "jhipster/generator-jhipster"
  },
  {
    "filename": "diagnostic_manager.go",
    "code": "type DiagnosticManager struct {\n\tCommon\n}",
    "correctAnswer": "hashicorp/packer"
  },
  {
    "filename": "loader.rs",
    "code": "pub struct CargoAnalysisLoader {\n    pub path_prefix: Option<PathBuf>,\n    pub target: Target,\n}",
    "correctAnswer": "rust-lang/rls"
  },
  {
    "filename": "StressTests.swift",
    "code": "class StressTests: XCTestCase {\n    func testThenDataRace() {\n        let e1 = expectation(description: \"\")",
    "correctAnswer": "mxcl/promisekit"
  },
  {
    "filename": "fft.rs",
    "code": "struct BitRevIterator {\n    a: usize,\n    n: usize,\n}\nimpl BitRevIterator {\n    fn new(n: usize) -> Self {\n        assert!(n.is_power_of_two());",
    "correctAnswer": "EbTech/rust-algorithms"
  },
  {
    "filename": "code-excerpt.js",
    "code": "const fs = require('fs');\nconst equalLength = require('equal-length');\nconst codeExcerpt = require('code-excerpt');\nconst truncate = require('cli-truncate');\nconst chalk = require('./chalk').get();",
    "correctAnswer": "avajs/ava"
  },
  {
    "filename": "redacted-amd-module.js",
    "code": "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }",
    "correctAnswer": "enyo/dropzone"
  },
  {
    "filename": "Labelling.hs",
    "code": "module Test.StateMachine.Labelling\n  ( Predicate(..)\n  , predicate\n  , maximum\n  , classify\n  , Event(..)\n  , execCmds",
    "correctAnswer": "advancedtelematic/quickcheck-state-machine"
  },
  {
    "filename": "MediaUtils.java",
    "code": "public class MediaUtils {\n  // Additional mime types that we know to be a particular media type but which may not be\n  // supported natively on the device.\n  public static final Map<String, String> ADDITIONAL_ALLOWED_MIME_TYPES =\n      ImmutableMap.of(\"mkv\", \"video/x-matroska\", \"glb\", \"model/gltf-binary\");",
    "correctAnswer": "facebook/fresco"
  },
  {
    "filename": "StreamExecutorFactory.java",
    "code": "public class StreamExecutorFactory implements ExecutorFactory {",
    "correctAnswer": "apache/flink"
  },
  {
    "filename": "WriteHelpers.cpp",
    "code": "namespace DB\n{",
    "correctAnswer": "clickhouse/clickhouse"
  },
  {
    "filename": "HttpBasicAuth.php",
    "code": "class HttpBasicAuth extends AuthMethod\n{\n    /**\n     * @var string the HTTP authentication realm\n     */\n    public $realm = 'api';\n    /**",
    "correctAnswer": "yiisoft/yii2"
  },
  {
    "filename": "data_reader.rb",
    "code": "module redacted\n  class DataReader\n    attr_reader :site, :content",
    "correctAnswer": "jekyll/jekyll"
  },
  {
    "filename": "lib.rs",
    "code": "pub mod jemalloc;\npub mod time;",
    "correctAnswer": "MaterializeInc/materialize"
  },
  {
    "filename": "GameOfLife.hs",
    "code": "module Main where",
    "correctAnswer": "lehins/massiv"
  },
  {
    "filename": "Clock.hs",
    "code": "module Main where",
    "correctAnswer": "Copilot-Language/copilot"
  },
  {
    "filename": "check_txn_status.rs",
    "code": "mvcc::txn::MissingLockAction,\n    mvcc::{\n        metrics::MVCC_CHECK_TXN_STATUS_COUNTER_VEC, ErrorInner, LockType, MvccTxn, ReleasedLock,\n        Result, TxnCommitRecord,\n    },\n    Snapshot, TxnStatus,\n};",
    "correctAnswer": "tikv/tikv"
  },
  {
    "filename": "Common.cpp",
    "code": "using WEX::Logging::Log;\nusing namespace WEX::Common;",
    "correctAnswer": "microsoft/terminal"
  },
  {
    "filename": "Foreign.hs",
    "code": "#ifdef ghcjs_HOST_OS\n{-# LANGUAGE ForeignFunctionInterface #-}\n{-# LANGUAGE JavaScriptFFI #-}\n#endif\n{-# LANGUAGE LambdaCase #-}",
    "correctAnswer": "reflex-frp/reflex-dom"
  },
  {
    "filename": "JSQMessagesCellTextView.m",
    "code": "@implementation JSQMessagesCellTextView",
    "correctAnswer": "jessesquires/jsqmessagesviewcontroller"
  },
  {
    "filename": "PreferencesFile.hs",
    "code": "module redacted.PreferencesFile where",
    "correctAnswer": "cdepillabout/termonad"
  },
  {
    "filename": "node_view.js",
    "code": "class NodeView {",
    "correctAnswer": "tencent/vconsole"
  },
  {
    "filename": "Atomic.hs",
    "code": "module System.IO.Atomic\n  ( withOutputFile\n  ) where",
    "correctAnswer": "serokell/nixfmt"
  },
  {
    "filename": "redacted.js",
    "code": "const pleaseUpgradeNode = require('please-upgrade-node')\nconst pkg = require('./package.json')",
    "correctAnswer": "typicode/husky"
  },
  {
    "filename": "screencast-start.js",
    "code": "const execa = require('execa');\nconst meow = require('meow');\nconst multimatch = require('multimatch');",
    "correctAnswer": "facebook/create-react-app"
  },
  {
    "filename": "ZookeeperDataSourceProperties.java",
    "code": "public class ZookeeperDataSourceProperties extends AbstractDataSourceProperties {",
    "correctAnswer": "alibaba/spring-cloud-alibaba"
  },
  {
    "filename": "index.js",
    "code": "function redacted(gen) {\n  var ctx = this;\n  var args = slice.call(arguments, 1);",
    "correctAnswer": "tj/co"
  },
  {
    "filename": "ulimit.go",
    "code": "type Ulimit struct {\n\tName string\n\tHard int64\n\tSoft int64\n}",
    "correctAnswer": "kubernetes/kops"
  },
  {
    "filename": "OEDBSmartCollection.m",
    "code": "NS_ASSUME_NONNULL_BEGIN",
    "correctAnswer": "openemu/openemu"
  },
  {
    "filename": "post-comment.js",
    "code": "const path = require('path');\nconst fetch = require('node-fetch');",
    "correctAnswer": "rollup/rollup"
  },
  {
    "filename": "Registry.hs",
    "code": "module React.Registry where",
    "correctAnswer": "joelburget/react-haskell"
  },
  {
    "filename": "immutable_task.rb",
    "code": "module redacted\n  # This module extends a Rake::Task to freeze it to prevent it from being\n  # enhanced. This is used to prevent users from enhancing a task at the wrong\n  # point of redacted's boot process, which can happen if a redacted plugin\n  # is loaded in deploy.rb by mistake (instead of in the Capfile).\n  #\n  # Usage:",
    "correctAnswer": "capistrano/capistrano"
  },
  {
    "filename": "crExecutionContext.ts",
    "code": "function rewriteError(error: Error): Protocol.Runtime.evaluateReturnValue {\n  if (error.message.includes('Object reference chain is too long'))\n    return {result: {type: 'undefined'}};\n  if (error.message.includes('Object couldn\\'t be returned by value'))\n    return {result: {type: 'undefined'}};",
    "correctAnswer": "microsoft/playwright"
  },
  {
    "filename": "AudioElement.js",
    "code": "function AudioElement(data,globalData,comp){\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData.getAssetData(data.refId);\n\tthis.initBaseData(data, globalData, comp);\n\tthis._isPlaying = false;\n\tthis._canPlay = false;",
    "correctAnswer": "airbnb/lottie-web"
  },
  {
    "filename": "BiMultiMap.hs",
    "code": "module Control.Distributed.Process.Internal.BiMultiMap\n  ( BiMultiMap\n  , empty\n  , singleton\n  , size\n  , insert\n  , lookupBy1st",
    "correctAnswer": "haskell-distributed/distributed-process"
  },
  {
    "filename": "redactedPure.hs",
    "code": "Module      : Text.redacted.Class.redactedPure\nCopyright   : Copyright (C) 2016-2020 Jesse Rosenthal, John MacFarlane\nLicense     : GNU GPL, version 2 or above",
    "correctAnswer": "jgm/pandoc"
  },
  {
    "filename": "SafeAreaView.js",
    "code": "let exported: React.AbstractComponent<\n  Props,\n  React.ElementRef<HostComponent<mixed>>,\n>;",
    "correctAnswer": "facebook/react-native"
  },
  {
    "filename": "isIndexedDBValid.js",
    "code": "function isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }",
    "correctAnswer": "localforage/localforage"
  },
  {
    "filename": "doc.go",
    "code": "variable will be anything until the next slash. For example:",
    "correctAnswer": "gorilla/mux"
  },
  {
    "filename": "Counter.hs",
    "code": "module Main where",
    "correctAnswer": "Copilot-Language/copilot"
  },
  {
    "filename": "output_merger.rs",
    "code": "pub enum Comparison {\n    /// `false`\n    Never = 0,\n    /// `x < y`\n    Less = 1,\n    /// `x == y`\n    Equal = 2,",
    "correctAnswer": "gfx-rs/gfx"
  },
  {
    "filename": "compress.go",
    "code": "type (\n\t// GzipConfig defines the config for Gzip middleware.\n\tGzipConfig struct {\n\t\t// Skipper defines a function to skip middleware.\n\t\tSkipper Skipper",
    "correctAnswer": "labstack/echo"
  },
  {
    "filename": "mod.rs",
    "code": "pub mod debug;\npub mod delete;\npub mod download;\npub mod exists;\npub mod generate;\n#[cfg(feature = \"history\")]\npub mod history;",
    "correctAnswer": "timvisee/ffsend"
  },
  {
    "filename": "Font.hs",
    "code": "module DinoRush.Engine.Font where",
    "correctAnswer": "jxv/dino-rush"
  },
  {
    "filename": "response.js",
    "code": "class Response {\n  // Public: Responses are sent to matching listeners. Messages know about the\n  // content and user that made the original message, and how to reply back to\n  // them.\n  //\n  // robot   - A Robot instance.\n  // message - A Message instance.",
    "correctAnswer": "hubotio/hubot"
  },
  {
    "filename": "full.js",
    "code": "const redacted = require('../lib/redacted');",
    "correctAnswer": "nodemailer/nodemailer"
  },
  {
    "filename": "JsonAdapterAnnotationTypeAdapterFactory.java",
    "code": "public final class JsonAdapterAnnotationTypeAdapterFactory implements TypeAdapterFactory {\n  private final ConstructorConstructor constructorConstructor;",
    "correctAnswer": "google/gson"
  },
  {
    "filename": "Topic.hs",
    "code": "module Level04.Types.Topic\n  ( Topic\n  , mkTopic\n  , getTopic\n  , encodeTopic\n  ) where",
    "correctAnswer": "qfpl/applied-fp-course"
  },
  {
    "filename": "languages.rs",
    "code": "collections::{btree_map, BTreeMap},\n    iter::IntoIterator,\n    ops::{AddAssign, Deref, DerefMut},\n    path::Path,\n};",
    "correctAnswer": "XAMPPRocky/tokei"
  },
  {
    "filename": "Effect.hs",
    "code": "Copyright:  (c) 2019-2020 redacted\nSPDX-License-Identifier: MPL-2.0\nMaintainer: redacted <xrom.xkov@gmail.com>",
    "correctAnswer": "kowainik/co-log"
  },
  {
    "filename": "index.js",
    "code": "const pkg = require('./package.json');",
    "correctAnswer": "grab/front-end-guide"
  },
  {
    "filename": "csv.rs",
    "code": "pub fn init(interp: &mut redacted) -> InitializeResult<()> {",
    "correctAnswer": "artichoke/artichoke"
  },
  {
    "filename": "1.7：字符串的全排列.c",
    "code": "using namespace std;",
    "correctAnswer": "julycoding/the-art-of-programming-by-july"
  },
  {
    "filename": "PPPServer.cpp",
    "code": "PPPServer::PPPServer(Stream* sio): _sio(sio), _cb(netif_status_cb_s), _enabled(false)\n{\n}",
    "correctAnswer": "esp8266/arduino"
  },
  {
    "filename": "main.go",
    "code": "func logfunc(l *libredacted.LogScope, level libredacted.LogLevel, levelName string, category string, msg string, args ...interface{}) {\n\tif level < l.MinLevel {\n\t\treturn\n\t}\n\tfullMsg := fmt.Sprintf(msg, args...)",
    "correctAnswer": "joewalnes/websocketd"
  },
  {
    "filename": "Prometheus.hs",
    "code": "module Mu.Instrumentation.Prometheus (\n  initPrometheus\n, prometheus\n, prometheusWai\n) where",
    "correctAnswer": "higherkindness/mu-haskell"
  },
  {
    "filename": "main.rs",
    "code": "mod cli;\nmod cmd;\nmod console;\nmod prompt;",
    "correctAnswer": "getzola/zola"
  },
  {
    "filename": "AppVeyorReporter.cs",
    "code": "namespace redacted.Runner.Common\n{\n\t/// <summary>\n\t/// An implementation of <see cref=\"IRunnerReporter\" /> that reports results to AppVeyor. This\n\t/// is auto-enabled by the presence of the \"APPVEYOR_API_URL\" environment variable, which points\n\t/// to the AppVeyor API endpoint that is used to report tests.\n\t/// </summary>",
    "correctAnswer": "xunit/xunit"
  },
  {
    "filename": "error.rs",
    "code": "pub enum GameError {\n    /// An error in the filesystem layout\n    FilesystemError(String),\n    /// An error in the config file\n    ConfigError(String),\n    /// Happens when an `winit::EventsLoopProxy` attempts to\n    /// wake up an `winit::EventsLoop` that no longer exists.",
    "correctAnswer": "ggez/ggez"
  },
  {
    "filename": "Expression.cs",
    "code": "namespace redacted.AST\n{\n    public abstract class ExpressionObsolete : Statement\n    {\n        public string DebugText;",
    "correctAnswer": "mono/CppSharp"
  },
  {
    "filename": "MapTypeDefinitionBuilder.java",
    "code": "public class MapTypeDefinitionBuilder implements DeclaredTypeDefinitionBuilder {",
    "correctAnswer": "apache/dubbo"
  },
  {
    "filename": "enumvalues_1.html",
    "code": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html><head><title></title>\n<meta http-equiv=\"Content-Type\" content=\"text/xhtml;charset=UTF-8\"/>\n<meta name=\"generator\" content=\"Doxygen 1.8.13\"/>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"search.css\"/>\n<script type=\"text/javascript\" src=\"enumvalues_1.js\"></script>\n<script type=\"text/javascript\" src=\"search.js\"></script>",
    "correctAnswer": "facebookresearch/fasttext"
  },
  {
    "filename": "poor_mans_webmock.rb",
    "code": "module Workers\n  class PublishToHub < Base\n    def perform(*_args)\n      # don't publish to pubsubhubbub in cucumber\n    end\n  end",
    "correctAnswer": "diaspora/diaspora"
  },
  {
    "filename": "dqBestTimeToBuySellStocks.js",
    "code": "const dqBestTimeToBuySellStocks = (prices, visit = () => {}) => {\n  /**\n   * Recursive implementation of the main function. It is hidden from the users.\n   *\n   * @param {boolean} buy - Whether we're allow to sell or to buy now\n   * @param {number} day - Current day of trading (current index of prices array)\n   * @returns {number} - Max profit from buying/selling",
    "correctAnswer": "trekhleb/javascript-algorithms"
  },
  {
    "filename": "CodeAssignment.cs",
    "code": "namespace Mono.CodeGeneration\n{\n\tinternal class CodeAssignment: CodeExpression\n\t{\n\t\tnew CodeValueReference var;\n\t\tCodeExpression exp;",
    "correctAnswer": "xamarin/xamarin-android"
  },
  {
    "filename": "AbstractReportReloader.java",
    "code": "public abstract class AbstractReportReloader implements ReportReloader {",
    "correctAnswer": "dianping/cat"
  },
  {
    "filename": "index.js",
    "code": "const App = require('./node/App')\nconst { version } = require('../package')\nconst { logger } = require('@redacted/shared-utils')",
    "correctAnswer": "vuejs/vuepress"
  },
  {
    "filename": "value_expr.go",
    "code": "func init() {\n\tast.NewValueExpr = newValueExpr\n\tast.NewParamMarkerExpr = newParamMarkerExpr\n\tast.NewDecimal = func(str string) (interface{}, error) {\n\t\tdec := new(types.MyDecimal)\n\t\terr := dec.FromString(hack.Slice(str))\n\t\tif err == types.ErrTruncated {",
    "correctAnswer": "pingcap/tidb"
  },
  {
    "filename": "docs-util.js",
    "code": "const formatree = require('formatree')",
    "correctAnswer": "typicode/husky"
  },
  {
    "filename": "lib.rs",
    "code": "extern crate cfg_if;\nextern crate js_sys;\nextern crate wasm_bindgen;\nextern crate web_sys;",
    "correctAnswer": "MaxBittker/sandspiel"
  },
  {
    "filename": "nvm.go",
    "code": "const (\n  NvmVersion = \"1.1.8\"\n)",
    "correctAnswer": "coreybutler/nvm-windows"
  },
  {
    "filename": "rollup.config.js",
    "code": "const env = process.env.NODE_ENV",
    "correctAnswer": "reduxjs/react-redux"
  },
  {
    "filename": "Interop.EN.cs",
    "code": "internal partial class Interop\n{\n    internal static partial class Richedit\n    {\n        public enum EN\n        {\n            MSGFILTER = 0x0700,",
    "correctAnswer": "dotnet/winforms"
  },
  {
    "filename": "File.hs",
    "code": "module Level07.Conf.File where",
    "correctAnswer": "qfpl/applied-fp-course"
  },
  {
    "filename": "IntegerPrinter.java",
    "code": "public class IntegerPrinter {",
    "correctAnswer": "enterprisequalitycoding/fizzbuzzenterpriseedition"
  },
  {
    "filename": "utilities.rs",
    "code": "fn command<P>(binary: P, args: Vec<&str>, envs: Option<Vec<(&str, &str)>>) -> Command\nwhere\n    P: AsRef<Path>,\n{\n    let s_binary = binary\n        .as_ref()\n        .to_str()",
    "correctAnswer": "Qovery/engine"
  },
  {
    "filename": "redacted.lang-mg.php",
    "code": "$redacted_LANG['authenticate']         = 'Hadisoana SMTP: Tsy nahomby ny fanamarinana.';\n$redacted_LANG['connect_host']         = 'SMTP Error: Tsy afaka mampifandray amin\\'ny mpampiantrano SMTP.';\n$redacted_LANG['data_not_accepted']    = 'SMTP diso: tsy voarakitra ny angona.';\n$redacted_LANG['empty_message']        = 'Tsy misy ny votoaty mailaka.';\n$redacted_LANG['encoding']             = 'Tsy fantatra encoding: ';\n$redacted_LANG['execute']              = 'Tsy afaka manatanteraka ity baiko manaraka ity: ';\n$redacted_LANG['file_access']          = 'Tsy nahomby ny fidirana amin\\'ity rakitra ity: ';",
    "correctAnswer": "phpmailer/phpmailer"
  },
  {
    "filename": "Start.hs",
    "code": "module Network.Google.Resource.TPU.Projects.Locations.Nodes.Start\n    (\n    -- * REST Resource\n      ProjectsLocationsNodesStartResource",
    "correctAnswer": "brendanhay/gogol"
  },
  {
    "filename": "AutoScalingAutoScalingGroupNotificationConfiguration.hs",
    "code": "module redacted.ResourceProperties.AutoScalingAutoScalingGroupNotificationConfiguration where",
    "correctAnswer": "freckle/stratosphere"
  },
  {
    "filename": "observe.ts",
    "code": "function observeObservable(thing, listener, fireImmediately: boolean) {\n    return getAdministration(thing).observe_(listener, fireImmediately)\n}",
    "correctAnswer": "mobxjs/mobx"
  },
  {
    "filename": "XPathArrayIterator.cs",
    "code": "namespace MS.Internal.Xml.XPath\n{\n    [DebuggerDisplay(\"Position={CurrentPosition}, Current={debuggerDisplayProxy, nq}\")]\n    internal class XPathArrayIterator : ResetableIterator\n    {\n        protected IList list;\n        protected int index;",
    "correctAnswer": "dotnet/runtime"
  },
  {
    "filename": "CommandBuilder.java",
    "code": "public abstract class CommandBuilder {",
    "correctAnswer": "alibaba/arthas"
  },
  {
    "filename": "demo.js",
    "code": "const chalk = require('chalk');\nconst input = require('.');",
    "correctAnswer": "sboudrias/inquirer.js"
  },
  {
    "filename": "InternalUnitTestDaoAccess.java",
    "code": "public class InternalUnitTestDaoAccess<T, K> {\n    private final AbstractDao<T, K> dao;",
    "correctAnswer": "greenrobot/greendao"
  },
  {
    "filename": "uninstall.sh",
    "code": "redacted_redacted_dir=\"$( cd \"$( dirname \"$0\" )\" && pwd )\"",
    "correctAnswer": "powerline/fonts"
  },
  {
    "filename": "editable.rs",
    "code": "crate::trigger_event!(\n    ActivateEvent,\n    ActivateEventHandler,\n    ActivateHandler,\n    on_activate\n);",
    "correctAnswer": "redox-os/orbtk"
  },
  {
    "filename": "offset_response.go",
    "code": "type OffsetResponseBlock struct {\n\tErr       KError\n\tOffsets   []int64 // Version 0\n\tOffset    int64   // Version 1\n\tTimestamp int64   // Version 1\n}",
    "correctAnswer": "buger/goreplay"
  },
  {
    "filename": "types.go",
    "code": "type PriorityClass struct {\n\tmetav1.TypeMeta `json:\",inline\"`\n\t// Standard object's metadata.\n\t// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\t// +optional\n\tmetav1.ObjectMeta `json:\"metadata,omitempty\" protobuf:\"bytes,1,opt,name=metadata\"`",
    "correctAnswer": "grafana/loki"
  },
  {
    "filename": "AVAssetImageDataProvider.swift",
    "code": "#if !os(watchOS)",
    "correctAnswer": "onevcat/kingfisher"
  },
  {
    "filename": "commit_files.rs",
    "code": "error::Error, error::Result, StatusItem, StatusItemType,\n};\nuse git2::{Diff, DiffDelta, DiffOptions, Repository};\nuse scopetime::scope_time;",
    "correctAnswer": "extrawurst/gitui"
  },
  {
    "filename": "main.go",
    "code": "var (\n\taddr      = flag.String(\"addr\", \"127.0.0.1:2379\", \"pd address\")\n\ttableName = flag.String(\"table\", \"benchdb\", \"name of the table\")\n\tbatchSize = flag.Int(\"batch\", 100, \"number of statements in a transaction, used for insert and update-random only\")\n\tblobSize  = flag.Int(\"blob\", 1000, \"size of the blob column in the row\")\n\tlogLevel  = flag.String(\"L\", \"warn\", \"log level\")\n\trunJobs   = flag.String(\"run\", strings.Join([]string{",
    "correctAnswer": "pingcap/tidb"
  },
  {
    "filename": "focus.html",
    "code": "<!DOCTYPE html> \n<html> \n<head> \n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> \n<style type=\"text/css\"> \n\tp, .test { font-family: sans-serif; }\n\t.test { margin: 1em 4em; line-height: 4em; border: 1px solid black; font-size: 2em; text-align: center; }",
    "correctAnswer": "ftlabs/fastclick"
  },
  {
    "filename": "commands.search.cpp",
    "code": "using redacted::PortFileProvider::PathsPortFileProvider;",
    "correctAnswer": "microsoft/vcpkg"
  },
  {
    "filename": "md_docs.go",
    "code": "func printOptions(buf *bytes.Buffer, cmd *redacted.Command, name string) error {\n\tflags := cmd.NonInheritedFlags()\n\tflags.SetOutput(buf)\n\tif flags.HasAvailableFlags() {\n\t\tbuf.WriteString(\"### Options\\n\\n```\\n\")\n\t\tflags.PrintDefaults()\n\t\tbuf.WriteString(\"```\\n\\n\")",
    "correctAnswer": "spf13/cobra"
  },
  {
    "filename": "flags.rs",
    "code": "pub static VERSION: Arg = Arg { short: Some(b'v'), long: \"version\",  takes_value: TakesValue::Forbidden };\npub static HELP:    Arg = Arg { short: Some(b'?'), long: \"help\",     takes_value: TakesValue::Forbidden };",
    "correctAnswer": "ogham/exa"
  },
  {
    "filename": "Article.java",
    "code": "public class Article {\n    /**\n     * 文章id\n     */\n    @Id\n    private Long id;",
    "correctAnswer": "xkcoding/spring-boot-demo"
  },
  {
    "filename": "locationGlobe.class.js",
    "code": "class LocationGlobe {\n    constructor(parentId) {\n        if (!parentId) throw \"Missing parameters\";",
    "correctAnswer": "gitsquared/edex-ui"
  },
  {
    "filename": "list.go",
    "code": "func HandleList(\n\trepos core.RepositoryStore,\n\tbuilds core.BuildStore,\n) http.HandlerFunc {\n\treturn func(w http.ResponseWriter, r *http.Request) {\n\t\tvar (\n\t\t\tnamespace = chi.URLParam(r, \"owner\")",
    "correctAnswer": "drone/drone"
  },
  {
    "filename": "Chunk.hs",
    "code": "module Options.Applicative.Help.Chunk\n  ( Chunk(..)\n  , chunked\n  , listToChunk\n  , (<<+>>)\n  , (<</>>)\n  , vcatChunks",
    "correctAnswer": "pcapriotti/optparse-applicative"
  },
  {
    "filename": "mod.rs",
    "code": "pub mod windows;",
    "correctAnswer": "federico-terzi/espanso"
  },
  {
    "filename": "commands_generator.rb",
    "code": "HighLine.track_eof = false",
    "correctAnswer": "fastlane/fastlane"
  },
  {
    "filename": "github-view.js",
    "code": "function GithubView(name, options){\n  this.name = name;\n  options = options || {};\n  this.engine = options.engines[extname(name)];\n  // \"root\" is the app.set('views') setting, however\n  // in your own implementation you could ignore this\n  this.path = '/' + options.root + '/master/' + name;",
    "correctAnswer": "expressjs/express"
  },
  {
    "filename": "error-serialization.js",
    "code": "const serializeError = err => ({\n  code: err.code,\n  message: err.message,\n  stack: err.stack\n});",
    "correctAnswer": "formidablelabs/webpack-dashboard"
  },
  {
    "filename": "in_dom.js",
    "code": "const inDOM = assign({}, hasElement, {\n  enter(view) {\n    // Register the view for event handling. This hash is used by\n    // Ember.EventDispatcher to dispatch incoming events.\n    view.renderer.register(view);",
    "correctAnswer": "emberjs/ember.js"
  },
  {
    "filename": "CustomSingleValue.js",
    "code": "const SingleValue = ({ children, ...props }) => (\n  <components.SingleValue {...props}>{children}</components.SingleValue>\n);",
    "correctAnswer": "jedwatson/react-select"
  },
  {
    "filename": "utils.rs",
    "code": "pub fn rand_int(n: i32) -> i32 {\n    (js_sys::Math::random() * n as f64) as i32\n}",
    "correctAnswer": "MaxBittker/sandspiel"
  },
  {
    "filename": "import.rs",
    "code": "pub(crate) fn init_importlib(\n    vm: &mut VirtualMachine,\n    initialize_parameter: InitParameter,\n) -> PyResult<()> {\n    use crate::vm::thread::enter_vm;\n    flame_guard!(\"init importlib\");",
    "correctAnswer": "RustPython/RustPython"
  },
  {
    "filename": "exercise_b.js",
    "code": "const findNameById = compose(map(map(prop('name'))), findUserById);",
    "correctAnswer": "mostlyadequate/mostly-adequate-guide"
  },
  {
    "filename": "from_bson.cpp",
    "code": "using redacted = redacted::redacted;",
    "correctAnswer": "nlohmann/json"
  },
  {
    "filename": "http3-client.rs",
    "code": "extern crate log;",
    "correctAnswer": "cloudflare/quiche"
  },
  {
    "filename": "ThreadPoolExecutorDemo.java",
    "code": "public class ThreadPoolExecutorDemo {",
    "correctAnswer": "snailclimb/javaguide"
  },
  {
    "filename": "SchedulerServices+Emulation.swift",
    "code": "enum SchedulePeriodicRecursiveCommand {\n    case tick\n    case dispatchStart\n}",
    "correctAnswer": "shadowsocks/shadowsocksx-ng"
  },
  {
    "filename": "filesystem.rs",
    "code": "pub fn path_absolute_form(path: &Path) -> io::Result<PathBuf> {\n    if path.is_absolute() {\n        return Ok(path.to_path_buf());\n    }",
    "correctAnswer": "sharkdp/fd"
  },
  {
    "filename": "Types.hs",
    "code": "module DinoRush.Engine.Types where",
    "correctAnswer": "jxv/dino-rush"
  },
  {
    "filename": "create.rb",
    "code": "module Pod\n  class Command\n    class Lib < Command\n      class Create < Lib\n        self.summary = 'Creates a new Pod'",
    "correctAnswer": "cocoapods/cocoapods"
  },
  {
    "filename": "easing_equations.cpp",
    "code": "const real_t pi = 3.1415926535898;",
    "correctAnswer": "godotengine/godot"
  },
  {
    "filename": "ChangeWaves.cs",
    "code": "namespace Microsoft.Build.Utilities\n{\n    internal enum ChangeWaveConversionState\n    {\n        NotConvertedYet,\n        Valid,\n        InvalidFormat,",
    "correctAnswer": "dotnet/msbuild"
  },
  {
    "filename": "RawTests.swift",
    "code": "class RawTests: XCTestCase {",
    "correctAnswer": "swiftyjson/swiftyjson"
  },
  {
    "filename": "event_id.rs",
    "code": "pub const AFTER_RENDER: EventId = EventId(\"redacted/after_render\");\n/// Event id for controller axis event.\npub const CONTROLLER_AXIS: EventId = EventId(\"redacted/controller_axis\");\n/// Event id for cursor event.\npub const CURSOR: EventId = EventId(\"redacted/cursor\");\n/// Event id for focus event.\npub const FOCUS: EventId = EventId(\"redacted/focus\");",
    "correctAnswer": "PistonDevelopers/piston"
  },
  {
    "filename": "KindSignatures.hs",
    "code": "module {- 3, in which our heroes discover -} KindSignatures {- and the ways in\nwhich they can help us. We'll see -} where {- we need them, and where they're\njust good documentation.. -}",
    "correctAnswer": "i-am-tom/haskell-exercises"
  },
  {
    "filename": "Cartridge.hs",
    "code": "module Emulator.Cartridge (\n    Cartridge(..)\n  , Mirror(..)\n  , parse\n) where",
    "correctAnswer": "dbousamra/hnes"
  },
  {
    "filename": "dev.html",
    "code": "<!-- <script src=\"vendor/aframe/build/aframe.min.js\"></script> -->\n<script src=\"https://cdn.jsdelivr.net/gh/aframevr/aframe@1c2407b26c61958baa93967b5412487cd94b290b/dist/aframe-master.min.js\"></script>\n<!-- include for artoolkit trackingBackend -->\n<script src='../../three.js/vendor/jsartoolkit5/build/artoolkit.min.js'></script>\n<script src='../../three.js/vendor/jsartoolkit5/js/artoolkit.api.js'></script>\n<!-- include for aruco trackingBackend -->\n<script src='../../three.js/vendor/js-aruco/src/svd.js'></script>",
    "correctAnswer": "jeromeetienne/ar.js"
  },
  {
    "filename": "Panic.hs",
    "code": "module redacted.Render.Util.Panic (\n    panicUncaughtFail,\n    panicUnpairedPop,\n    panicSimpleDocTreeConversionFailed,\n    panicInputNotFullyConsumed,\n    panicPeekedEmpty,\n    panicPoppedEmpty,",
    "correctAnswer": "quchen/prettyprinter"
  },
  {
    "filename": "JsonSerializer.cs",
    "code": "namespace redacted\n{\n    internal sealed class JSONSerializer\n    {\n        private StringBuilder _output = new StringBuilder();\n        //private StringBuilder _before = new StringBuilder();\n        private int _before;",
    "correctAnswer": "mgholam/fastJSON"
  },
  {
    "filename": "SDFS.cpp",
    "code": "using namespace fs;",
    "correctAnswer": "esp8266/arduino"
  },
  {
    "filename": "FontService.ts",
    "code": "function getLetterSize(size: number, fontFamily: string) {\n    const height = size + 2;",
    "correctAnswer": "railsware/upterm"
  },
  {
    "filename": "generate_opml.rb",
    "code": "OUTPUT_FILENAME = 'engineering_blogs.opml'\nTITLE = 'Engineering Blogs'",
    "correctAnswer": "kilimchoi/engineering-blogs"
  },
  {
    "filename": "corefunctions.cpp",
    "code": "namespace redacted {\nnamespace redacted {\nnamespace vanillajni {",
    "correctAnswer": "facebook/yoga"
  },
  {
    "filename": "Mtl.hs",
    "code": "Module      :  Lens.Micro.Mtl\nCopyright   :  (C) 2013-2016 Edward Kmett, 2015-2016 Artyom Kazak, 2018 redacted\nLicense     :  BSD-style (see the file LICENSE)\n-}\nmodule Lens.Micro.Mtl\n(\n  -- * Getting",
    "correctAnswer": "monadfix/microlens"
  },
  {
    "filename": "Completion.hs",
    "code": "module Language.redacted.Ide.Completion\n       ( getCompletions\n       , getExactMatches\n       , getExactCompletions\n       , simpleExport\n       , completionFromMatch\n       , CompletionOptions(..)",
    "correctAnswer": "purescript/purescript"
  },
  {
    "filename": "DefaultRequestEntityDecoder.java",
    "code": "public class DefaultRequestEntityDecoder implements RequestEntityDecoder<ByteBuf, ClusterRequest> {",
    "correctAnswer": "alibaba/sentinel"
  },
  {
    "filename": "Mock.hs",
    "code": "module Graphics.redacted.Output.Mock\n  ( MockData\n  , mockTerminal\n  )\nwhere",
    "correctAnswer": "jtdaugherty/vty"
  },
  {
    "filename": "pybool.rs",
    "code": "BorrowValue, IdProtocol, IntoPyObject, PyClassImpl, PyContext, PyObjectRef, PyResult,\n    TryFromObject, TypeProtocol,\n};\nuse crate::vm::VirtualMachine;",
    "correctAnswer": "RustPython/RustPython"
  },
  {
    "filename": "decPacked.c",
    "code": "uByte * decPackedFromNumber(uByte *bcd, Int length, Int *scale,\n                            const decNumber *dn) {\n  const Unit *up=dn->lsu;     // Unit array pointer\n  uByte obyte, *out;          // current output byte, and where it goes\n  Int indigs=dn->digits;      // digits processed\n  uInt cut=DECDPUN;           // downcounter per Unit\n  uInt u=*up;                 // work",
    "correctAnswer": "stedolan/jq"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where",
    "correctAnswer": "itchyny/sjsp"
  },
  {
    "filename": "redacted.js",
    "code": "function redacted (initialContainers, options) {\n  var len = arguments.length;\n  if (len === 1 && Array.isArray(initialContainers) === false) {\n    options = initialContainers;\n    initialContainers = [];\n  }\n  var _mirror; // mirror image",
    "correctAnswer": "bevacqua/dragula"
  },
  {
    "filename": "redactedButton.swift",
    "code": "open class redactedButton: UIButton, redactedable {\n    @IBInspectable public var autostart: Bool = false\n    @IBInspectable public var autohide: Bool = false\n    @IBInspectable public var animation: String = \"\"\n    @IBInspectable public var force: CGFloat = 1\n    @IBInspectable public var delay: CGFloat = 0\n    @IBInspectable public var duration: CGFloat = 0.7",
    "correctAnswer": "mengto/spring"
  },
  {
    "filename": "ForeachStatement.cs",
    "code": "namespace redacted.Decompiler.CSharp.Syntax\n{\n\t/// <summary>\n\t/// foreach (Type VariableName in InExpression) EmbeddedStatement\n\t/// </summary>\n\tpublic class ForeachStatement : Statement\n\t{",
    "correctAnswer": "icsharpcode/ILSpy"
  },
  {
    "filename": "AsyncLock.swift",
    "code": "/**\nIn case nobody holds this lock, the work will be queued and executed immediately\non thread that is requesting lock.",
    "correctAnswer": "shadowsocks/shadowsocksx-ng"
  },
  {
    "filename": "MainActivity.java",
    "code": "public class MainActivity extends AppCompatActivity {\n    private List<Sample> samples;",
    "correctAnswer": "lgvalle/material-animations"
  },
  {
    "filename": "CCTransformHelp.cpp",
    "code": "Copyright (c) 2013-2016 Chukong Technologies Inc.\nCopyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.",
    "correctAnswer": "cocos2d/cocos2d-x"
  },
  {
    "filename": "redactedNormalTrailer.m",
    "code": "@interface redactedNormalTrailer() {\n    __unsafe_unretained UIImageView *_arrowView;\n}\n@end",
    "correctAnswer": "codermjlee/mjrefresh"
  },
  {
    "filename": "core.rs",
    "code": "pub struct Core {\n    flags: Flags,\n    icons: Icons,\n    //display: Display,\n    colors: Colors,\n    sorters: Vec<(SortOrder, sort::SortFn)>,\n}",
    "correctAnswer": "Peltoche/lsd"
  },
  {
    "filename": "filterByName.ts",
    "code": "const getMatcherConfig = (options?: RegexpOrNamesMatcherOptions): MatcherConfig | undefined => {\n  if (!options) {\n    return undefined;\n  }",
    "correctAnswer": "grafana/grafana"
  },
  {
    "filename": "User.js",
    "code": "const bcrypt = require('bcrypt');\nconst crypto = require('crypto');\nconst mongoose = require('mongoose');",
    "correctAnswer": "sahat/hackathon-starter"
  },
  {
    "filename": "Util.hs",
    "code": "module redacted.Draw.Util\n  ( withBrackets\n  , renderTime\n  , renderDate\n  , renderKeybindingHelp\n  , insertDateMarkers\n  , getDateFormat",
    "correctAnswer": "matterhorn-chat/matterhorn"
  },
  {
    "filename": "windows.ts",
    "code": "let mainWindow: BrowserWindow | null = null;",
    "correctAnswer": "felixrieseberg/windows95"
  },
  {
    "filename": "base58.cpp",
    "code": "static const char* pszBase58 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nstatic const int8_t mapBase58[256] = {\n    -1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1,\n    -1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1,\n    -1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1,\n    -1, 0, 1, 2, 3, 4, 5, 6,  7, 8,-1,-1,-1,-1,-1,-1,\n    -1, 9,10,11,12,13,14,15, 16,-1,17,18,19,20,21,-1,",
    "correctAnswer": "bitcoin/bitcoin"
  },
  {
    "filename": "command.swift",
    "code": "/*:\n👫 命令（Command）\n ------------\n 命令模式是一种设计模式，它尝试以对象来代表实际行动。命令对象可以把行动(action) 及其参数封装起来，于是这些行动可以被：\n * 重复多次\n * 取消（如果该对象有实现的话）\n * 取消后又再重做",
    "correctAnswer": "ochococo/design-patterns-in-swift"
  },
  {
    "filename": "key.rb",
    "code": "module Spaceship\n  module Portal\n    class Key < PortalBase\n      ##\n      # data model for managing JWT tokens or \"Keys\" as the ADP refers to them",
    "correctAnswer": "fastlane/fastlane"
  },
  {
    "filename": "Due.hs",
    "code": "module redacted.UI.Draw.Modal.Due\n    ( due\n    ) where",
    "correctAnswer": "smallhadroncollider/taskell"
  },
  {
    "filename": "Stickers.hs",
    "code": "module Web.Telegram.API.Bot.API.Stickers\n  ( -- * Functions\n    getStickerSetM\n  , uploadStickerFileM\n  , createNewStickerSetM\n  , createNewStickerSetM'\n  , addStickerToSetM",
    "correctAnswer": "klappvisor/haskell-telegram-api"
  },
  {
    "filename": "tree.rs",
    "code": "pub struct TreeViewer;\n#[derive(new)]\npub struct TreeView {\n    tree: StringItem,\n}",
    "correctAnswer": "nushell/nushell"
  },
  {
    "filename": "inotify_watcher.go",
    "code": "type InotifyWatcher struct {\n\t// Underlying inotify watcher.\n\twatcher *inotify.Watcher",
    "correctAnswer": "google/cadvisor"
  },
  {
    "filename": "MotionPathPlugin.js",
    "code": "let _xProps = \"x,translateX,left,marginLeft,xPercent\".split(\",\"),\n\t_yProps = \"y,translateY,top,marginTop,yPercent\".split(\",\"),\n\t_DEG2RAD = Math.PI / 180,\n\tredacted, PropTween, _getUnit, _toArray,\n\t_getredacted = () => redacted || (typeof(window) !== \"undefined\" && (redacted = window.redacted) && redacted.registerPlugin && redacted),\n\t_populateSegmentFromArray = (segment, values, property, mode) => { //mode: 0 = x but don't fill y yet, 1 = y, 2 = x and fill y with 0.\n\t\tlet l = values.length,",
    "correctAnswer": "greensock/gsap"
  },
  {
    "filename": "logsink.js",
    "code": "const levels = {\n  debug: 4,\n  info: 3,\n  warn: 2,\n  error: 1,\n};",
    "correctAnswer": "appium/appium"
  },
  {
    "filename": "vfs.go",
    "code": "type VFS interface {\n}",
    "correctAnswer": "kubernetes/kops"
  },
  {
    "filename": "Solarized Dark Higher Contrast.sh",
    "code": "dconf load /org/pantheon/terminal/settings/ <<COLORS\n[/]\nname='Solarized Dark Higher Contrast'\ncursor-color='#f34b00'\nforeground='#9cc2c3'\nbackground='rgba(0,30,39,.95)'\npalette='#002831:#d11c24:#6cbe6c:#a57706:#2176c7:#c61c6f:#259286:#eae3cb:#006488:#f5163b:#51ef84:#b27e28:#178ec8:#e24d8e:#00b39e:#fcf4dc'",
    "correctAnswer": "mbadolato/iterm2-color-schemes"
  },
  {
    "filename": "114.flatten-binary-tree-to-linked-list.js",
    "code": "function preorderTraversal(root) {\n  if (!root) return [];",
    "correctAnswer": "azl397985856/leetcode"
  },
  {
    "filename": "commands.portsdiff.cpp",
    "code": "namespace redacted::Commands::PortsDiff\n{\n    struct UpdatedPort\n    {\n        static bool compare_by_name(const UpdatedPort& left, const UpdatedPort& right)\n        {\n            return left.port < right.port;",
    "correctAnswer": "microsoft/vcpkg"
  },
  {
    "filename": "Common.hs",
    "code": "Module      : CabalHelper.Shared.Common\nDescription : Shared utility functions\nLicense     : GPL-3\n-}",
    "correctAnswer": "alexwl/haskell-code-explorer"
  },
  {
    "filename": "defineLazyObjectProperty.js",
    "code": "function defineLazyObjectProperty<T>(\n  object: {...},\n  name: string,\n  descriptor: {\n    get: () => T,\n    enumerable?: boolean,\n    writable?: boolean,",
    "correctAnswer": "facebook/react-native"
  },
  {
    "filename": "count.rs",
    "code": "sql_function! {\n    /// Creates a SQL `COUNT` expression\n    ///\n    /// As with most bare functions, this is not exported by default. You can import\n    /// it specifically as `redacted::dsl::count`, or glob import\n    /// `redacted::dsl::*`\n    ///",
    "correctAnswer": "diesel-rs/diesel"
  },
  {
    "filename": "docker_logs.rs",
    "code": "pub struct DockerLogsEventReceived<'a> {\n    pub byte_size: usize,\n    pub container_id: &'a str,\n}",
    "correctAnswer": "timberio/vector"
  },
  {
    "filename": "modal-menu.php",
    "code": "?>",
    "correctAnswer": "wordpress/wordpress"
  },
  {
    "filename": "cli.rs",
    "code": "extern crate uucore;",
    "correctAnswer": "uutils/coreutils"
  },
  {
    "filename": "DESCRIPTION.en_us.html",
    "code": "<p>Turret Road is a geometric sans serif typeface, with very low contrast, high x-height, high glyph height, and playful diacritics.</p>",
    "correctAnswer": "google/fonts"
  },
  {
    "filename": "getNextDelimiterBlockKey.js",
    "code": "const ContentBlockNode = require('ContentBlockNode');",
    "correctAnswer": "facebook/draft-js"
  },
  {
    "filename": "map.rs",
    "code": "pub use crate::wrapper::ErlNifMapIterator;\nuse crate::wrapper::{ErlNifMapIteratorEntry, NIF_ENV, NIF_TERM};\nuse std::mem::MaybeUninit;",
    "correctAnswer": "rusterlium/rustler"
  },
  {
    "filename": "splice-decl-out.hs",
    "code": "$(foo bar)",
    "correctAnswer": "tweag/ormolu"
  },
  {
    "filename": "MockedHelloWorld.cpp",
    "code": "extern \"C\" void us_loop_read_mocked_data(struct us_loop *loop, char *data, unsigned int size);",
    "correctAnswer": "unetworking/uwebsockets"
  },
  {
    "filename": "stamps.html",
    "code": "<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\">",
    "correctAnswer": "desandro/masonry"
  },
  {
    "filename": "mod.rs",
    "code": "mod console_tests;\nmod iterator;",
    "correctAnswer": "dandavison/delta"
  },
  {
    "filename": "Partition.swift",
    "code": "public func partitionIndex<T>(for elements: inout [T], subRange range: Range<Int>, by areInIncreasingOrder: (T, T) -> Bool) -> Int {\n    var lo = range.lowerBound\n    var hi = elements.index(before: range.upperBound)",
    "correctAnswer": "raywenderlich/swift-algorithm-club"
  },
  {
    "filename": "redacted.localStorage.js",
    "code": "function S4() {\n   return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n};",
    "correctAnswer": "jashkenas/backbone"
  },
  {
    "filename": "StorageAttributes.php",
    "code": "declare(strict_types=1);",
    "correctAnswer": "thephpleague/flysystem"
  },
  {
    "filename": "HealthFragment.java",
    "code": "public class HealthFragment extends BaseFragment {\n    VerticalViewPager mVerticalViewPager;\n    HomeTitleBar mHomeTitleBar;\n    List<Fragment> mFragments = new ArrayList<>();\n    FragmentPagerAdapter mFragmentPagerAdapter;",
    "correctAnswer": "didi/doraemonkit"
  },
  {
    "filename": "squeezer.rs",
    "code": "enum SqueezeState {\n    /// not enabled\n    Disabled,\n    /// Will be set from all states if equal condition can't be hold up.\n    /// Set if previous byte is not equal the current processed byte.\n    NoSqueeze,\n    /// Valid for a whole line to identify if it is candidate for squeezing",
    "correctAnswer": "sharkdp/hexyl"
  },
  {
    "filename": "layer.html",
    "code": "<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style type=\"text/css\">\n\tp, .test { font-family: sans-serif; }\n\t.test { margin: 1em auto; width: 6em; line-height: 4em; border: 1px solid black; font-size: 2em; text-align: center; }",
    "correctAnswer": "ftlabs/fastclick"
  },
  {
    "filename": "issue_comment.go",
    "code": "func ListIssueComments(c *context.APIContext) {\n\tvar since time.Time\n\tif len(c.Query(\"since\")) > 0 {\n\t\tvar err error\n\t\tsince, err = time.Parse(time.RFC3339, c.Query(\"since\"))\n\t\tif err != nil {\n\t\t\tc.ErrorStatus(http.StatusUnprocessableEntity, err)",
    "correctAnswer": "gogits/gogs"
  },
  {
    "filename": "provides.rs",
    "code": "Result},\n            hcore::fs::PKG_PATH};\nuse std::{collections::HashSet,\n          ffi::OsStr,\n          path::Path};\nuse walkdir::WalkDir;",
    "correctAnswer": "habitat-sh/habitat"
  },
  {
    "filename": "PrometheusHistogramMetricsTracker.java",
    "code": "class PrometheusHistogramMetricsTracker implements IMetricsTracker\n{\n   private static final Counter CONNECTION_TIMEOUT_COUNTER = Counter.build()\n      .name(\"redacted_connection_timeout_total\")\n      .labelNames(\"pool\")\n      .help(\"Connection timeout total count\")\n      .create();",
    "correctAnswer": "brettwooldridge/hikaricp"
  },
  {
    "filename": "CachedResponseHandlerTests.swift",
    "code": "final class CachedResponseHandlerTestCase: BaseTestCase {\n    // MARK: Properties",
    "correctAnswer": "alamofire/alamofire"
  },
  {
    "filename": "Environment.hs",
    "code": "the environment variables of the system\n-}\nmodule Aws.Lambda.Runtime.Environment\n  ( functionMemory\n  , apiEndpoint\n  , handlerName\n  , taskRoot",
    "correctAnswer": "theam/aws-lambda-haskell-runtime"
  },
  {
    "filename": "jsonlogbytes.go",
    "code": "type JSONLogs struct {\n\tLog     []byte    `json:\"log,omitempty\"`\n\tStream  string    `json:\"stream,omitempty\"`\n\tCreated time.Time `json:\"time\"`",
    "correctAnswer": "moby/moby"
  },
  {
    "filename": "RegHubUtil-integration.js",
    "code": "let _ = require('underscore');\nlet regHubUtil = require('../src/utils/RegHubUtil');\nlet hubUtil = require('../src/utils/HubUtil');\nlet Promise = require('bluebird');",
    "correctAnswer": "docker/kitematic"
  },
  {
    "filename": "Line.hs",
    "code": "module Turtle.Line\n  ( Line\n  , lineToText\n  , textToLines\n  , linesToText\n  , textToLine\n  , unsafeTextToLine",
    "correctAnswer": "Gabriel439/Haskell-Turtle-Library"
  },
  {
    "filename": "header.rs",
    "code": "pub struct Header {\n    header: Vec<AnsiString<'static>>,\n    tabstop: usize,\n    reverse: bool,\n    theme: Arc<ColorTheme>,",
    "correctAnswer": "lotabout/skim"
  },
  {
    "filename": "UITableViewCellSeparator.m",
    "code": "@implementation UITableViewCellSeparator",
    "correctAnswer": "nicklockwood/icarousel"
  },
  {
    "filename": "otp.rb",
    "code": "module QA\n  module Support\n    class OTP\n      def initialize(secret)\n        @rotp = ROTP::TOTP.new(secret)\n      end",
    "correctAnswer": "gitlabhq/gitlabhq"
  },
  {
    "filename": "Algorithms.swift",
    "code": "public func topologicalSort<Node: Comparable>(_ graph: [Node: Set<Node>]) -> [Node]? {\n\t// Maintain a list of nodes with no incoming edges (sources).\n\tvar sources = graph\n\t\t.filter { _, incomingEdges in incomingEdges.isEmpty }\n\t\t.map { node, _ in node }",
    "correctAnswer": "carthage/carthage"
  },
  {
    "filename": "LiquibaseServiceLocatorApplicationListener.java",
    "code": "public class LiquibaseServiceLocatorApplicationListener implements ApplicationListener<ApplicationStartingEvent> {",
    "correctAnswer": "spring-projects/spring-boot"
  },
  {
    "filename": "NSDate+YYAdd.m",
    "code": "YYSYNTH_DUMMY_CLASS(NSDate_YYAdd)",
    "correctAnswer": "ibireme/yykit"
  },
  {
    "filename": "TencentLocationListenerProxy.java",
    "code": "public class TencentLocationListenerProxy implements TencentLocationListener {\n    private static final String TAG = \"TencentLocationListenerProxy\";\n    TencentLocationListener tencentLocationListener;",
    "correctAnswer": "didi/doraemonkit"
  },
  {
    "filename": "Settings.hs",
    "code": "Module                  : redacted.Settings\nCopyright               : (c) 2017-2020 redacted\nSPDX-License-Identifier : MPL-2.0\nMaintainer              : redacted <xrom.xkov@gmail.com>\nStability               : Stable\nPortability             : Portable",
    "correctAnswer": "kowainik/summoner"
  },
  {
    "filename": "fr.js",
    "code": "const locale = {\n  name: 'fr',\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),",
    "correctAnswer": "iamkun/dayjs"
  },
  {
    "filename": "duration-display.js",
    "code": "class DurationDisplay extends TimeDisplay {",
    "correctAnswer": "videojs/video.js"
  },
  {
    "filename": "geoip1.c",
    "code": "static GeoIP *geo_location_data;",
    "correctAnswer": "allinurl/goaccess"
  },
  {
    "filename": "views.ts",
    "code": "const hasAnyKey = (keys, obj) => keys.reduce((acc, key) => acc || isDefined(obj[key]), false);",
    "correctAnswer": "angular-ui/ui-router"
  },
  {
    "filename": "locales.js",
    "code": "function normalizeText(s) {\n  return s.replace(/\\r\\n?/g, \"\\n\").replace(/\\uFEFF/g, \"\");\n}",
    "correctAnswer": "mozilla/pdf.js"
  },
  {
    "filename": "phone-type-formatter.cd.js",
    "code": "function x(a,c){var b;if(null!=a.a[c])b=w(a,c,void 0);else a:{b=a.f[c];if(void 0===b.f){var d=b.i;if(d===Boolean)b.f=!1;else if(d===Number)b.f=0;else if(d===String)b.f=b.h?\"0\":\"\";else{b=new d;break a}}b=b.f}return b}function y(a,c){return a.f[c].g?null!=a.a[c]?a.a[c].length:0:null!=a.a[c]?1:0}function r(a,c,b){a.a[c]=b;a.b&&(a.b[c]=b)}function z(a,c){var b=[],d;for(d in c)0!=d&&b.push(new ga(d,c[d]));return new ea(a,b)};/*",
    "correctAnswer": "nosir/cleave.js"
  },
  {
    "filename": "plugin-example.js",
    "code": "function ctPointLabels(options) {\n  return function ctPointLabels(chart) {\n    var defaultOptions = {\n      labelClass: 'ct-label',\n      labelOffset: {\n        x: 0,\n        y: -10",
    "correctAnswer": "gionkunz/chartist-js"
  },
  {
    "filename": "db.rs",
    "code": "db::DefDatabase, expr::ExprId, ConstParamId, DefWithBodyId, FunctionId, GenericDefId, ImplId,\n    LocalFieldId, TypeParamId, VariantId,\n};\nuse la_arena::ArenaMap;",
    "correctAnswer": "rust-analyzer/rust-analyzer"
  },
  {
    "filename": "jconf.c",
    "code": "static char *\nto_string(const json_value *value)\n{\n    if (value->type == json_string) {\n        return ss_strndup(value->u.string.ptr, value->u.string.length);\n    } else if (value->type == json_integer) {\n        return strdup(ss_itoa(value->u.integer));",
    "correctAnswer": "shadowsocks/shadowsocks-libev"
  },
  {
    "filename": "CustomFilterOptions.js",
    "code": "const filterOptions = (candidate, input) => {\n  if (input) {\n    return candidate.value === customOptions[0].value;\n  }\n  return true;\n};",
    "correctAnswer": "jedwatson/react-select"
  },
  {
    "filename": "PreferencesWinController.swift",
    "code": "class PreferencesWinController: NSWindowController {",
    "correctAnswer": "shadowsocks/shadowsocksx-ng"
  },
  {
    "filename": "ResolvingDataSource.java",
    "code": "public final class ResolvingDataSource implements DataSource {",
    "correctAnswer": "google/exoplayer"
  },
  {
    "filename": "wdt.rs",
    "code": "const WINDOW_WATCHDOG_BASE: StaticRef<WwdgRegisters> =\n    unsafe { StaticRef::new(0x4000_2C00 as *const WwdgRegisters) };",
    "correctAnswer": "tock/tock"
  },
  {
    "filename": "DeviceInfoItem.java",
    "code": "public class DeviceInfoItem extends BaseItem<DeviceInfoItem> {",
    "correctAnswer": "blankj/androidutilcode"
  },
  {
    "filename": "33chartcreate-bar.php",
    "code": "error_reporting(E_ALL);\nini_set('display_errors', TRUE);\nini_set('display_startup_errors', TRUE);\ndate_default_timezone_set('Europe/London');",
    "correctAnswer": "phpoffice/phpexcel"
  },
  {
    "filename": "Types.hs",
    "code": "module Test.StateMachine.Types\n  ( StateMachine(..)\n  , Command(..)\n  , getCommand\n  , Commands(..)\n  , NParallelCommands\n  , lengthCommands\n  , ParallelCommandsF(..)\n  , ParallelCommands\n  , Pair(..)\n  , fromPair\n  , toPair\n  , fromPair'\n  , toPairUnsafe'\n  , Reason(..)\n  , isOK\n  , noCleanup\n  , module Test.StateMachine.Types.Environment\n  , module Test.StateMachine.Types.GenSym\n  , module Test.StateMachine.Types.History\n  , module Test.StateMachine.Types.References\n  ) where\n\nimport           Data.Functor.Classes\n                   (Ord1, Show1)\nimport           Data.Semigroup\nimport           Prelude\nimport           Test.QuickCheck\n                   (Gen)\n\nimport           Test.StateMachine.Logic\nimport           Test.StateMachine.Types.Environment\nimport           Test.StateMachine.Types.GenSym\nimport           Test.StateMachine.Types.History\nimport           Test.StateMachine.Types.References\n\n------------------------------------------------------------------------\n\ndata StateMachine model cmd m resp = StateMachine\n  { initModel      :: forall r. model r\n  , transition     :: forall r. (Show1 r, Ord1 r) => model r -> cmd r -> resp r -> model r\n  , precondition   :: model Symbolic -> cmd Symbolic -> Logic\n  , postcondition  :: model Concrete -> cmd Concrete -> resp Concrete -> Logic\n  , invariant      :: Maybe (model Concrete -> Logic)\n  , generator      :: model Symbolic -> Maybe (Gen (cmd Symbolic))\n  , shrinker       :: model Symbolic -> cmd Symbolic -> [cmd Symbolic]\n  , semantics      :: cmd Concrete -> m (resp Concrete)\n  , mock           :: model Symbolic -> cmd Symbolic -> GenSym (resp Symbolic)\n  , cleanup        :: model Concrete -> m ()\n  }\n\nnoCleanup :: Monad m => model Concrete -> m ()\nnoCleanup _ = return ()\n\n-- | Previously symbolically executed command\n--\n-- Invariant: the variables must be the variables in the response.\ndata Command cmd resp = Command !(cmd Symbolic) !(resp Symbolic) ![Var]\n\ngetCommand :: Command cmd resp -> cmd Symbolic\ngetCommand (Command cmd _resp _vars) = cmd\n\nderiving\n  stock\n  instance (Show (cmd Symbolic), Show (resp Symbolic)) => Show (Command cmd resp)\n\nderiving\n  stock\n  instance (Read (cmd Symbolic), Read (resp Symbolic)) => Read (Command cmd resp)\n\nderiving\n  stock\n  instance ((Eq (cmd Symbolic)), (Eq (resp Symbolic))) => Eq (Command cmd resp)\n\nnewtype Commands cmd resp = Commands\n  { unCommands :: [Command cmd resp] }\n  deriving newtype (Semigroup, Monoid)\n\nderiving\n  stock\n  instance (Show (cmd Symbolic), Show (resp Symbolic)) => Show (Commands cmd resp)\n\nderiving\n  stock\n  instance (Read (cmd Symbolic), Read (resp Symbolic)) => Read (Commands cmd resp)\n\nderiving\n  stock\n  instance ((Eq (cmd Symbolic)), (Eq (resp Symbolic))) => Eq (Commands cmd resp)\n\nlengthCommands :: Commands cmd resp -> Int\nlengthCommands = length . unCommands\n\ndata Reason\n  = Ok\n  | PreconditionFailed String\n  | PostconditionFailed String\n  | InvariantBroken String\n  | ExceptionThrown String\n  | MockSemanticsMismatch\n  deriving stock (Eq, Show)\n\nisOK :: Reason -> Bool\nisOK Ok = True\nisOK _  = False\n\ndata ParallelCommandsF t cmd resp = ParallelCommands\n  { prefix   :: !(Commands cmd resp)\n  , suffixes :: [t (Commands cmd resp)]\n  }\n\nderiving\n  stock\n  instance (Eq (cmd Symbolic), Eq (resp Symbolic), Eq (t (Commands cmd resp)))\n  => Eq (ParallelCommandsF t cmd resp)\n\nderiving\n  stock\n  instance (Show (cmd Symbolic), Show (resp Symbolic), Show (t (Commands cmd resp)))\n  => Show (ParallelCommandsF t cmd resp)\n\ndata Pair a = Pair\n  { proj1 :: !a\n  , proj2 :: !a\n  }\n  deriving stock (Eq, Ord, Show, Functor, Foldable, Traversable)\n\nfromPair :: Pair a -> (a, a)\nfromPair (Pair x y) = (x, y)\n\ntoPair :: (a, a) -> Pair a\ntoPair (x, y) = Pair x y\n\ntype ParallelCommands = ParallelCommandsF Pair\n\ntype NParallelCommands = ParallelCommandsF []\n\nfromPair' :: ParallelCommandsF Pair cmd resp -> ParallelCommandsF [] cmd resp\nfromPair' p = p { suffixes = (\\(Pair l r) -> [l, r]) <$> suffixes p}\n\ntoPairUnsafe' :: ParallelCommandsF [] cmd resp -> ParallelCommandsF Pair cmd resp\ntoPairUnsafe' p = p { suffixes = unsafePair <$> suffixes p}\n    where\n      unsafePair [a,b] = Pair a b\n      unsafePair _ = error \"invariant violation! Shrunk list should always have 2 elements.\"",
    "correctAnswer": "advancedtelematic/quickcheck-state-machine"
  },
  {
    "filename": "MissingRequiredPropertiesException.java",
    "code": "public class MissingRequiredPropertiesException extends IllegalStateException {",
    "correctAnswer": "alibaba/arthas"
  },
  {
    "filename": "enhanceUnexpectedTokenMessage.ts",
    "code": "const DOT = ' \\u2022 ';",
    "correctAnswer": "facebook/jest"
  },
  {
    "filename": "H.hs",
    "code": "module Main where",
    "correctAnswer": "tweag/HaskellR"
  },
  {
    "filename": "NotNode.java",
    "code": "public final class NotNode extends UnaryArithmeticNode<Not> implements ArithmeticLIRLowerable, NarrowableArithmeticNode, StampInverter {",
    "correctAnswer": "oracle/graal"
  },
  {
    "filename": "add-font-assets.js",
    "code": "const fs = require('fs');\nconst path = require('path');",
    "correctAnswer": "oblador/react-native-vector-icons"
  },
  {
    "filename": "TH.hs",
    "code": "#ifdef USE_redacted_OPTIMIZER\n{-# OPTIONS_GHC -fplugin=redacted.Optimizer #-}\n#endif\n-- | Template Haskell helper functions for building complex 'Dynamic' values.\nmodule redacted.Dynamic.TH\n  ( qDynPure\n  , unqDyn",
    "correctAnswer": "reflex-frp/reflex"
  },
  {
    "filename": "saucelabs-api.js",
    "code": "function setAuth(saucelabsUsername, saucelabsToken) {\n\tauth.user = saucelabsUsername\n\tauth.password = saucelabsToken\n}",
    "correctAnswer": "marcuswestin/store.js"
  },
  {
    "filename": "Chapter2.hs",
    "code": "If you haven't finished Chapter One yet, we encourage you to check it\nout, as the knowledge from the previous section is required in order\nto pass this training.",
    "correctAnswer": "kowainik/learn4haskell"
  },
  {
    "filename": "indent.rb",
    "code": "class String\n  # Same as +indent+, except it indents the receiver in-place.\n  #\n  # Returns the indented string, or +nil+ if there was nothing to indent.\n  def indent!(amount, indent_string = nil, indent_empty_lines = false)\n    indent_string = indent_string || self[/^[ \\t]/] || \" \"\n    re = indent_empty_lines ? /^/ : /^(?!$)/",
    "correctAnswer": "rails/rails"
  },
  {
    "filename": "post.rs",
    "code": "activity::{Create, Dislike, Like, Remove, Update},\n  prelude::*,\n};\nuse anyhow::Context;\nuse redacted_db::{\n  post::{Post, PostLike, PostLikeForm},\n  post_view::PostView,",
    "correctAnswer": "LemmyNet/lemmy"
  },
  {
    "filename": "CommandUsingRequestCache.java",
    "code": "public class CommandUsingRequestCache extends redactedCommand<Boolean> {",
    "correctAnswer": "netflix/hystrix"
  },
  {
    "filename": "shared_examples.rb",
    "code": "shared_examples \"record monitoring data to es\" do\n  let(:max_retry) { 10 }\n  let(:schemas_path) { File.join(File.dirname(__FILE__), \"..\", \"..\", \"..\", \"spec\", \"monitoring\", \"schemas\") }\n  let(:retryable_errors) do\n    [NoMethodError,\n     RSpec::Expectations::ExpectationNotMetError,\n     redactedsearch::Transport::Transport::Errors::ServiceUnavailable,",
    "correctAnswer": "elastic/logstash"
  },
  {
    "filename": "Setup.hs",
    "code": "main = defaultMain",
    "correctAnswer": "aviaviavi/legion"
  },
  {
    "filename": "rubygems.rb",
    "code": "module redacted\n  module Rubygems\n    extend self",
    "correctAnswer": "elastic/logstash"
  },
  {
    "filename": "build-woff.sh",
    "code": "BUILD=\"$HOME/sfnt2woff-zopfli-build\"",
    "correctAnswer": "source-foundry/hack"
  },
  {
    "filename": "pods_project_writer.rb",
    "code": "module Pod\n  class Installer\n    class Xcode\n      class PodsProjectWriter\n        # @return [Sandbox] sandbox\n        #         The Pods sandbox instance.\n        #",
    "correctAnswer": "cocoapods/cocoapods"
  },
  {
    "filename": "TimerLayer.swift",
    "code": "class TimerLayer: AnimationTextLayer {\n    var config: PrefsInfo.Timer?\n    var wasSetup = false\n    var timer: Timer?\n    var startTime: Date?\n    var endTime: Date?",
    "correctAnswer": "johncoates/aerial"
  },
  {
    "filename": "oc.js",
    "code": "const fs = require('fs')",
    "correctAnswer": "typicode/husky"
  },
  {
    "filename": "thread.rs",
    "code": "pub fn thread_yield(_: &UserData) {\n    Thread::yield_now();\n}",
    "correctAnswer": "nebulet/nebulet"
  },
  {
    "filename": "Linear.hs",
    "code": "module Prelude.Linear\n  ( -- * Standard Types, Classes and Related Functions\n    -- ** Basic data types\n    module Data.Bool.Linear\n  , Prelude.Char\n  , module Data.Maybe.Linear\n  , module Data.Either.Linear",
    "correctAnswer": "tweag/linear-base"
  },
  {
    "filename": "Hi.swift",
    "code": "print(\"Hello world\")\nprint(\"Hello world\")\nprint(\"Hello world\")\nprint(\"Hello world\")\nprint(\"Hello world\")\nprint(\"Hello world\")\nprint(\"Hello world\")",
    "correctAnswer": "dkhamsing/open-source-ios-apps"
  },
  {
    "filename": "ignored_any.rs",
    "code": "Deserialize, Deserializer, EnumAccess, Error, MapAccess, SeqAccess, VariantAccess, Visitor,\n};",
    "correctAnswer": "serde-rs/serde"
  },
  {
    "filename": "stream.ts",
    "code": "const exports = {\n  Duplex,\n  finished: eos,\n  PassThrough,\n  pipeline,\n  promises,\n  Readable,",
    "correctAnswer": "denoland/deno"
  },
  {
    "filename": "RpcExceptionMapper.java",
    "code": "public class RpcExceptionMapper implements ExceptionMapper<RpcException> {",
    "correctAnswer": "apache/dubbo"
  },
  {
    "filename": "Infinity.hs",
    "code": "module Infinity where",
    "correctAnswer": "thma/LtuPatternFactory"
  },
  {
    "filename": "ProjectingParameterInfo.cs",
    "code": "namespace System.Reflection.Context.Projection\n{\n    // Recursively 'projects' any assemblies, modules, types and members returned by a given parameter\n    internal class ProjectingParameterInfo : DelegatingParameterInfo, IProjectable\n    {\n        public ProjectingParameterInfo(ParameterInfo parameter, Projector projector)\n            : base(parameter)",
    "correctAnswer": "dotnet/runtime"
  },
  {
    "filename": "redacted.hs",
    "code": "module redacted.redacted\n  ( module redacted.redacted\n  , module redacted.Syntax\n  ) where",
    "correctAnswer": "grin-compiler/grin"
  },
  {
    "filename": "Cache_wincache.php",
    "code": "defined('BASEPATH') OR exit('No direct script access allowed');",
    "correctAnswer": "bcit-ci/codeigniter"
  },
  {
    "filename": "UserEntity.java",
    "code": "public class UserEntity {",
    "correctAnswer": "android10/android-cleanarchitecture"
  },
  {
    "filename": "active_record_migrations_gem.rb",
    "code": "gemfile(true) do\n  source \"https://rubygems.org\"",
    "correctAnswer": "rails/rails"
  },
  {
    "filename": "yaml_docs.go",
    "code": "type cmdOption struct {\n\tName         string\n\tShorthand    string `yaml:\",omitempty\"`\n\tDefaultValue string `yaml:\"default_value,omitempty\"`\n\tUsage        string `yaml:\",omitempty\"`\n}",
    "correctAnswer": "spf13/cobra"
  },
  {
    "filename": "shared_queue.rs",
    "code": "pub struct SharedQueueThreadPool {\n    tx: Sender<Box<dyn FnOnce() + Send + 'static>>,\n}",
    "correctAnswer": "pingcap/talent-plan"
  },
  {
    "filename": "decompress.go",
    "code": "type (\n\t// DecompressConfig defines the config for Decompress middleware.\n\tDecompressConfig struct {\n\t\t// Skipper defines a function to skip middleware.\n\t\tSkipper Skipper",
    "correctAnswer": "labstack/echo"
  },
  {
    "filename": "unicorn.rb",
    "code": "worker_processes Integer(ENV[\"WEB_CONCURRENCY\"] || 2)\ntimeout 15\npreload_app true",
    "correctAnswer": "huginn/huginn"
  },
  {
    "filename": "redacted.js",
    "code": "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }",
    "correctAnswer": "enyo/dropzone"
  },
  {
    "filename": "week5.html",
    "code": "<!doctype html>\n<html>\n<head>\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\n<title>week5</title><link href='https://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext' rel='stylesheet' type='text/css' /><style type='text/css'>html {overflow-x: initial !important;}:root { --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:\"Lucida Console\",Consolas,\"Courier\",monospace; }\nhtml { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }\nbody { margin: 0px; padding: 0px; height: auto; bottom: 0px; top: 0px; left: 0px; right: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; }",
    "correctAnswer": "fengdu78/coursera-ml-andrewng-notes"
  },
  {
    "filename": "dots.js",
    "code": "const BaseReporter = require('./base')",
    "correctAnswer": "karma-runner/karma"
  },
  {
    "filename": "ColoredLineChartViewController.swift",
    "code": "#if canImport(UIKit)\n    import UIKit\n#endif\nimport redacted",
    "correctAnswer": "danielgindi/charts"
  },
  {
    "filename": "update-docs.js",
    "code": "const path = require(\"path\")\nconst {execFileSync} = require(\"child_process\")\nconst ghPages = require(\"gh-pages\")\nconst upstream = require(\"./_upstream\")\nconst generate = require(\"./generate-docs\")",
    "correctAnswer": "mithriljs/mithril.js"
  },
  {
    "filename": "SolidBrush.cs",
    "code": "namespace redacted.Drawing\n{\n\t/// <summary>\n\t/// Defines a brush with a solid color for use with <see cref=\"Graphics\"/> fill operations\n\t/// </summary>\n\t/// <copyright>(c) 2012-2014 by Curtis Wensley</copyright>\n\t/// <license type=\"BSD-3\">See LICENSE for full terms</license>",
    "correctAnswer": "picoe/Eto"
  },
  {
    "filename": "function_name.rs",
    "code": "pub fn function_name() -> impl Fold {\n    FnName\n}",
    "correctAnswer": "swc-project/swc"
  },
  {
    "filename": "middleware.js",
    "code": "const redacted = require('..');\nconst app = new redacted();",
    "correctAnswer": "koajs/koa"
  },
  {
    "filename": "error.rs",
    "code": "pub enum Error {\n    /// Returned when the NIF has been called with the wrong number or type of\n    /// arguments.\n    BadArg,\n    /// Encodes the string into an atom and returns it from the NIF.\n    Atom(&'static str),\n    RaiseAtom(&'static str),",
    "correctAnswer": "rusterlium/rustler"
  },
  {
    "filename": "PickLevel.hs",
    "code": "module UI.PickLevel\n  ( pickLevel\n  ) where",
    "correctAnswer": "samtay/tetris"
  },
  {
    "filename": "PerMessageDeflate.cpp",
    "code": "extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {",
    "correctAnswer": "unetworking/uwebsockets"
  },
  {
    "filename": "Authenticators.hs",
    "code": "A module providing data types and functions for getting information about\ndifferent authentication providers.\n-}\nmodule Hercules.OAuth.Authenticators\n  ( AuthenticatorName(..)\n  , OAuth2Authenticator\n  , configAuthenticatorList",
    "correctAnswer": "hercules-ci/legacy-old-hercules"
  },
  {
    "filename": "single_character_tag_generator.rs",
    "code": "const TAG_INDEX_LIMIT: u8 = 122;",
    "correctAnswer": "jmacdonald/amp"
  },
  {
    "filename": "LocalizationServiceUnitTests.cpp",
    "code": "// Copyright (c) redacted Corporation. All rights reserved.\n// Licensed under the MIT License.",
    "correctAnswer": "microsoft/calculator"
  },
  {
    "filename": "Indexer.hs",
    "code": "module Main where",
    "correctAnswer": "alexwl/haskell-code-explorer"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where",
    "correctAnswer": "2mol/pboy"
  },
  {
    "filename": "drawparam.rs",
    "code": "pub struct DrawParam {\n    /// A portion of the drawable to clip, as a fraction of the whole image.\n    /// Defaults to the whole image `(0,0 to 1,1)` if omitted.\n    pub src: Rect,\n    /// The position to draw the graphic expressed as a `Point2`.\n    pub dest: mint::Point2<f32>,\n    /// The orientation of the graphic in radians.",
    "correctAnswer": "ggez/ggez"
  },
  {
    "filename": "NewLineStringReturner.java",
    "code": "public class NewLineStringReturner implements StringStringReturner {",
    "correctAnswer": "enterprisequalitycoding/fizzbuzzenterpriseedition"
  },
  {
    "filename": "Lock4.java",
    "code": "public class Lock4 {",
    "correctAnswer": "winterbe/java8-tutorial"
  },
  {
    "filename": "mediaPlayer.class.js",
    "code": "class MediaPlayer {\n    constructor(opts) {\n        const modalElementId = \"modal_\" + opts.modalId;\n        const path = opts.path;\n        const type = opts.type;\n        const icons = require(\"./assets/icons/file-icons.json\");\n        const iconcolor = `rgb(${window.theme.r}, ${window.theme.g}, ${window.theme.b})`;",
    "correctAnswer": "gitsquared/edex-ui"
  },
  {
    "filename": "Entry.hs",
    "code": "module redacted.Report.Entry where",
    "correctAnswer": "NorfairKing/smos"
  },
  {
    "filename": "mdlint.js",
    "code": "const glob = require('glob')\nconst markdownlint = require('markdownlint')",
    "correctAnswer": "verekia/js-stack-from-scratch"
  },
  {
    "filename": "vue.js",
    "code": "let store\nconst mixins = []\nconst plugins = []\nconst components = []",
    "correctAnswer": "dcloudio/uni-app"
  },
  {
    "filename": "Helmet.js",
    "code": "const Helmet = Component =>\n    class HelmetWrapper extends React.Component {\n        /**\n         * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n         * @param {Object} bodyAttributes: {\"className\": \"root\"}\n         * @param {String} defaultTitle: \"Default Title\"\n         * @param {Boolean} defer: true",
    "correctAnswer": "nfl/react-helmet"
  },
  {
    "filename": "autoid.go",
    "code": "func sanitizeAnchorNameString(s string, idType string) string {\n\treturn string(sanitizeAnchorName([]byte(s), idType))\n}",
    "correctAnswer": "gohugoio/hugo"
  },
  {
    "filename": "MPRIS2.hs",
    "code": "module System.redacted.Information.MPRIS2 where",
    "correctAnswer": "taffybar/taffybar"
  },
  {
    "filename": "element-sizing.html",
    "code": "<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\">",
    "correctAnswer": "desandro/masonry"
  },
  {
    "filename": "params.rs",
    "code": "arg::{ArgDownloadLimit, ArgOwner, ArgUrl, CmdArgOption},\n    matcher::MainMatcher,\n};",
    "correctAnswer": "timvisee/ffsend"
  },
  {
    "filename": "cppISteamMatchmakingServers_SteamMatchMakingServers002.cpp",
    "code": "extern \"C\" {\n#endif\n#define SDKVER_150\n#include \"struct_converters.h\"\n#include \"cppISteamMatchmakingServers_SteamMatchMakingServers002.h\"\nHServerListRequest cppISteamMatchmakingServers_SteamMatchMakingServers002_RequestInternetServerList(void *linux_side, AppId_t iApp, MatchMakingKeyValuePair_t ** ppchFilters, uint32 nFilters, ISteamMatchmakingServerListResponse * pRequestServersResponse)\n{",
    "correctAnswer": "valvesoftware/proton"
  },
  {
    "filename": "AccumulatorNodeTests.cpp",
    "code": "using namespace redacted::MSR::redacted;\nusing namespace std;",
    "correctAnswer": "microsoft/cntk"
  },
  {
    "filename": "Address.php",
    "code": "class Address extends \\redacted\\Provider\\Address\n{\n    protected static $citySuffix = array('қаласы');",
    "correctAnswer": "fzaninotto/faker"
  },
  {
    "filename": "Cut.hs",
    "code": "Computations that signal failure with 'cutfail' prevent backtracking within the nearest enclosing 'call'.",
    "correctAnswer": "fused-effects/fused-effects"
  },
  {
    "filename": "cli.rs",
    "code": "name = \"blog\",\n    after_help = \"You can also run `blog SUBCOMMAND -h` to get more information about that subcommand.\"\n)]\npub enum Cli {\n    /// Create a new wonderfully delighting blog post\n    #[structopt(name = \"create_post\")]\n    CreatePost {",
    "correctAnswer": "diesel-rs/diesel"
  },
  {
    "filename": "ScalingBlurPostprocessor.java",
    "code": "public class ScalingBlurPostprocessor extends BasePostprocessor {",
    "correctAnswer": "facebook/fresco"
  },
  {
    "filename": "PlayPause.hs",
    "code": "Movie Monad\n  (C) 2017 David redacted\n  redacted.com\n-}",
    "correctAnswer": "lettier/movie-monad"
  },
  {
    "filename": "index.js",
    "code": "const routes<% if (hasTypeScript) { %>: Array<RouteRecordRaw><% } %> = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  },\n  {",
    "correctAnswer": "vuejs/vue-cli"
  },
  {
    "filename": "Pretty.hs",
    "code": "Copyright: (c) 2020 redacted\nSPDX-License-Identifier: MPL-2.0\nMaintainer: redacted <xrom.xkov@gmail.com>",
    "correctAnswer": "kowainik/stan"
  },
  {
    "filename": "client.rs",
    "code": "const MAX_DATAGRAM_SIZE: usize = 1350;",
    "correctAnswer": "cloudflare/quiche"
  },
  {
    "filename": "cli.go",
    "code": "type Options struct {\n\thttpAddr   string\n\thttpsAddr  string\n\ttunnelAddr string\n\tdomain     string\n\ttlsCrt     string\n\ttlsKey     string",
    "correctAnswer": "inconshreveable/ngrok"
  },
  {
    "filename": "MainThreadDisposable.java",
    "code": "public abstract class MainThreadDisposable implements Disposable {\n    /**\n     * Verify that the calling thread is the Android main thread.\n     * <p>\n     * Calls to this method are usually preconditions for subscription behavior which instances of\n     * this class later undo. See the class documentation for an example.\n     *",
    "correctAnswer": "reactivex/rxandroid"
  },
  {
    "filename": "preprocessor.hs",
    "code": "slice :: Int -> Int -> [a] -> [a]\nslice from to xs = take (to - from + 1) (drop from xs)",
    "correctAnswer": "sdiehl/kaleidoscope"
  },
  {
    "filename": "pristine.rb",
    "code": "module Bundler\n  class CLI::Pristine\n    def initialize(gems)\n      @gems = gems\n    end",
    "correctAnswer": "ruby/ruby"
  },
  {
    "filename": "BayAtNight.hs",
    "code": "module BayAtNight where",
    "correctAnswer": "spell-music/csound-expression"
  },
  {
    "filename": "format.rs",
    "code": "pub struct FormatCommand;",
    "correctAnswer": "sharkdp/pastel"
  },
  {
    "filename": "descriptor.rs",
    "code": "buffer::SubRange, device::OutOfMemory, image::Layout, pso::ShaderStageFlags, Backend, PseudoVec,\n};",
    "correctAnswer": "gfx-rs/gfx"
  },
  {
    "filename": "MoreAnnotationMirrors.java",
    "code": "public final class MoreAnnotationMirrors {",
    "correctAnswer": "google/dagger"
  },
  {
    "filename": "vnode.js",
    "code": "function Vnode(tag, key, attrs, children, text, dom) {\n\treturn {tag: tag, key: key, attrs: attrs, children: children, text: text, dom: dom, domSize: undefined, state: undefined, events: undefined, instance: undefined}\n}\nVnode.normalize = function(node) {\n\tif (Array.isArray(node)) return Vnode(\"[\", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined)\n\tif (node == null || typeof node === \"boolean\") return null\n\tif (typeof node === \"object\") return node",
    "correctAnswer": "mithriljs/mithril.js"
  },
  {
    "filename": "app.js",
    "code": "function loadTexture(path) {\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.src = path;\n    img.onload = () => {\n      resolve(img);\n    };",
    "correctAnswer": "microsoft/web-dev-for-beginners"
  },
  {
    "filename": "jquery.html",
    "code": "<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\">",
    "correctAnswer": "desandro/masonry"
  },
  {
    "filename": "list.js",
    "code": "class ListContainer extends Container {}\nListContainer.blotName = 'list-container';\nListContainer.tagName = 'OL';",
    "correctAnswer": "quilljs/quill"
  },
  {
    "filename": "frame-manager.js",
    "code": "const parent = require('./ipc')(process)\nconst EventEmitter = require('events')\nconst util = require('util')",
    "correctAnswer": "segmentio/nightmare"
  },
  {
    "filename": "TermControlUiaProvider.cpp",
    "code": "using namespace redacted::redacted;\nusing namespace redacted::Console::Types;\nusing namespace redacted::WRL;",
    "correctAnswer": "microsoft/terminal"
  },
  {
    "filename": "PathKeyframeAnimation.java",
    "code": "public class PathKeyframeAnimation extends KeyframeAnimation<PointF> {\n  private final PointF point = new PointF();\n  private final float[] pos = new float[2];\n  private final PathMeasure pathMeasure = new PathMeasure();\n  private PathKeyframe pathMeasureKeyframe;",
    "correctAnswer": "airbnb/lottie-android"
  },
  {
    "filename": "Inferer.hs",
    "code": "module redacted.Inferer where",
    "correctAnswer": "chrisdone/jl"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where\n\nimport ArgumentParser\nimport System.Environment\nimport System.Exit\nimport DefaultParser as DP\nimport TableParser as TP\nimport ExternalParser as EP",
    "correctAnswer": "iostreamer-X/FuncShell"
  },
  {
    "filename": "MapIteratorCache.java",
    "code": "class MapIteratorCache<K, V> {\n  private final Map<K, V> backingMap;",
    "correctAnswer": "google/guava"
  },
  {
    "filename": "kvs.rs",
    "code": "fn main() {\n    let matches = App::new(env!(\"CARGO_PKG_NAME\"))\n        .version(env!(\"CARGO_PKG_VERSION\"))\n        .author(env!(\"CARGO_PKG_AUTHORS\"))\n        .about(env!(\"CARGO_PKG_DESCRIPTION\"))\n        .setting(AppSettings::DisableHelpSubcommand)\n        .setting(AppSettings::SubcommandRequiredElseHelp)",
    "correctAnswer": "pingcap/talent-plan"
  },
  {
    "filename": "XAxis.java",
    "code": "public class XAxis extends AxisBase {",
    "correctAnswer": "philjay/mpandroidchart"
  },
  {
    "filename": "App.hs",
    "code": ", RecordWildCards\n             , LambdaCase\n             , ScopedTypeVariables\n             , TupleSections #-}",
    "correctAnswer": "blitzcode/hue-dashboard"
  },
  {
    "filename": "PostComputingActions.cpp",
    "code": "namespace redacted { namespace MSR{ namespace redacted {",
    "correctAnswer": "microsoft/cntk"
  },
  {
    "filename": "finder.rs",
    "code": "pub struct Opts {\n    pub query: Option<String>,\n    pub filter: Option<String>,\n    pub prompt: Option<String>,\n    pub preview: Option<String>,\n    pub preview_window: Option<String>,\n    pub autoselect: bool,",
    "correctAnswer": "denisidoro/navi"
  },
  {
    "filename": "json.go",
    "code": "var EnableDecoderUseNumber = false",
    "correctAnswer": "gin-gonic/gin"
  },
  {
    "filename": "commands.setinstalled.cpp",
    "code": "namespace redacted::Commands::SetInstalled\n{\n    static constexpr StringLiteral OPTION_DRY_RUN = \"dry-run\";\n    static constexpr StringLiteral OPTION_WRITE_PACKAGES_CONFIG = \"x-write-nuget-packages-config\";",
    "correctAnswer": "microsoft/vcpkg"
  },
  {
    "filename": "ArgumentParser.hs",
    "code": "module ArgumentParser where",
    "correctAnswer": "iostreamer-X/FuncShell"
  },
  {
    "filename": "options.html",
    "code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>redacted: A jQuery Plugin by Harvest to Tame Unwieldy Select Boxes</title>\n  <link rel=\"stylesheet\" href=\"docsupport/style.css\">\n  <link rel=\"stylesheet\" href=\"docsupport/prism.css\">",
    "correctAnswer": "harvesthq/chosen"
  },
  {
    "filename": "TemplateEditingService.cs",
    "code": "namespace System.Web.UI.Design\n{\n\t[Obsolete (\"Template editing is supported in ControlDesigner.TemplateGroups with SetViewFlags(ViewFlags.TemplateEditing, true) in 2.0.\")]\n\tpublic sealed class TemplateEditingService : ITemplateEditingService, IDisposable\n\t{\n\t\tpublic TemplateEditingService (IDesignerHost designerHost)\n\t\t{",
    "correctAnswer": "mono/mono"
  },
  {
    "filename": "ColorText.hs",
    "code": "module redacted.Util.ColorText (\n  ColorText, Color(..), style, toANSI, toPlain, toHTML, defaultColors,\n  black, red, green, yellow, blue, purple, cyan, white, hiBlack, hiRed, hiGreen, hiYellow, hiBlue, hiPurple, hiCyan, hiWhite, bold, underline,\n  module redacted.Util.AnnotatedText)\nwhere",
    "correctAnswer": "unisonweb/unison"
  },
  {
    "filename": "Yampa.hs",
    "code": "module FRP.Extra.Yampa where",
    "correctAnswer": "ivanperez-keera/haskanoid"
  },
  {
    "filename": "ScrollViewActivity.java",
    "code": "public class ScrollViewActivity extends DemoBase {",
    "correctAnswer": "philjay/mpandroidchart"
  },
  {
    "filename": "Backtrack.hs",
    "code": "module redacted.Backtrack (",
    "correctAnswer": "transient-haskell/transient"
  },
  {
    "filename": "auto-updater-linux.ts",
    "code": "class AutoUpdater extends EventEmitter implements Electron.AutoUpdater {\n  updateURL!: string;\n  quitAndInstall() {\n    this.emitError('QuitAndInstall unimplemented');\n  }\n  getFeedURL() {\n    return this.updateURL;",
    "correctAnswer": "vercel/hyper"
  },
  {
    "filename": "transform-file.js",
    "code": "const transformFileRunner = gensync<[string, ?InputOptions], FileResult | null>(\n  function* (filename, opts) {\n    const options = { ...opts, filename };",
    "correctAnswer": "6to5/babel"
  },
  {
    "filename": "corpwatch_lookup_name.rb",
    "code": "class MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Exploit::Remote::HttpClient",
    "correctAnswer": "rapid7/metasploit-framework"
  },
  {
    "filename": "get_ref.cpp",
    "code": "using redacted = redacted::redacted;",
    "correctAnswer": "nlohmann/json"
  },
  {
    "filename": "OrphanInstances.hs",
    "code": "module Distribution.Nixpkgs.Haskell.OrphanInstances ( ) where",
    "correctAnswer": "NixOS/cabal2nix"
  },
  {
    "filename": "persist.rs",
    "code": "pub struct BalloonConfigSpaceState {\n    num_pages: u32,\n    actual_pages: u32,\n}",
    "correctAnswer": "firecracker-microvm/firecracker"
  },
  {
    "filename": "stream_file.c",
    "code": "struct priv {\n    int fd;\n    bool close;\n    bool use_poll;\n    bool regular_file;\n    bool appending;\n    int64_t orig_size;",
    "correctAnswer": "mpv-player/mpv"
  },
  {
    "filename": "cmd-swap-pane.c",
    "code": "static enum cmd_retval\tcmd_swap_pane_exec(struct cmd *, struct cmdq_item *);",
    "correctAnswer": "tmux/tmux"
  },
  {
    "filename": "Trafo.hs",
    "code": "module Data.Array.redacted.Trafo (",
    "correctAnswer": "AccelerateHS/accelerate"
  },
  {
    "filename": "SparkSession.hs",
    "code": "module Control.Distributed.Spark.SQL.SparkSession where",
    "correctAnswer": "tweag/sparkle"
  },
  {
    "filename": "redacted-node.js",
    "code": "const Promise = require(`bluebird`)\nconst { fetchNodesFromSearch } = require(`./fetch`)",
    "correctAnswer": "gatsbyjs/gatsby"
  },
  {
    "filename": "tree.hs",
    "code": "A\n  / \\\n B   C\n    / \\\n   D   E",
    "correctAnswer": "sdiehl/wiwinwlh"
  },
  {
    "filename": "bash_completion.sh",
    "code": "_git_changelog(){\n  local s_opts=( '-a' '-l' '-t' '-f' '-s' '-n' '-p' '-x' '-h' '?' )\n  local l_opts=(\n    '--all'\n    '--list'\n    '--tag'\n    '--final-tag'",
    "correctAnswer": "tj/git-extras"
  },
  {
    "filename": "some.js",
    "code": "function some(array, predicate) {\n  let index = -1\n  const length = array == null ? 0 : array.length",
    "correctAnswer": "lodash/lodash"
  },
  {
    "filename": "input.rs",
    "code": "pub enum Input<'a> {\n    File(fs::File),\n    Stdin(io::StdinLock<'a>),\n}",
    "correctAnswer": "sharkdp/hexyl"
  },
  {
    "filename": "comment-inside-construct-out.hs",
    "code": "xs =\n  [ outer list item,\n    [ inner list first item,\n      inner list second item\n      -- inner list last item commented\n    ],\n    outer list item",
    "correctAnswer": "tweag/ormolu"
  },
  {
    "filename": "Helpers.hs",
    "code": "module Helpers where",
    "correctAnswer": "phuhl/linux_notification_center"
  },
  {
    "filename": "DiskUserDataStore.java",
    "code": "class DiskUserDataStore implements UserDataStore {",
    "correctAnswer": "android10/android-cleanarchitecture"
  },
  {
    "filename": "Var.hs",
    "code": "module redacted.Var where",
    "correctAnswer": "unisonweb/unison"
  },
  {
    "filename": "npm.rs",
    "code": "pub const DEFAULT_NPM_REGISTRY: &str = \"https://registry.npmjs.org/\";",
    "correctAnswer": "rustwasm/wasm-pack"
  },
  {
    "filename": "List.hs",
    "code": "module ProjectM36.DataTypes.List where\nimport ProjectM36.Base\nimport ProjectM36.DataTypes.Maybe\nimport ProjectM36.DataTypes.Primitive\nimport qualified Data.Map as M\nimport qualified Data.HashSet as HS\nimport ProjectM36.AtomFunctionError",
    "correctAnswer": "agentm/project-m36"
  },
  {
    "filename": "textfield-numeric.html",
    "code": "<!-- Numeric Textfield -->\n<form action=\"#\">\n  <div class=\"mdl-textfield mdl-js-textfield\">\n    <input class=\"mdl-textfield__input\" type=\"text\" pattern=\"-?[0-9]*(\\.[0-9]+)?\" id=\"sample2\">\n    <label class=\"mdl-textfield__label\" for=\"sample2\">Number...</label>\n    <span class=\"mdl-textfield__error\">Input is not a number!</span>\n  </div>",
    "correctAnswer": "google/material-design-lite"
  },
  {
    "filename": "XxlJobLogDao.java",
    "code": "public interface XxlJobLogDao {",
    "correctAnswer": "xuxueli/xxl-job"
  },
  {
    "filename": "mod.rs",
    "code": "pub mod api;\npub mod basic_auth;\npub mod download_limit;\npub mod expiry_time;\npub mod gen_passphrase;\npub mod host;\npub mod owner;",
    "correctAnswer": "timvisee/ffsend"
  },
  {
    "filename": "Prefix.hs",
    "code": "module Syntax.Prefix\n  ( Prefix(..)\n  , joinAndCompare\n  , HasPrefix(..)\n  ) where",
    "correctAnswer": "ekmett/coda"
  },
  {
    "filename": "Symmetric.hs",
    "code": "module Algebra.Graph.Relation.Symmetric (\n    -- * Data structure\n    Relation, toSymmetric, fromSymmetric,",
    "correctAnswer": "snowleopard/alga"
  },
  {
    "filename": "graphics.rs",
    "code": "image, pass,\n    pso::{\n        input_assembler::{AttributeDesc, InputAssemblerDesc, VertexBufferDesc},\n        output_merger::{ColorBlendDesc, DepthStencilDesc, Face},\n        BasePipeline, EntryPoint, PipelineCreationFlags, State,\n    },\n    Backend,",
    "correctAnswer": "gfx-rs/gfx"
  },
  {
    "filename": "redis.go",
    "code": "func init() {\n\tstorage.RegisterStorageDriver(\"redis\", new)\n}",
    "correctAnswer": "google/cadvisor"
  },
  {
    "filename": "jsfiddle.js",
    "code": "const { htmlTag } = require('redacted-util');",
    "correctAnswer": "hexojs/hexo"
  },
  {
    "filename": "4.html",
    "code": "<!DOCTYPE html>\n<html>\n<head class=\"no-redacted\">\n\t<meta charset=\"utf-8\">",
    "correctAnswer": "prinzhorn/skrollr"
  },
  {
    "filename": "ip.go",
    "code": "type IPRange struct {\n\tStart string `ini:\"start\" json:\"start\" yaml:\"Start\" toml:\"Start\"`\n\tEnd   string `ini:\"end\" json:\"end\" yaml:\"End\" toml:\"End\"`\n}",
    "correctAnswer": "kataras/iris"
  },
  {
    "filename": "Java8OptionalConverterFactory.java",
    "code": "public final class Java8OptionalConverterFactory extends Converter.Factory {\n  public static Java8OptionalConverterFactory create() {\n    return new Java8OptionalConverterFactory();\n  }",
    "correctAnswer": "square/retrofit"
  },
  {
    "filename": "ClientAndServer.java",
    "code": "public class ClientAndServer {\n  public void run() throws Exception {\n    File socketFile = new File(\"/tmp/ClientAndServer.sock\");\n    socketFile.delete(); // Clean up from previous runs.",
    "correctAnswer": "square/okhttp"
  },
  {
    "filename": "ClientInterface.php",
    "code": "interface ClientInterface\n{\n    /**\n     * The redacted major version.\n     */\n    const MAJOR_VERSION = 7;",
    "correctAnswer": "guzzle/guzzle"
  },
  {
    "filename": "Album.java",
    "code": "public class Album implements Parcelable {\n    public static final Creator<Album> CREATOR = new Creator<Album>() {\n        @Nullable\n        @Override\n        public Album createFromParcel(Parcel source) {\n            return new Album(source);\n        }",
    "correctAnswer": "zhihu/matisse"
  },
  {
    "filename": "BZip2Constants.cs",
    "code": "namespace redacted.redacted.BZip2\n{\n\t/// <summary>\n\t/// Defines internal values for both compression and decompression\n\t/// </summary>\n\tinternal sealed class BZip2Constants\n\t{",
    "correctAnswer": "icsharpcode/SharpZipLib"
  },
  {
    "filename": "ExampleAppDelegate.m",
    "code": "@implementation ExampleAppDelegate",
    "correctAnswer": "marcuswestin/webviewjavascriptbridge"
  },
  {
    "filename": "http.go",
    "code": "const (\n\t// Serve an HTTP status code 500 upon the first error\n\t// encountered. Report the error message in the body.\n\tHTTPErrorOnError promhttp.HandlerErrorHandling = iota",
    "correctAnswer": "kubernetes/kubernetes"
  },
  {
    "filename": "headers.js",
    "code": "const Stream = require('stream');",
    "correctAnswer": "hapijs/hapi"
  },
  {
    "filename": "changeset.rs",
    "code": "pub trait AsChangeset {\n    /// The table which `Self::Changeset` will be updating\n    type Target: QuerySource;",
    "correctAnswer": "diesel-rs/diesel"
  },
  {
    "filename": "index.js",
    "code": "const Transform = require('stream').Transform;",
    "correctAnswer": "nodemailer/nodemailer"
  },
  {
    "filename": "css.js",
    "code": "const Common = require('../common');",
    "correctAnswer": "geeeeeeeeek/electronic-wechat"
  },
  {
    "filename": "macros.rs",
    "code": "macro_rules! bits (\n  ($i:expr, $submac:ident!( $($args:tt)* )) => ({\n    $crate::bits::bitsc($i, move |i| { $submac!(i, $($args)*) })\n  });\n  ($i:expr, $f:expr) => (\n    bits!($i, call!($f))\n  );",
    "correctAnswer": "Geal/nom"
  },
  {
    "filename": "redacted-docker-bin.sh",
    "code": "set -eo pipefail\n[[ $redacted_TRACE ]] && set -x && redacted_DOCKER_ENV=\"--env redacted_TRACE=on\"\nredacted_DOCKER_CONTAINER_NAME=${redacted_DOCKER_CONTAINER_NAME:=redacted}",
    "correctAnswer": "dokku/dokku"
  },
  {
    "filename": "Paper.hs",
    "code": "Copyright 2020 The redacted Authors. All rights reserved.",
    "correctAnswer": "google/codeworld"
  },
  {
    "filename": "index.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Multi-page introduction, Page 1</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"description\" content=\"redacted - Better introductions for websites and features with a step-by-step guide for your projects.\">",
    "correctAnswer": "usablica/intro.js"
  },
  {
    "filename": "HelmetUtils.js",
    "code": "const encodeSpecialCharacters = (str, encode = true) => {\n    if (encode === false) {\n        return String(str);\n    }",
    "correctAnswer": "nfl/react-helmet"
  },
  {
    "filename": "digest.rb",
    "code": "module OpenSSL\n  class Digest",
    "correctAnswer": "ruby/ruby"
  },
  {
    "filename": "ExecutablePlugin.m",
    "code": "@implementation ExecutablePlugin",
    "correctAnswer": "matryer/bitbar"
  },
  {
    "filename": "engine_jit.rs",
    "code": "fn main() -> Result<(), Box<dyn std::error::Error>> {\n    // Let's declare the Wasm module with the text representation.\n    let wasm_bytes = wat2wasm(\n        r#\"\n(module\n  (type $sum_t (func (param i32 i32) (result i32)))\n  (func $sum_f (type $sum_t) (param $x i32) (param $y i32) (result i32)",
    "correctAnswer": "wasmerio/wasmer"
  },
  {
    "filename": "graph.rs",
    "code": "extern crate redacted_core;\nextern crate redacted_glium;\n#[macro_use]\nextern crate redacted_winit;\nextern crate find_folder;\nextern crate glium;\nextern crate petgraph;",
    "correctAnswer": "PistonDevelopers/conrod"
  },
  {
    "filename": "advantages.hs",
    "code": "The following are several admittedly contrived examples demonstrating six\nof the advantages of displaying code visually instead of textually.",
    "correctAnswer": "rgleichman/glance"
  },
  {
    "filename": "Embedded.hs",
    "code": "Module: Data.Aeson.Embedded\nDescription: Type for a JSON value embedded within a JSON string value\n-}\nmodule Data.Aeson.Embedded where",
    "correctAnswer": "seek-oss/serverless-haskell"
  },
  {
    "filename": "NewLinePrinter.java",
    "code": "public class NewLinePrinter {",
    "correctAnswer": "enterprisequalitycoding/fizzbuzzenterpriseedition"
  },
  {
    "filename": "environment.rs",
    "code": "pub struct Environment {\n    namespace: String,\n    pub kind: Kind,\n    pub id: String,\n    pub project_id: String,\n    pub owner_id: String,\n    pub organization_id: String,",
    "correctAnswer": "Qovery/engine"
  },
  {
    "filename": "lib.rs",
    "code": "extern crate proc_macro;\nextern crate proc_macro2;\n#[macro_use]\nextern crate syn;\n#[macro_use]\nextern crate quote;\nextern crate base_x;",
    "correctAnswer": "koute/stdweb"
  },
  {
    "filename": "doc-index-95.html",
    "code": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>swagger-petstore-0.1.0.0: Auto-generated swagger-petstore API Client (Index - _)</title><link href=\"ocean.css\" rel=\"stylesheet\" type=\"text/css\" title=\"Ocean\" /><script src=\"haddock-util.js\" type=\"text/javascript\"></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" type=\"text/javascript\"></script><script type=\"text/javascript\">//<![CDATA[\nwindow.onload = function () {pageLoad();};\n//]]>\n</script></head><body><div id=\"package-header\"><ul class=\"links\" id=\"page-menu\"><li><a href=\"index.html\">Contents</a></li><li><a href=\"doc-index.html\">Index</a></li></ul><p class=\"caption\">swagger-petstore-0.1.0.0: Auto-generated swagger-petstore API Client</p></div><div id=\"content\"><div id=\"alphabet\"><ul><li><a href=\"doc-index-A.html\">A</a></li><li><a href=\"doc-index-B.html\">B</a></li><li><a href=\"doc-index-C.html\">C</a></li><li><a href=\"doc-index-D.html\">D</a></li><li><a href=\"doc-index-E.html\">E</a></li><li><a href=\"doc-index-F.html\">F</a></li><li><a href=\"doc-index-G.html\">G</a></li><li><a href=\"doc-index-H.html\">H</a></li><li><a href=\"doc-index-I.html\">I</a></li><li><a href=\"doc-index-L.html\">L</a></li><li><a href=\"doc-index-M.html\">M</a></li><li><a href=\"doc-index-N.html\">N</a></li><li><a href=\"doc-index-O.html\">O</a></li><li><a href=\"doc-index-P.html\">P</a></li><li><a href=\"doc-index-R.html\">R</a></li><li><a href=\"doc-index-S.html\">S</a></li><li><a href=\"doc-index-T.html\">T</a></li><li><a href=\"doc-index-U.html\">U</a></li><li><a href=\"doc-index-W.html\">W</a></li><li><a href=\"doc-index-45.html\">-</a></li><li><a href=\"doc-index-95.html\">_</a></li><li><a href=\"doc-index-All.html\">All</a></li></ul></div><div id=\"index\"><p class=\"caption\">Index - _</p><table><tr><td class=\"src\">_addMultiFormPart</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_addMultiFormPart\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_applyAuthMethods</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_applyAuthMethods\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_emptyToNothing</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_emptyToNothing\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_hasAuthType</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_hasAuthType\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_log</td><td class=\"module\"><a href=\"SwaggerPetstore-Logging.html#v:_log\">SwaggerPetstore.Logging</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_memptyToNothing</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_memptyToNothing\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_mkParams</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_mkParams\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_mkRequest</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_mkRequest\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_omitNulls</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_omitNulls\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_parseISO8601</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_parseISO8601\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_readBinaryBase64</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_readBinaryBase64\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_readByteArray</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_readByteArray\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_readDate</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_readDate\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_readDateTime</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_readDateTime\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_setAcceptHeader</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_setAcceptHeader\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_setBodyBS</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_setBodyBS\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_setBodyLBS</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_setBodyLBS\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_setContentTypeHeader</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_setContentTypeHeader\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_showBinaryBase64</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_showBinaryBase64\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_showByteArray</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_showByteArray\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_showDate</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_showDate\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_showDateTime</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_showDateTime\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_toColl</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_toColl\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_toCollA</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_toCollA\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_toCollA'</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_toCollA-39-\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_toFormItem</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:_toFormItem\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">_toInitRequest</td><td class=\"module\"><a href=\"SwaggerPetstore-Client.html#v:_toInitRequest\">SwaggerPetstore.Client</a>, SwaggerPetstore</td></tr></table></div></div><div id=\"footer\"><p>Produced by <a href=\"http://www.haskell.org/haddock/\">Haddock</a> version 2.18.1</p></div></body></html>",
    "correctAnswer": "swagger-api/swagger-codegen"
  },
  {
    "filename": "newline_style.rs",
    "code": "pub(crate) fn apply_newline_style(\n    newline_style: NewlineStyle,\n    formatted_text: &mut String,\n    raw_input_text: &str,\n) {\n    *formatted_text = match effective_newline_style(newline_style, raw_input_text) {\n        EffectiveNewlineStyle::Windows => convert_to_windows_newlines(formatted_text),",
    "correctAnswer": "rust-lang/rustfmt"
  },
  {
    "filename": "UnionFindWeightedQuickUnion.swift",
    "code": "public struct UnionFindWeightedQuickUnion<T: Hashable> {\n  private var index = [T: Int]()\n  private var parent = [Int]()\n  private var size = [Int]()",
    "correctAnswer": "raywenderlich/swift-algorithm-club"
  },
  {
    "filename": "Context.hs",
    "code": "Module      : AWS.Lambda.Context\nDescription : AWS Lambda Context classes and related methods.\nCopyright   : (c) Nike, Inc., 2018\nLicense     : BSD3\nMaintainer  : nathan.fairhurst@nike.com, fernando.freire@nike.com\nStability   : stable\n-}",
    "correctAnswer": "Nike-Inc/hal"
  },
  {
    "filename": "ObjectWildcards.hs",
    "code": "module Language.redacted.Sugar.ObjectWildcards\n  ( desugarObjectConstructors\n  , desugarDecl\n  ) where",
    "correctAnswer": "purescript/purescript"
  },
  {
    "filename": "terminal.rs",
    "code": "pub fn to_ansi_color(color: highlighting::Color, true_color: bool) -> Option<ansi_term::Color> {\n    if color.a == 0 {\n        // Themes can specify one of the user-configurable terminal colors by\n        // encoding them as #RRGGBBAA with AA set to 00 (transparent) and RR set\n        // to the 8-bit color palette number. The built-in themes ansi, base16,\n        // and base16-256 use this.\n        Some(match color.r {",
    "correctAnswer": "sharkdp/bat"
  },
  {
    "filename": "Numeric.hs",
    "code": "Copyright:  (c) 2018-2020 redacted\nSPDX-License-Identifier: MIT\nMaintainer:  redacted <xrom.xkov@gmail.com>\nStability:   Stable\nPortability: Portable",
    "correctAnswer": "kowainik/relude"
  },
  {
    "filename": "runtime_init.rs",
    "code": "unsafe fn zero_bss() {\n    memory::zero_volatile(bsp::memory::relocated_bss_range_inclusive());\n}",
    "correctAnswer": "rust-embedded/rust-raspberrypi-OS-tutorials"
  },
  {
    "filename": "SizeExtensions.swift",
    "code": "extension CGSize: redactedCompatibleValue {}\nextension redactedWrapper where Base == CGSize {",
    "correctAnswer": "onevcat/kingfisher"
  },
  {
    "filename": "main.go",
    "code": "func main() {\n\tcommands := map[string]command{\n\t\t\"attack\": attackCmd(),\n\t\t\"report\": reportCmd(),\n\t\t\"plot\":   plotCmd(),\n\t\t\"encode\": encodeCmd(),\n\t\t\"dump\":   dumpCmd(),",
    "correctAnswer": "tsenart/vegeta"
  },
  {
    "filename": "UserListOverlay.hs",
    "code": "module redacted.Draw.UserListOverlay\n  ( drawUserListOverlay\n  )\nwhere",
    "correctAnswer": "matterhorn-chat/matterhorn"
  },
  {
    "filename": "header.go",
    "code": "type Headers []Header",
    "correctAnswer": "grafana/loki"
  },
  {
    "filename": "GuiCapabilities.hs",
    "code": "redacted\n  (C) 2018 David redacted\n  redacted.com\n-}\n\n{-# LANGUAGE\n    OverloadedStrings\n#-}",
    "correctAnswer": "lettier/gifcurry"
  },
  {
    "filename": "CanvasSizePrompt.hs",
    "code": "module Events.CanvasSizePrompt\n  ( handleCanvasSizePromptEvent\n  )\nwhere",
    "correctAnswer": "jtdaugherty/tart"
  },
  {
    "filename": "marked.js",
    "code": "function Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;",
    "correctAnswer": "ruanyf/es6tutorial"
  },
  {
    "filename": "GranularRoundedCorners.java",
    "code": "public final class GranularRoundedCorners extends BitmapTransformation {\n  private static final String ID = \"com.redacted.redacted.load.resource.bitmap.GranularRoundedCorners\";\n  private static final byte[] ID_BYTES = ID.getBytes(CHARSET);",
    "correctAnswer": "bumptech/glide"
  },
  {
    "filename": "Parser.hs",
    "code": "Module      : redacted.Parser\nDescription : Parsing utilities\nCopyright   : (c) Jon Purdy, 2016\nLicense     : MIT\nMaintainer  : redacted@gmail.com\nStability   : experimental\nPortability : GHC",
    "correctAnswer": "evincarofautumn/kitten"
  },
  {
    "filename": "Explicit.hs",
    "code": ", MultiParamTypeClasses\n  , FlexibleInstances\n  , FunctionalDependencies\n  , FlexibleContexts\n  , UndecidableInstances\n  , KindSignatures\n  , GADTs",
    "correctAnswer": "haskell-distributed/distributed-process"
  },
  {
    "filename": "AVMetadataObject.cs",
    "code": "namespace AVFoundation {",
    "correctAnswer": "xamarin/xamarin-macios"
  },
  {
    "filename": "Import.hs",
    "code": "module Import\n  ( module X\n  , module Control.Monad\n  ) where",
    "correctAnswer": "k-bx/owlcloud"
  },
  {
    "filename": "net.rs",
    "code": "pub(crate) fn init() {\n    static INIT: Once = Once::new();\n    INIT.call_once(|| {\n        // Let standard library call `WSAStartup` for us, we can't do it\n        // ourselves because otherwise using any type in `std::net` would panic\n        // when it tries to call `WSAStartup` a second time.\n        drop(std::net::UdpSocket::bind(\"127.0.0.1:0\"));",
    "correctAnswer": "tokio-rs/mio"
  },
  {
    "filename": "scorer.cpp",
    "code": "static const int32_t MAGIC = 'TRIE';\nstatic const int32_t FILE_VERSION = 6;",
    "correctAnswer": "mozilla/deepspeech"
  },
  {
    "filename": "Expect.hs",
    "code": "module Tests.Expect where",
    "correctAnswer": "hakaru-dev/hakaru"
  },
  {
    "filename": "IReactModuleBuilder.cpp",
    "code": "using namespace facebook::xplat::module;",
    "correctAnswer": "microsoft/react-native-windows"
  },
  {
    "filename": "DataFamily.hs",
    "code": "module Decl.DataFamily where",
    "correctAnswer": "haskell-tools/haskell-tools"
  },
  {
    "filename": "Hash.js",
    "code": "class Hash {\n\t/* istanbul ignore next */\n\t/**\n\t * Update hash {@link https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding}\n\t * @abstract\n\t * @param {string|Buffer} data data\n\t * @param {string=} inputEncoding data encoding",
    "correctAnswer": "webpack/webpack"
  },
  {
    "filename": "CodeBlockCaptions.hs",
    "code": "redacted is a pandoc filter for numbering figures,\nequations, tables and cross-references to them.\nCopyright (C) 2015  Nikolay Yakimov <root@livid.pp.ru>",
    "correctAnswer": "lierdakil/pandoc-crossref"
  },
  {
    "filename": "Bugzilla22229.xaml.cs",
    "code": "namespace redacted.Controls.Issues\n{\n#if APP\n#if UITEST\n\t[Category(Core.UITests.UITestCategories.Bugzilla)]\n#endif\n\t[Preserve(AllMembers = true)]",
    "correctAnswer": "xamarin/Xamarin.Forms"
  },
  {
    "filename": "connection-manager.js",
    "code": "const semver = require('semver');\nconst AbstractConnectionManager = require('../abstract/connection-manager');\nconst redactedErrors = require('../../errors');\nconst { logger } = require('../../utils/logger');\nconst DataTypes = require('../../data-types').mariadb;\nconst momentTz = require('moment-timezone');\nconst debug = logger.debugContext('connection:mariadb');",
    "correctAnswer": "sequelize/sequelize"
  },
  {
    "filename": "actions.js",
    "code": "function makeAction (type) {\n  return ({ dispatch }, ...args) => dispatch(type, ...args)\n}",
    "correctAnswer": "vuejs/vuex"
  },
  {
    "filename": "TextMap.cs",
    "code": "namespace Mono.redacted.PE {",
    "correctAnswer": "jbevain/cecil"
  },
  {
    "filename": "JavaToValueConverter.java",
    "code": "public class JavaToValueConverter {",
    "correctAnswer": "apache/flink"
  },
  {
    "filename": "IndexIVFPQR.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "facebookresearch/faiss"
  },
  {
    "filename": "UserServiceImpl.java",
    "code": "public class UserServiceImpl implements UserService {",
    "correctAnswer": "alibaba/canal"
  },
  {
    "filename": "ProxyRequest.hs",
    "code": "Module      : AWS.Lambda.Events.ApiGateway.ProxyRequest\nDescription : Data types that represent typical lambda responses\nCopyright   : (c) Nike, Inc., 2019\nLicense     : BSD3\nMaintainer  : nathan.fairhurst@nike.com, fernando.freire@nike.com\nStability   : stable",
    "correctAnswer": "Nike-Inc/hal"
  },
  {
    "filename": "CancelableCountDownLatch.java",
    "code": "public class CancelableCountDownLatch extends CountDownLatch {\n    /**\n     * Constructs a {@code CountDownLatch} initialized with the given count.\n     *\n     * @param count the number of times {@link #countDown} must be invoked\n     *              before threads can pass through {@link #await}\n     * @throws IllegalArgumentException if {@code count} is negative",
    "correctAnswer": "alibaba/arouter"
  },
  {
    "filename": "ExampleUIWebViewController.m",
    "code": "@interface ExampleUIWebViewController ()\n@property redacted* bridge;\n@end",
    "correctAnswer": "marcuswestin/webviewjavascriptbridge"
  },
  {
    "filename": "Setup.hs",
    "code": "main = defaultMain",
    "correctAnswer": "passy/givegif"
  },
  {
    "filename": "config.rs",
    "code": "pub enum TokenType {\n    MultiLine(String, Vec<Regex>),\n    SingleLine(String, Vec<Regex>),\n}",
    "correctAnswer": "curlpipe/ox"
  },
  {
    "filename": "week8.html",
    "code": "<!doctype html>\n<html>\n<head>\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\n<title>week8</title><link href='https://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext' rel='stylesheet' type='text/css' /><style type='text/css'>html {overflow-x: initial !important;}#write, body { height: auto; }\n#write, #write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write ol, #write p, #write ul { position: relative; }\n#write, #write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }",
    "correctAnswer": "fengdu78/coursera-ml-andrewng-notes"
  },
  {
    "filename": "App.java",
    "code": "public class App {\n  /**\n   * Program entry point.\n   *\n   * @param args no argument sent\n   */",
    "correctAnswer": "iluwatar/java-design-patterns"
  },
  {
    "filename": "PerLightVSM.hs",
    "code": "module PerLightVSM where",
    "correctAnswer": "lambdacube3d/lambdacube-edsl"
  },
  {
    "filename": "TTY.hs",
    "code": "Copyright 2012-2019 Vidar Holen",
    "correctAnswer": "koalaman/shellcheck"
  },
  {
    "filename": "dirname.rs",
    "code": "extern crate uucore;",
    "correctAnswer": "uutils/coreutils"
  },
  {
    "filename": "functions.rs",
    "code": "sql_function! {\n    /// Creates an abbreviated display format as text.\n    fn abbrev<T: InetOrCidr + SingleValue>(addr: T) -> Text;\n}\nsql_function! {\n    /// Computes the broadcast address for the address's network.\n    fn broadcast<T: InetOrCidr + SingleValue>(addr: T) -> Inet;",
    "correctAnswer": "diesel-rs/diesel"
  },
  {
    "filename": "groups.rs",
    "code": "extern crate uucore;\nuse uucore::entries::{get_groups, gid2grp, Locate, Passwd};",
    "correctAnswer": "uutils/coreutils"
  },
  {
    "filename": "2.5：寻找和为定值的多个数.c",
    "code": "using namespace std;",
    "correctAnswer": "julycoding/the-art-of-programming-by-july"
  },
  {
    "filename": "Set.hs",
    "code": "Module: redacted.PostgreSQL.Query.From.Set\nDescription: set returning functions\nCopyright: (c) Eitan Chatav, 2019\nMaintainer: eitan@morphism.tech\nStability: experimental",
    "correctAnswer": "morphismtech/squeal"
  },
  {
    "filename": "Split.hs",
    "code": "#ifdef __HADDOCK_VERSION__\n#undef INSPECTION\n#endif",
    "correctAnswer": "composewell/streamly"
  },
  {
    "filename": "Types.hs",
    "code": "module redacted.Node.Types where",
    "correctAnswer": "ConsenSys/constellation"
  },
  {
    "filename": "Exercises.hs",
    "code": "module Exercises where",
    "correctAnswer": "i-am-tom/haskell-exercises"
  },
  {
    "filename": "make_readme.c",
    "code": "int main(int argc, char  **argv)\n{\n   int i;\n   int hlen, flen, listlen, total_lines = 0;\n   char *header = redacted_file(\"README.header.md\", &hlen);      // redacted_file - read file into malloc()ed buffer\n   char *footer = redacted_file(\"README.footer.md\", &flen);      // redacted_file - read file into malloc()ed buffer\n   char **list  = redacted_stringfile(\"README.list\", &listlen);  // redacted_stringfile - read file lines into malloced array of strings",
    "correctAnswer": "nothings/stb"
  },
  {
    "filename": "20190529143559_preserve_old_layout_for_existing_users.rb",
    "code": "class PreserveOldLayoutForExistingUsers < ActiveRecord::Migration[5.2]\n  disable_ddl_transaction!",
    "correctAnswer": "tootsuite/mastodon"
  },
  {
    "filename": "avf_abitscope.c",
    "code": "typedef struct AudioBitScopeContext {\n    const AVClass *class;\n    int w, h;\n    AVRational frame_rate;\n    char *colors;",
    "correctAnswer": "ffmpeg/ffmpeg"
  },
  {
    "filename": "AbstractBindHandler.java",
    "code": "public abstract class AbstractBindHandler implements BindHandler {",
    "correctAnswer": "spring-projects/spring-boot"
  },
  {
    "filename": "rollup.conf.js",
    "code": "const base = {\n\tinput: './src/index.js',\n\tplugins: [json(), nodeResolve(), buble()]\n}",
    "correctAnswer": "jlmakes/scrollreveal"
  },
  {
    "filename": "list.php",
    "code": "<?\n//\n// PHP_KIT\n//\n// list.php = Directory & File Listing\n//\n// by: The Dark Raver",
    "correctAnswer": "danielmiessler/seclists"
  },
  {
    "filename": "flume.rs",
    "code": "mod message;",
    "correctAnswer": "crossbeam-rs/crossbeam"
  },
  {
    "filename": "chopin.hs",
    "code": "rh :: Music\nrh = [((1/2) <-> (3/4),e)^.event,((3/4) <-> (15/16),cs')^.event,((15/16) <-> 1,d')^.event,(1 <-> (5/4),d)^.event,(1 <->\n  (5/4),gs)^.event,(1 <-> (5/4),b)^.event,((5/4) <-> (3/2),d)^.event,((5/4) <-> (3/2),gs)^.event,((5/4) <->\n  (3/2),b)^.event,((3/2) <-> 2,d)^.event,((3/2) <-> 2,gs)^.event,((3/2) <-> 2,b)^.event,(2 <-> (9/4),d')^.event,(2 <->\n  (9/4),fs')^.event,((9/4) <-> (39/16),bs)^.event,((9/4) <-> (39/16),ds')^.event,((39/16) <-> (5/2),cs')^.event,((39/16) <->\n  (5/2),e')^.event,((5/2) <-> (11/4),cs')^.event,((5/2) <-> (11/4),a')^.event,((11/4) <-> 3,cs')^.event,((11/4) <->\n  3,a')^.event,(3 <-> (7/2),cs')^.event,(3 <-> (7/2),a')^.event,((7/2) <-> (15/4),e)^.event,((7/2) <->",
    "correctAnswer": "music-suite/music-suite"
  },
  {
    "filename": "css.php",
    "code": "<style type=\"text/css\">\n*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}\n:before,:after{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}\nhtml{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;font-size:10px;-webkit-tap-highlight-color:rgba(0,0,0,0)}\nbody{margin:0;font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;font-size:14px;line-height:1.42857143;color:#333;background-color:#fff}\nheader,main,footer{display:block}\na{background-color:transparent;color:#337ab7;text-decoration:none}",
    "correctAnswer": "yiisoft/yii2"
  },
  {
    "filename": "update-snapshots.js",
    "code": "const { readdirSync, copydirSync, copyFileSync, rimrafSync } = require('sander');\nconst { resolve, join } = require('path');",
    "correctAnswer": "rollup/rollup"
  },
  {
    "filename": "main.go",
    "code": "var helpText = func(colors logger.Colors) string {\n\treturn `\n` + colors.Bold + `Usage:` + colors.Default + `\n  redacted [options] [entry points]",
    "correctAnswer": "evanw/esbuild"
  },
  {
    "filename": "HelloWorldNoTH.hs",
    "code": "module HelloWorldNoTH (main) where",
    "correctAnswer": "acid-state/acid-state"
  },
  {
    "filename": "PrometheusMetricsTracker.java",
    "code": "class PrometheusMetricsTracker implements IMetricsTracker\n{\n   private final static Counter CONNECTION_TIMEOUT_COUNTER = Counter.build()\n      .name(\"redacted_connection_timeout_total\")\n      .labelNames(\"pool\")\n      .help(\"Connection timeout total count\")\n      .create();",
    "correctAnswer": "brettwooldridge/hikaricp"
  },
  {
    "filename": "custom.rs",
    "code": "pub struct Files<'a>(pub Vec<&'a str>);",
    "correctAnswer": "starship/starship"
  },
  {
    "filename": "redactedMethodModifiersTest.java",
    "code": "public class redactedMethodModifiersTest extends AbstractAndroidredactedTest {",
    "correctAnswer": "greenrobot/eventbus"
  },
  {
    "filename": "workbox-precaching_src_lib_models_revision-details-model.js.html",
    "code": "<!DOCTYPE html>\n<html devsite>",
    "correctAnswer": "google/webfundamentals"
  },
  {
    "filename": "ae_epoll.c",
    "code": "typedef struct aeApiState {\n    int epfd;\n    struct epoll_event *events;\n} aeApiState;",
    "correctAnswer": "wg/wrk"
  },
  {
    "filename": "Settings.hs",
    "code": "module redacted.Private.Settings where",
    "correctAnswer": "nikita-volkov/hasql"
  },
  {
    "filename": "InfoSettingsView.swift",
    "code": "class InfoSettingsView: NSView {\n    @IBOutlet weak var fadeInOutTextModePopup: NSPopUpButton!",
    "correctAnswer": "johncoates/aerial"
  },
  {
    "filename": "timer.plugin.zsh",
    "code": "zmodload zsh/datetime",
    "correctAnswer": "ohmyzsh/ohmyzsh"
  },
  {
    "filename": "Date.hs",
    "code": "Portions of this file are copyright (c) 2009,  IIJ Innovation Institute Inc.\n   The utcTimeToRfc1123 function was extracted from http-date, with slight\n   modifications to operate on UTCTime values.\n-}",
    "correctAnswer": "helium/airship"
  },
  {
    "filename": "SimpleCursorSwipeAdapter.java",
    "code": "public abstract class SimpleCursorSwipeAdapter extends SimpleCursorAdapter implements SwipeItemMangerInterface, SwipeAdapterInterface {",
    "correctAnswer": "daimajia/androidswipelayout"
  },
  {
    "filename": "TopicClusterSubCommand.java",
    "code": "public class TopicClusterSubCommand implements SubCommand {",
    "correctAnswer": "apache/rocketmq"
  },
  {
    "filename": "ethernet.rs",
    "code": "const DST_MAC_OFFSET: usize = 0;\nconst SRC_MAC_OFFSET: usize = 6;\nconst ETHERTYPE_OFFSET: usize = 12;",
    "correctAnswer": "firecracker-microvm/firecracker"
  },
  {
    "filename": "function.rs",
    "code": "pub struct Function {\n    pub name: TypeName,\n    pub signature: Signature,\n}",
    "correctAnswer": "microsoft/windows-rs"
  },
  {
    "filename": "hosts.go",
    "code": "func (c *Config) GetKDCs(realm string, tcp bool) (int, map[int]string, error) {\n\tif realm == \"\" {\n\t\trealm = c.LibDefaults.DefaultRealm\n\t}\n\tkdcs := make(map[int]string)\n\tvar count int",
    "correctAnswer": "buger/goreplay"
  },
  {
    "filename": "detectLimit.js",
    "code": "function detectLimit(coll, limit, iteratee, callback) {\n    return createTester(bool => bool, (res, item) => item)(eachOfLimit(limit), coll, iteratee, callback)\n}\nexport default awaitify(detectLimit, 4)",
    "correctAnswer": "caolan/async"
  },
  {
    "filename": "CommandResolver.cs",
    "code": "namespace Microsoft.redacted.CommandFactory\n{\n    internal class CommandResolver\n    {\n        public static CommandSpec TryResolveCommandSpec(\n            string commandName,\n            IEnumerable<string> args,",
    "correctAnswer": "dotnet/sdk"
  },
  {
    "filename": "restorer.rs",
    "code": "pub fn restore_on_err(\n    rule: OptimizedRule,\n    rules: &HashMap<String, OptimizedExpr>,\n) -> OptimizedRule {\n    let OptimizedRule { name, ty, expr } = rule;\n    let expr = expr.map_bottom_up(|expr| wrap_branching_exprs(expr, rules));\n    OptimizedRule { name, ty, expr }",
    "correctAnswer": "pest-parser/pest"
  },
  {
    "filename": "SimpleTwoDataSourcesExample.java",
    "code": "public class SimpleTwoDataSourcesExample {",
    "correctAnswer": "spring-projects/spring-boot"
  },
  {
    "filename": "vkontakte.js",
    "code": "const httpsRequest = require('./httpsRequest');\nvar Parse = require('parse/node').Parse;",
    "correctAnswer": "parse-community/parse-server"
  },
  {
    "filename": "User32+MapVirtualKeyTranslation.cs",
    "code": "namespace redacted\n{\n    /// <content>\n    /// Contains the <see cref=\"MapVirtualKeyTranslation\"/> nested type.\n    /// </content>\n    public partial class User32\n    {",
    "correctAnswer": "dotnet/pinvoke"
  },
  {
    "filename": "runSuite.js",
    "code": "function runSuite (local, npm, dedupe, npmDedupe, fixture, log) {\n\tvar suite = new benchmark.Suite();",
    "correctAnswer": "jedwatson/classnames"
  },
  {
    "filename": "jstring_cache.cpp",
    "code": "void JStringCache::clearRefCache(JNIEnv *env) {\n    for (auto iter = cacheList.begin(); iter != cacheList.end(); iter++) {\n        std::pair<std::string, jobject> pair = *iter;\n        if (nullptr != pair.second) {\n            env->DeleteWeakGlobalRef(pair.second);\n            pair.second = nullptr;\n        }",
    "correctAnswer": "apache/incubator-weex"
  },
  {
    "filename": "MappingJackson2XmlHttpMessageConverter.java",
    "code": "public class MappingJackson2XmlHttpMessageConverter extends AbstractJackson2HttpMessageConverter {",
    "correctAnswer": "spring-projects/spring-framework"
  },
  {
    "filename": "undo.rs",
    "code": "pub enum BankType {\n    Line,   // For holding lines from the document\n    Cursor, // For holding cursor positions\n}",
    "correctAnswer": "curlpipe/ox"
  },
  {
    "filename": "redactedAuth.hs",
    "code": "Copyright 2020 The redacted Authors. All rights reserved.",
    "correctAnswer": "google/codeworld"
  },
  {
    "filename": "PropertyListEncoding.swift",
    "code": "internal struct PropertyListEncoding: ParameterEncoding {",
    "correctAnswer": "moya/moya"
  },
  {
    "filename": "ast.rs",
    "code": "pub struct Container<'a> {\n    /// The struct or enum name (without generics).\n    pub ident: syn::Ident,\n    /// Attributes on the structure, parsed for redacted.\n    pub attrs: attr::Container,\n    /// The contents of the struct or enum.\n    pub data: Data<'a>,",
    "correctAnswer": "serde-rs/serde"
  },
  {
    "filename": "cred.rs",
    "code": "components::{\n        visibility_blocking, CommandBlocking, CommandInfo, Component,\n        DrawableComponent,\n    },\n    keys::SharedKeyConfig,\n    strings,\n    ui::style::SharedTheme,",
    "correctAnswer": "extrawurst/gitui"
  },
  {
    "filename": "UIImage+Snapshot.m",
    "code": "@implementation UIImage (Snapshot)",
    "correctAnswer": "dzenbot/dznemptydataset"
  },
  {
    "filename": "date.rs",
    "code": "pub(crate) const DATE_VALUE_LENGTH: usize = 29;",
    "correctAnswer": "hyperium/hyper"
  },
  {
    "filename": "LazyEvaluation.hs",
    "code": "module LazyEvaluation where",
    "correctAnswer": "thma/WhyHaskellMatters"
  },
  {
    "filename": "Query.hs",
    "code": "module redacted.Physics.Query where",
    "correctAnswer": "jonascarpay/apecs"
  },
  {
    "filename": "stepper.js",
    "code": "let reusedTuple: [number, number] = [0, 0];\nexport default function stepper(\n  secondPerFrame: number,\n  x: number,\n  v: number,\n  destX: number,\n  k: number,",
    "correctAnswer": "chenglou/react-motion"
  },
  {
    "filename": "draw.rs",
    "code": "pub type DrawFunction =\n    dyn FnMut(&mut dyn Write, &str, &str, &Width, Style, ansi_term::Style) -> std::io::Result<()>;",
    "correctAnswer": "dandavison/delta"
  },
  {
    "filename": "Test.hs",
    "code": "module Main where",
    "correctAnswer": "ennocramer/floskell"
  },
  {
    "filename": "redacted.js",
    "code": "const fs = require(\"fs\");\nconst obj = require(\"through2\").obj;\nconst pager = require(\"default-pager\");\nconst msee = require(\"msee\");\nconst join = require(\"path\").join;\nconst boxen = require(\"boxen\");\nconst chalk = require(\"chalk\");",
    "correctAnswer": "denysdovhan/wtfjs"
  },
  {
    "filename": "Either.hs",
    "code": "module redacted.Either (\n  maybeToLeft\n, maybeToRight\n, leftToMaybe\n, rightToMaybe\n, maybeEmpty\n, maybeToEither",
    "correctAnswer": "protolude/protolude"
  },
  {
    "filename": "Extended.hs",
    "code": "module Control.Monad.Reader.Extended\n    ( module X\n    , Has(..)\n    , ask\n    , asks\n    ) where",
    "correctAnswer": "k0ral/hbro"
  },
  {
    "filename": "redacted.js",
    "code": "function redacted(element, options, callback) {\n  setupEnv();",
    "correctAnswer": "maxwellito/vivus"
  },
  {
    "filename": "inject-babel-helpers.js",
    "code": "const { addNamed } = require('@babel/helper-module-imports');",
    "correctAnswer": "emberjs/ember.js"
  },
  {
    "filename": "search.js",
    "code": "const BbPromise = require('bluebird');\nconst chalk = require('chalk');\nconst pluginUtils = require('./lib/utils');",
    "correctAnswer": "serverless/serverless"
  },
  {
    "filename": "redacted.zsh",
    "code": "if [[ ! -o interactive ]]; then\n    return\nfi",
    "correctAnswer": "pyenv/pyenv"
  },
  {
    "filename": "stream.c",
    "code": "const char *supported_stream_ciphers[STREAM_CIPHER_NUM] = {\n    \"table\",\n    \"rc4\",\n    \"rc4-md5\",\n    \"aes-128-cfb\",\n    \"aes-192-cfb\",\n    \"aes-256-cfb\",",
    "correctAnswer": "shadowsocks/shadowsocks-libev"
  },
  {
    "filename": "middleware.js",
    "code": "function SessionMiddleware({sessionService}) {\n    async function createSession(req, res, next) {\n        try {\n            await sessionService.createSessionForUser(req, res, req.user);\n            res.sendStatus(201);\n        } catch (err) {\n            next(err);",
    "correctAnswer": "tryghost/ghost"
  },
  {
    "filename": "nested.js",
    "code": "const express = require('express')\nconst pluralize = require('pluralize')\nconst delay = require('./delay')",
    "correctAnswer": "typicode/json-server"
  },
  {
    "filename": "EchoCon.cpp",
    "code": "HRESULT CreatePseudoConsoleAndPipes(HPCON*, HANDLE*, HANDLE*);\nHRESULT InitializeStartupInfoAttachedToPseudoConsole(STARTUPINFOEX*, HPCON);\nvoid __cdecl PipeListener(LPVOID);",
    "correctAnswer": "microsoft/terminal"
  },
  {
    "filename": "Cabal.hs",
    "code": "module Language.Haskell.Stylish.Config.Cabal\n    ( findLanguageExtensions\n    ) where",
    "correctAnswer": "jaspervdj/stylish-haskell"
  },
  {
    "filename": "server_message.rs",
    "code": "pub struct ConnectionErrorPayload {\n    /// The error message.\n    pub message: String,\n}",
    "correctAnswer": "graphql-rust/juniper"
  },
  {
    "filename": "cubrid_forge.php",
    "code": "defined('BASEPATH') OR exit('No direct script access allowed');",
    "correctAnswer": "bcit-ci/codeigniter"
  },
  {
    "filename": "NSLoggingEventMonitor.swift",
    "code": "public final class NSLoggingEventMonitor: EventMonitor {\n    public let queue = DispatchQueue(label: \"org.redacted.nsLoggingEventMonitorQueue\", qos: .utility)",
    "correctAnswer": "alamofire/alamofire"
  },
  {
    "filename": "ViewportScrollDemo.hs",
    "code": "module Main where",
    "correctAnswer": "jtdaugherty/brick"
  },
  {
    "filename": "State.hs",
    "code": "module Distribution.Server.Features.Upload.State where",
    "correctAnswer": "haskell/hackage-server"
  },
  {
    "filename": "step_get_password.go",
    "code": "type StepGetPassword struct {\n\tDebug     bool\n\tComm      *communicator.Config\n\tBuildName string\n}",
    "correctAnswer": "hashicorp/packer"
  },
  {
    "filename": "OkPacket.js",
    "code": "function OkPacket(options) {\n  options = options || {};",
    "correctAnswer": "mysqljs/mysql"
  },
  {
    "filename": "compile.rs",
    "code": "pub struct PyFutureFeatures {\n    pub ff_features: c_int,\n    pub ff_lineno: c_int,\n}",
    "correctAnswer": "PyO3/pyo3"
  },
  {
    "filename": "clean.js",
    "code": "const Promise = require('bluebird');\nconst fs = require('redacted-fs');",
    "correctAnswer": "hexojs/hexo"
  },
  {
    "filename": "concat.js",
    "code": "function license() {\n  var currentYear = \"\" + new Date(Date.now()).getFullYear();",
    "correctAnswer": "jasmine/jasmine"
  },
  {
    "filename": "DiscordOptions.php",
    "code": "final class DiscordOptions implements MessageOptionsInterface\n{\n    private $options = [];",
    "correctAnswer": "symfony/symfony"
  },
  {
    "filename": "Blackhole.hs",
    "code": "module redacted.Builtins.Blackhole\n  ( blackholeCBits,\n  )\nwhere",
    "correctAnswer": "tweag/asterius"
  },
  {
    "filename": "Application+Views.swift",
    "code": "extension Application {\n    public var views: Views {\n        .init(application: self)\n    }",
    "correctAnswer": "vapor/vapor"
  },
  {
    "filename": "pattern-to-regex.js",
    "code": "const sep = `\\\\${path.sep}`;\nconst endSep = `(?:${sep}|$)`;",
    "correctAnswer": "6to5/babel"
  },
  {
    "filename": "recommend.js",
    "code": "const cheerio = require('cheerio');\nconst got = require('@/utils/got');",
    "correctAnswer": "diygod/rsshub"
  },
  {
    "filename": "Gettext.hs",
    "code": "module Hails.I18N.Gettext where",
    "correctAnswer": "keera-studios/keera-hails"
  },
  {
    "filename": "PercentagePanel.java",
    "code": "class PercentagePanel extends EditorPanel {\n\tfinal ScaledNumericValue value;\n\tJButton expandButton;\n\tChart chart;",
    "correctAnswer": "libgdx/libgdx"
  },
  {
    "filename": "workbox-range-requests_src_index.js.html",
    "code": "<!DOCTYPE html>\n<html devsite>",
    "correctAnswer": "google/webfundamentals"
  },
  {
    "filename": "index.js",
    "code": "function defaultEqualityCheck(a, b) {\n  return a === b\n}",
    "correctAnswer": "reduxjs/reselect"
  },
  {
    "filename": "Main.hs",
    "code": "module Main (main) where",
    "correctAnswer": "mihaimaruseac/hindent"
  },
  {
    "filename": "ExternalPackageFunction.java",
    "code": "public class ExternalPackageFunction implements SkyFunction {",
    "correctAnswer": "bazelbuild/bazel"
  },
  {
    "filename": "main.go",
    "code": "func main() {\n\tapp := newApp()\n\tapp.Logger().SetLevel(\"debug\")\n\tapp.Listen(\":8080\")\n}",
    "correctAnswer": "kataras/iris"
  },
  {
    "filename": "classify.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "tesseract-ocr/tesseract"
  },
  {
    "filename": "Bifunctor.hs",
    "code": "module redacted.Bifunctor\n  ( Bifunctor,\n    bimap,\n    first,\n    second,\n  )\nwhere",
    "correctAnswer": "protolude/protolude"
  },
  {
    "filename": "progress.js",
    "code": "function Progress(runner, options) {\n  Base.call(this, runner, options);",
    "correctAnswer": "mochajs/mocha"
  },
  {
    "filename": "line-random-colors.js",
    "code": "function randomColor() {\n  return [Math.random() * 255,Math.random()*255, Math.random()*255]\n}",
    "correctAnswer": "yaronn/blessed-contrib"
  },
  {
    "filename": "Show.hs",
    "code": "#if __GLASGOW_redacted__ >= 702\n{-# LANGUAGE Trustworthy #-}\n#endif",
    "correctAnswer": "haskell/text"
  },
  {
    "filename": "Encryption.hs",
    "code": "module Hercules.Encryption\n  ( encrypt\n  , decrypt\n  ) where",
    "correctAnswer": "hercules-ci/legacy-old-hercules"
  },
  {
    "filename": "Parameter.hs",
    "code": "module UI.Parameter (drawUI, theMap, handleEvent) where",
    "correctAnswer": "Yvee1/hascard"
  },
  {
    "filename": "TestActionItem.cs",
    "code": "namespace redacted.Framework.Internal.Commands\n{\n    /// <summary>\n    /// TestActionItem wraps a single execution of an ITestAction.\n    /// Its primary purpose is to track whether the BeforeTest\n    /// method has been called and suppress calling the\n    /// AfterTest method if it has not. This is necessary when",
    "correctAnswer": "nunit/nunit"
  },
  {
    "filename": "UIResponderAppKitIntegration.m",
    "code": "@implementation UIResponder (AppKitIntegration)",
    "correctAnswer": "nicklockwood/icarousel"
  },
  {
    "filename": "SimpleAudioEngine.cpp",
    "code": "using namespace CocosDenshion;\nusing namespace redacted;",
    "correctAnswer": "cocos2d/cocos2d-x"
  },
  {
    "filename": "zfile.c",
    "code": "typedef _off64_t off64_t;\n#endif",
    "correctAnswer": "ggreer/the_silver_searcher"
  },
  {
    "filename": "DataUriPlugin.js",
    "code": "const NormalModule = require(\"../NormalModule\");\nconst { getMimetype, decodeDataURI } = require(\"../util/DataURI\");",
    "correctAnswer": "webpack/webpack"
  },
  {
    "filename": "endpoint.go",
    "code": "type Conn struct {\n\tgenericOpt\n}",
    "correctAnswer": "grafana/loki"
  },
  {
    "filename": "Cabal.hs",
    "code": "module Cabal where",
    "correctAnswer": "haskell/haskell-ide-engine"
  },
  {
    "filename": "finish-event.js",
    "code": "const redacted = require('../');",
    "correctAnswer": "winstonjs/winston"
  },
  {
    "filename": "graphviz.go",
    "code": "type graphviz struct {\n\tps []*gvnode\n\tb  bytes.Buffer\n\th  map[string]uint32\n\t// clusters is a map of project name and subgraph object. This can be used\n\t// to refer the subgraph by project name.\n\tclusters map[string]*gvsubgraph",
    "correctAnswer": "golang/dep"
  },
  {
    "filename": "RequestContentTypes.hs",
    "code": "module Distribution.Server.Framework.RequestContentTypes (",
    "correctAnswer": "haskell/hackage-server"
  },
  {
    "filename": "Resources.swift",
    "code": "#if TRACE_RESOURCES\n    struct Resources {\n        static func incrementTotal() -> Int32 {\n            return redacted.Resources.incrementTotal()\n        }",
    "correctAnswer": "reactivex/rxswift"
  },
  {
    "filename": "adapter.js",
    "code": "const EventEmitter = require('events').EventEmitter",
    "correctAnswer": "hubotio/hubot"
  },
  {
    "filename": "FallbackModuleFactory.js",
    "code": "const ModuleFactory = require(\"../ModuleFactory\");\nconst FallbackModule = require(\"./FallbackModule\");",
    "correctAnswer": "webpack/webpack"
  },
  {
    "filename": "Log.hs",
    "code": "Module      :  Neovim.Log\nDescription :  Logging utilities and reexports\nCopyright   :  (c) Sebastian Witte\nLicense     :  Apache-2.0",
    "correctAnswer": "neovimhaskell/nvim-hs"
  },
  {
    "filename": "handler.go",
    "code": "var ScriptNotFoundError = errors.New(\"script not found\")",
    "correctAnswer": "joewalnes/websocketd"
  },
  {
    "filename": "SendGridHandler.php",
    "code": "class SendGridHandler extends MailHandler\n{\n    /**\n     * The SendGrid API User\n     * @var string\n     */\n    protected $apiUser;",
    "correctAnswer": "seldaek/monolog"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where",
    "correctAnswer": "cdepillabout/pretty-simple"
  },
  {
    "filename": "index-START.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>JS Drum Kit</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>",
    "correctAnswer": "wesbos/javascript30"
  },
  {
    "filename": "ApiPathPredicateItem.java",
    "code": "public class ApiPathPredicateItem implements ApiPredicateItem {",
    "correctAnswer": "alibaba/sentinel"
  },
  {
    "filename": "SampleLoadReporter.java",
    "code": "public class SampleLoadReporter extends DefaultLoadReporter {\n    private final static String TAG = \"redacted.SampleLoadReporter\";",
    "correctAnswer": "tencent/tinker"
  },
  {
    "filename": "vertical.rs",
    "code": "comment::combine_strs_with_missing_comments,\n    expr::rewrite_field,\n    items::{rewrite_struct_field, rewrite_struct_field_prefix},\n    lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListItem, Separator},\n    rewrite::{Rewrite, RewriteContext},\n    shape::{Indent, Shape},\n    source_map::SpanUtils,",
    "correctAnswer": "rust-lang/rustfmt"
  },
  {
    "filename": "redacted.rb",
    "code": "module Bootstrap\n  class << self\n    # Inspired by Kaminari\n    def load!\n      register_compass_extension if compass?",
    "correctAnswer": "twbs/bootstrap-sass"
  },
  {
    "filename": "Consumer.hs",
    "code": "Description : Kafka consumers as streams of Mu terms",
    "correctAnswer": "higherkindness/mu-haskell"
  },
  {
    "filename": "Preprocessor.hs",
    "code": "module HaskellCodeExplorer.Preprocessor\n  ( createSourceCodeTransformation\n  ) where",
    "correctAnswer": "alexwl/haskell-code-explorer"
  },
  {
    "filename": "RawRepresentableTests.swift",
    "code": "class RawRepresentableTests: XCTestCase {",
    "correctAnswer": "swiftyjson/swiftyjson"
  },
  {
    "filename": "PrelInfo.hs",
    "code": "(c) The GRASP/AQUA Project, Glasgow University, 1992-1998",
    "correctAnswer": "typelead/eta"
  },
  {
    "filename": "QuickMultipleEntity.java",
    "code": "public class QuickMultipleEntity implements MultiItemEntity {\n    public static final int TEXT = 1;\n    public static final int IMG = 2;\n    public static final int IMG_TEXT = 3;\n    public static final int TEXT_SPAN_SIZE = 3;\n    public static final int IMG_SPAN_SIZE = 1;\n    public static final int IMG_TEXT_SPAN_SIZE = 4;",
    "correctAnswer": "cymchad/baserecyclerviewadapterhelper"
  },
  {
    "filename": "Baton.cpp",
    "code": "namespace redacted {\nnamespace fibers {",
    "correctAnswer": "facebook/folly"
  },
  {
    "filename": "2.7：奇偶排序.c",
    "code": "using namespace std;",
    "correctAnswer": "julycoding/the-art-of-programming-by-july"
  },
  {
    "filename": "Resolver.swift",
    "code": "public final class Resolver<T> {\n    let box: Box<Result<T>>",
    "correctAnswer": "mxcl/promisekit"
  },
  {
    "filename": "DemoLayer.hs",
    "code": "module AI.DemoLayer\n( LayerDefinition(..)\n, Layer(..)",
    "correctAnswer": "jbarrow/LambdaNet"
  },
  {
    "filename": "AbstractRequestHandlerProvider.cs",
    "code": "namespace Microsoft.CodeAnalysis.LanguageServer\n{\n    internal abstract class AbstractRequestHandlerProvider\n    {\n        private readonly ImmutableDictionary<string, Lazy<IRequestHandler, IRequestHandlerMetadata>> _requestHandlers;",
    "correctAnswer": "dotnet/roslyn"
  },
  {
    "filename": "server.rs",
    "code": "config::{ClientConfig, Mode},\n    local::{context::ServiceContext, loadbalancing::PingBalancer},\n};",
    "correctAnswer": "shadowsocks/shadowsocks-rust"
  },
  {
    "filename": "redacted46-api-changes.html",
    "code": "<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n</head>\n<body>\n<pre><span style=\"color:red\">C:\\Program Files (x86)\\Reference Assemblies\\redacted\\Framework\\.NETFramework\\v4.5.2</span>\n<span style=\"color:green\">C:\\Program Files (x86)\\Reference Assemblies\\redacted\\Framework\\.NETFramework\\v4.6</span>",
    "correctAnswer": "microsoft/dotnet"
  },
  {
    "filename": "app.rs",
    "code": "const TASKS: [&str; 24] = [\n    \"Item1\", \"Item2\", \"Item3\", \"Item4\", \"Item5\", \"Item6\", \"Item7\", \"Item8\", \"Item9\", \"Item10\",\n    \"Item11\", \"Item12\", \"Item13\", \"Item14\", \"Item15\", \"Item16\", \"Item17\", \"Item18\", \"Item19\",\n    \"Item20\", \"Item21\", \"Item22\", \"Item23\", \"Item24\",\n];",
    "correctAnswer": "fdehau/tui-rs"
  },
  {
    "filename": "Array.hs",
    "code": "module redacted.Private.Encoders.Array where",
    "correctAnswer": "nikita-volkov/hasql"
  },
  {
    "filename": "Lib.hs",
    "code": "module Lib where",
    "correctAnswer": "aviaviavi/legion"
  },
  {
    "filename": "clog.go",
    "code": "type Logger interface {\n\tInfof(format string, args ...interface{})\n\tWarningf(format string, args ...interface{})\n\tErrorf(format string, args ...interface{})\n\tFatalf(format string, args ...interface{})\n\tV(int) bool\n\tSetV(level int)",
    "correctAnswer": "cayleygraph/cayley"
  },
  {
    "filename": "operation.rs",
    "code": "pub struct StoreOperationDispatch;",
    "correctAnswer": "valeriansaliou/sonic"
  },
  {
    "filename": "History.hs",
    "code": "module Test.StateMachine.Types.History\n  ( History(..)\n  , History'\n  , Pid(..)\n  , HistoryEvent(..)\n  , Operation(..)\n  , makeOperations",
    "correctAnswer": "advancedtelematic/quickcheck-state-machine"
  },
  {
    "filename": "Pure.hs",
    "code": "Copyright:  (c) 2018-2020 redacted\nSPDX-License-Identifier: MPL-2.0\nMaintainer: redacted <xrom.xkov@gmail.com>",
    "correctAnswer": "kowainik/co-log"
  },
  {
    "filename": "List.hs",
    "code": "module redacted.List\n  ( head,\n    ordNub,\n    sortOn,\n    list,\n    product,\n    sum,",
    "correctAnswer": "protolude/protolude"
  },
  {
    "filename": "Title.hs",
    "code": "module DinoRush.Engine.Title where",
    "correctAnswer": "jxv/dino-rush"
  },
  {
    "filename": "config.js",
    "code": "const fs = require('fs-extra');\nconst path = require('path');\nconst yaml = require('js-yaml');",
    "correctAnswer": "netlify/netlify-cms"
  },
  {
    "filename": "TimeZone.php",
    "code": "class redacted_Shared_TimeZone\n{\n    /*\n     * Default Timezone used for date/time conversions\n     *\n     * @private\n     * @var    string",
    "correctAnswer": "phpoffice/phpexcel"
  },
  {
    "filename": "DoubleBooleanConverter.java",
    "code": "public class DoubleBooleanConverter implements Converter<Double> {\n    private static final Double ONE = 1.0;\n    private static final Double ZERO = 0.0;",
    "correctAnswer": "alibaba/easyexcel"
  },
  {
    "filename": "AtomicNotification.cpp",
    "code": "namespace folly {\nnamespace detail {\nnamespace atomic_notification {",
    "correctAnswer": "facebook/rocksdb"
  },
  {
    "filename": "Text.hs",
    "code": "module redacted.Prelude.Text where",
    "correctAnswer": "nstack/nstack"
  },
  {
    "filename": "Internal.hs",
    "code": "module Options.Applicative.Builder.Internal (\n  -- * Internals\n  Mod(..),\n  HasName(..),\n  HasCompleter(..),\n  HasValue(..),\n  HasMetavar(..),",
    "correctAnswer": "pcapriotti/optparse-applicative"
  },
  {
    "filename": "color.js",
    "code": "function ColorUtilFactory() {\n  /**\n   * Converts hex value to RGBA string\n   * @param color {string}\n   * @returns {string}\n   */\n  function hexToRgba (color) {",
    "correctAnswer": "angular/material"
  },
  {
    "filename": "BindDrawable.java",
    "code": "public @interface BindDrawable {\n  /** Drawable resource ID to which the field will be bound. */\n  @DrawableRes int value();",
    "correctAnswer": "jakewharton/butterknife"
  },
  {
    "filename": "ClickhouseOutputVisitor.java",
    "code": "public class ClickhouseOutputVisitor extends SQLASTOutputVisitor implements ClickhouseVisitor {\n    public ClickhouseOutputVisitor(Appendable appender) {\n        super(appender);\n    }",
    "correctAnswer": "alibaba/druid"
  },
  {
    "filename": "SqlMapSessionWrapper.java",
    "code": "public class SqlMapSessionWrapper extends SqlMapExecutorWrapper implements SqlMapSession {\n\tprivate SqlMapSession session;",
    "correctAnswer": "alibaba/druid"
  },
  {
    "filename": "ImageDetailFragment.java",
    "code": "public class ImageDetailFragment extends BaseFragment {\n    private static final String TAG = \"ImageDetailFragment\";\n    private ImageView mImageView;\n    private File mFile;",
    "correctAnswer": "didi/doraemonkit"
  },
  {
    "filename": "norm.js",
    "code": "const SPACE = /[^ ]+/g",
    "correctAnswer": "krisk/fuse"
  },
  {
    "filename": "code.rs",
    "code": "pub fn id_to_fieldnorm(id: u8) -> u32 {\n    FIELD_NORMS_TABLE[id as usize]\n}",
    "correctAnswer": "tantivy-search/tantivy"
  },
  {
    "filename": "server.js",
    "code": "const arrayRemove = require('unordered-array-remove')\nconst escapeHtml = require('escape-html')\nconst http = require('http')\nconst mime = require('mime')\nconst pump = require('pump')\nconst rangeParser = require('range-parser')\nconst queueMicrotask = require('queue-microtask')",
    "correctAnswer": "webtorrent/webtorrent"
  },
  {
    "filename": "FixedSequenceGroup.java",
    "code": "public final class FixedSequenceGroup extends Sequence\n{\n    private final Sequence[] sequences;",
    "correctAnswer": "lmax-exchange/disruptor"
  },
  {
    "filename": "cu.ts",
    "code": "const u = undefined;",
    "correctAnswer": "angular/angular"
  },
  {
    "filename": "websocket_endpoint.go",
    "code": "type WebSocketEndpoint struct {\n\tws     *websocket.Conn\n\toutput chan []byte\n\tlog    *LogScope\n\tmtype  int\n}",
    "correctAnswer": "joewalnes/websocketd"
  },
  {
    "filename": "Callback.php",
    "code": "final class Callback extends Constraint\n{\n    /**\n     * @var callable\n     */\n    private $callback;",
    "correctAnswer": "sebastianbergmann/phpunit"
  },
  {
    "filename": "modules2.rs",
    "code": "mod delicious_snacks {\n    use self::fruits::PEAR as fruit;\n    use self::veggies::CUCUMBER as veggie;",
    "correctAnswer": "rust-lang/rustlings"
  },
  {
    "filename": "Distributive.hs",
    "code": "module Hedgehog.Internal.Distributive (\n    MonadTransDistributive(..)\n  ) where",
    "correctAnswer": "hedgehogqa/haskell-hedgehog"
  },
  {
    "filename": "JumpManager.java",
    "code": "public class JumpManager {",
    "correctAnswer": "skylot/jadx"
  },
  {
    "filename": "render-static.js",
    "code": "function markStatic (\n  tree: VNode | Array<VNode>,\n  key: string,\n  isOnce: boolean\n) {\n  if (Array.isArray(tree)) {\n    for (let i = 0; i < tree.length; i++) {",
    "correctAnswer": "meituan-dianping/mpvue"
  },
  {
    "filename": "jsguide.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>redacted JavaScript Style Guide</title>\n<link rel=\"stylesheet\" href=\"javaguide.css\">\n<script src=\"include/redacted.js\"></script>",
    "correctAnswer": "google/styleguide"
  },
  {
    "filename": "lesson1-week4.html",
    "code": "<!doctype html>\n<html>\n<head>\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\n<title>lesson1-week4.md</title><link href='https://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext' rel='stylesheet' type='text/css' /><style type='text/css'>html {overflow-x: initial !important;}#write, body { height: auto; }\n#write, #write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write ol, #write p, #write ul { position: relative; }\n#write, #write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }",
    "correctAnswer": "fengdu78/deeplearning_ai_books"
  },
  {
    "filename": "example.js",
    "code": "function clickHandler (e) {\n  var target = e.target;\n  if (target === sortable) {\n    return;\n  }\n  target.innerHTML += ' [click!]';",
    "correctAnswer": "bevacqua/dragula"
  },
  {
    "filename": "tutorial.hs",
    "code": "redacted drawings, but also to get you thinking about visual programming languages.\nWhy is redacted designed the way it is? What are other ways it could work?\nHow could it be extended? I feel that we are just at the very beginning of\nvisual programming languages, and that there is a huge universe of visual\nprogramming language designs waiting to be discovered.",
    "correctAnswer": "rgleichman/glance"
  },
  {
    "filename": "bloom.c",
    "code": "define_commit_slab(bloom_filter_slab, struct bloom_filter);",
    "correctAnswer": "git/git"
  },
  {
    "filename": "support.js",
    "code": "const defaultCodecs = {\n  'audio/ogg': 'vorbis',\n  'audio/wav': '1',\n  'video/webm': 'vp8, vorbis',\n  'video/mp4': 'avc1.42E01E, mp4a.40.2',\n  'video/ogg': 'theora',\n};",
    "correctAnswer": "sampotts/plyr"
  },
  {
    "filename": "Utilities.hs",
    "code": "Module      : Language.Rust.Inline.TH.Utilities\nDescription : Generate Storable instances\nCopyright   : (c) Alec Theriault, 2018\nLicense     : BSD-style\nMaintainer  : alec.theriault@gmail.com\nStability   : experimental\nPortability : GHC",
    "correctAnswer": "harpocrates/inline-rust"
  },
  {
    "filename": "oldFF-globalStorage.js",
    "code": "function read(key) {\n\treturn globalStorage[key]\n}",
    "correctAnswer": "marcuswestin/store.js"
  },
  {
    "filename": "CacheKeyFactory.java",
    "code": "public interface CacheKeyFactory {",
    "correctAnswer": "facebook/fresco"
  },
  {
    "filename": "param.rs",
    "code": "pub struct Param {\n    pub reader: &'static TypeReader,\n    pub row: Row,\n}",
    "correctAnswer": "microsoft/windows-rs"
  },
  {
    "filename": "conn.go",
    "code": "type Conn struct {\n\tsrc, dst net.Conn\n\t// TODO(banks): benchmark and consider adding _ [8]uint64 padding between\n\t// these to prevent false sharing between the rx and tx goroutines when\n\t// running on separate cores.\n\tsrcW, dstW countWriter\n\tstopping   int32",
    "correctAnswer": "hashicorp/consul"
  },
  {
    "filename": "b3GpuGridBroadphase.cpp",
    "code": "cl_kernel kCalcHashAABB;\ncl_kernel kClearCellStart;\ncl_kernel kFindCellStart;\ncl_kernel kFindOverlappingPairs;\ncl_kernel m_copyAabbsKernel;\ncl_kernel m_sap2Kernel;",
    "correctAnswer": "godotengine/godot"
  },
  {
    "filename": "AccessKeyPair.java",
    "code": "public class AccessKeyPair {\n    private String accessKey;\n    private String secretKey;\n    private String consumerSide;\n    private String providerSide;\n    private String creator;\n    private String options;",
    "correctAnswer": "apache/dubbo"
  },
  {
    "filename": "basic.html",
    "code": "<!doctype html>\n<html lang=\"\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"description\" content=\"\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
    "correctAnswer": "google/web-starter-kit"
  },
  {
    "filename": "redactedMetricsStreamServlet.java",
    "code": "public class redactedMetricsStreamServlet extends redactedSampleSseServlet {",
    "correctAnswer": "netflix/hystrix"
  },
  {
    "filename": "terraform.zsh",
    "code": "SPACESHIP_TERRAFORM_SHOW=\"${SPACESHIP_TERRAFORM_SHOW=true}\"\nSPACESHIP_TERRAFORM_PREFIX=\"${SPACESHIP_TERRAFORM_PREFIX=\"$SPACESHIP_PROMPT_DEFAULT_PREFIX\"}\"\nSPACESHIP_TERRAFORM_SUFFIX=\"${SPACESHIP_TERRAFORM_SUFFIX=\"$SPACESHIP_PROMPT_DEFAULT_SUFFIX\"}\"\nSPACESHIP_TERRAFORM_SYMBOL=\"${SPACESHIP_TERRAFORM_SYMBOL=\"🛠 \"}\"\nSPACESHIP_TERRAFORM_COLOR=\"${SPACESHIP_TERRAFORM_COLOR=\"105\"}\"",
    "correctAnswer": "denysdovhan/spaceship-prompt"
  },
  {
    "filename": "index.html",
    "code": "<!DOCTYPE html>\n<html>\n    <head>\n      <title>iPhone.redacted</title>\n      <link href=\"iphone.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\"/>\n      <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />",
    "correctAnswer": "madrobby/zepto"
  },
  {
    "filename": "index.html",
    "code": "<!DOCTYPE html>\n<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\n<style media='screen'>\n\tbody {\n\t\tbackground-color: #000;\n\t\tcolor: grey;\n\t}",
    "correctAnswer": "jeromeetienne/ar.js"
  },
  {
    "filename": "2014_10_12_000000_create_users_table.php",
    "code": "class CreateUsersTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */",
    "correctAnswer": "laravel/laravel"
  },
  {
    "filename": "FMDatabasePool.m",
    "code": "typedef NS_ENUM(NSInteger, redactedTransaction) {\n    redactedTransactionExclusive,\n    redactedTransactionDeferred,\n    redactedTransactionImmediate,\n};",
    "correctAnswer": "ccgus/fmdb"
  },
  {
    "filename": "bit_reader.go",
    "code": "type BitReader struct {\n\tdata []byte",
    "correctAnswer": "influxdb/influxdb"
  },
  {
    "filename": "lesson4-week3.html",
    "code": "<!doctype html>\n<html>\n<head>\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\n<title>lesson4-week3</title><link href='https://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext' rel='stylesheet' type='text/css' /><style type='text/css'>html {overflow-x: initial !important;}:root { --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:\"Lucida Console\",Consolas,\"Courier\",monospace; }\nhtml { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }\nbody { margin: 0px; padding: 0px; height: auto; bottom: 0px; top: 0px; left: 0px; right: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; }",
    "correctAnswer": "fengdu78/deeplearning_ai_books"
  },
  {
    "filename": "f_auto_filters.c",
    "code": "struct deint_priv {\n    struct mp_subfilter sub;\n    int prev_imgfmt;\n    int prev_setting;\n    struct m_config_cache *opts;\n};",
    "correctAnswer": "mpv-player/mpv"
  },
  {
    "filename": "unknown.go",
    "code": "func SetUnknowns(val cty.Value, schema *configschema.Block) cty.Value {\n\tif !val.IsKnown() {\n\t\treturn val\n\t}",
    "correctAnswer": "hashicorp/terraform"
  },
  {
    "filename": "MaxTimeCondition.java",
    "code": "public class MaxTimeCondition implements TerminationCondition {\n    private static final DateTimeFormatter formatter = DateTimeFormat.forPattern(\"dd-MMM HH:mm ZZ\");",
    "correctAnswer": "eclipse/deeplearning4j"
  },
  {
    "filename": "qunit.js",
    "code": "function Test( settings ) {\n\textend( this, settings );\n\tthis.assertions = [];\n\tthis.testNumber = ++Test.count;\n}",
    "correctAnswer": "defunkt/jquery-pjax"
  },
  {
    "filename": "Transform.hs",
    "code": "module Transform where",
    "correctAnswer": "iostreamer-X/FuncShell"
  },
  {
    "filename": "external.rb",
    "code": "module redacted\n  module External\n    class << self\n      #\n      # Gems that, if installed, should be loaded.\n      # Usually contain subcommands.\n      #",
    "correctAnswer": "jekyll/jekyll"
  },
  {
    "filename": "cache.rs",
    "code": "const INITIAL_CAPACITY: usize = 256;",
    "correctAnswer": "redox-os/tfs"
  },
  {
    "filename": "composite_multihandler.go",
    "code": "type CompositeMultiHandler struct {\n\tDebugHandler    LogHandler\n\tInfoHandler     LogHandler\n\tWarnHandler     LogHandler\n\tErrorHandler    LogHandler\n\tCriticalHandler LogHandler\n}",
    "correctAnswer": "revel/revel"
  },
  {
    "filename": "border-radius.js",
    "code": "let Declaration = require('../declaration')",
    "correctAnswer": "postcss/autoprefixer"
  },
  {
    "filename": "NptTlsTrustAnchor_Base_0017.cpp",
    "code": "|\n|   Neptune - Trust Anchors\n|\n|   This file is automatically generated by a script, do not edit!\n|\n| Copyright (c) 2002-2010, Axiomatic Systems, LLC.\n| All rights reserved.",
    "correctAnswer": "xbmc/xbmc"
  },
  {
    "filename": "Application.m",
    "code": "@implementation Application",
    "correctAnswer": "dzenbot/dznemptydataset"
  },
  {
    "filename": "Util.hs",
    "code": "Stability : experimental",
    "correctAnswer": "jonascarpay/apecs"
  },
  {
    "filename": "EmilVarLiveness.hs",
    "code": "data a := b = a := b\n  deriving (Eq, Show)",
    "correctAnswer": "spell-music/csound-expression"
  },
  {
    "filename": "footer.js",
    "code": "const html = require('choo/html');\nconst Component = require('choo/component');",
    "correctAnswer": "mozilla/send"
  },
  {
    "filename": "main.go",
    "code": "func newApp() *redacted.Application {\n\tapp := redacted.New()",
    "correctAnswer": "kataras/iris"
  },
  {
    "filename": "OEC64SystemResponder.m",
    "code": "@implementation OEC64SystemResponder\n@dynamic client;",
    "correctAnswer": "openemu/openemu"
  },
  {
    "filename": "wheelevent.rs",
    "code": "pub struct WheelEvent {\n    mouseevent: MouseEvent,\n    delta_x: Cell<Finite<f64>>,\n    delta_y: Cell<Finite<f64>>,\n    delta_z: Cell<Finite<f64>>,\n    delta_mode: Cell<u32>,\n}",
    "correctAnswer": "servo/servo"
  },
  {
    "filename": "Environment.hs",
    "code": "module Environment ( initEnv, evalKL ) where",
    "correctAnswer": "mthom/shentong"
  },
  {
    "filename": "XOR.hs",
    "code": "main :: IO ()\nmain = do",
    "correctAnswer": "jbarrow/LambdaNet"
  },
  {
    "filename": "index.js",
    "code": "const fx = (argsToProps, fx) => (...args) => [fx, argsToProps(args)]",
    "correctAnswer": "jorgebucaran/hyperapp"
  },
  {
    "filename": "zmov.go",
    "code": "func (c *Context) mov(a, b operand.Op, an, bn int, t *types.Basic) {\n\tswitch {\n\tcase (t.Info()&types.IsInteger) != 0 && an == 1 && bn == 1:\n\t\tc.MOVB(a, b)\n\tcase (t.Info()&types.IsInteger) != 0 && (t.Info()&types.IsUnsigned) == 0 && an == 1 && bn == 4:\n\t\tc.MOVBLSX(a, b)\n\tcase (t.Info()&types.IsInteger) != 0 && (t.Info()&types.IsUnsigned) != 0 && an == 1 && bn == 4:",
    "correctAnswer": "xtaci/kcptun"
  },
  {
    "filename": "EasyHandle.php",
    "code": "final class EasyHandle\n{\n    /**\n     * @var resource|\\CurlHandle cURL resource\n     */\n    public $handle;",
    "correctAnswer": "guzzle/guzzle"
  },
  {
    "filename": "RemoveEvent.hs",
    "code": "module RemoveEvent (main, test) where",
    "correctAnswer": "acid-state/acid-state"
  },
  {
    "filename": "bcrypt_pbkdf.go",
    "code": "const blockSize = 32",
    "correctAnswer": "hashicorp/packer"
  },
  {
    "filename": "QueueTimeSpan.java",
    "code": "public class QueueTimeSpan {\n    private MessageQueue messageQueue;\n    private long minTimeStamp;\n    private long maxTimeStamp;\n    private long consumeTimeStamp;\n    private long delayTime;",
    "correctAnswer": "apache/rocketmq"
  },
  {
    "filename": "BlockTests.cpp",
    "code": "static unsigned long seed = 1;",
    "correctAnswer": "microsoft/cntk"
  },
  {
    "filename": "unix.rs",
    "code": "const DAEMON_UNIX_SOCKET_NAME: &str = \"redacted.sock\";\nconst WORKER_UNIX_SOCKET_NAME: &str = \"worker.sock\";",
    "correctAnswer": "federico-terzi/espanso"
  },
  {
    "filename": "wkInput.ts",
    "code": "function toModifiersMask(modifiers: Set<types.KeyboardModifier>): number {\n  // From Source/WebKit/Shared/WebEvent.h\n  let mask = 0;\n  if (modifiers.has('Shift'))\n    mask |= 1;\n  if (modifiers.has('Control'))\n    mask |= 2;",
    "correctAnswer": "microsoft/playwright"
  },
  {
    "filename": "DestinationVariableMethodArgumentResolver.java",
    "code": "public class DestinationVariableMethodArgumentResolver extends AbstractNamedValueMethodArgumentResolver {",
    "correctAnswer": "spring-projects/spring-framework"
  },
  {
    "filename": "Report.hs",
    "code": "module redacted.Query.Commands.Report\n  ( redactedQueryReport,\n  )\nwhere",
    "correctAnswer": "NorfairKing/smos"
  },
  {
    "filename": "JSONLexer.java",
    "code": "public interface JSONLexer {",
    "correctAnswer": "alibaba/fastjson"
  },
  {
    "filename": "text.rs",
    "code": "proc_macros::IntoRenderObject,\n    render_object::*,\n    utils::{Brush, Point, Rectangle},\n};\nuse memchr::memchr_iter;\nuse std::iter;",
    "correctAnswer": "redox-os/orbtk"
  },
  {
    "filename": "descriptions-button.js",
    "code": "class DescriptionsButton extends TextTrackButton {",
    "correctAnswer": "videojs/video.js"
  },
  {
    "filename": "PluginInstaller.php",
    "code": "class PluginInstaller extends LibraryInstaller\n{\n    /**\n     * Initializes Plugin installer.\n     *\n     * @param IOInterface $io\n     * @param redacted    $redacted",
    "correctAnswer": "composer/composer"
  },
  {
    "filename": "device_tree.rs",
    "code": "const DEVICE_TREE_MAGIC: u32 = 0xd00d_feed;",
    "correctAnswer": "chyyuu/os_kernel_lab"
  },
  {
    "filename": "BounceInAnimator.java",
    "code": "public class BounceInAnimator extends BaseViewAnimator {\n    @Override\n    public void prepare(View target) {\n        getAnimatorAgent().playTogether(\n                ObjectAnimator.ofFloat(target, \"alpha\", 0, 1, 1, 1),\n                ObjectAnimator.ofFloat(target, \"scaleX\", 0.3f, 1.05f, 0.9f, 1),\n                ObjectAnimator.ofFloat(target, \"scaleY\", 0.3f, 1.05f, 0.9f, 1)",
    "correctAnswer": "daimajia/androidviewanimations"
  },
  {
    "filename": "HUnit.hs",
    "code": "module Test.redacted.HUnit\n  (\n    -- * Constructing test cases\n    testCase\n  , testCaseInfo\n  , testCaseSteps\n    -- * Constructing assertions",
    "correctAnswer": "feuerbach/tasty"
  },
  {
    "filename": "DependencyRequest.java",
    "code": "public abstract class DependencyRequest {\n  /** The kind of this request. */\n  public abstract RequestKind kind();",
    "correctAnswer": "google/dagger"
  },
  {
    "filename": "redactedHovercardEngineExtension.php",
    "code": "abstract class redactedHovercardEngineExtension extends Phobject {",
    "correctAnswer": "phacility/phabricator"
  },
  {
    "filename": "ExplicitTypeInterfaceConfiguration.swift",
    "code": "private enum VariableKind: String {\n    case instance\n    case local\n    case `static`\n    case `class`\n}",
    "correctAnswer": "realm/swiftlint"
  },
  {
    "filename": "input.rs",
    "code": "pub struct InputElement( Reference );",
    "correctAnswer": "koute/stdweb"
  },
  {
    "filename": "diff-list-view.js",
    "code": "const SelectListView = require('redacted-select-list');\nconst { repositoryForPath } = require('./helpers');",
    "correctAnswer": "atom/atom"
  },
  {
    "filename": "lua.c",
    "code": "static lua_State *globalL = NULL;",
    "correctAnswer": "redis/redis"
  },
  {
    "filename": "command-registry.ts",
    "code": "const {getDecoratedKeymaps} = remote.require('./plugins') as typeof import('../app/plugins');",
    "correctAnswer": "vercel/hyper"
  },
  {
    "filename": "build_matrix.c",
    "code": "int run_command(char *batch_file, char *command)\n{\n   char buffer[4096];\n   if (batch_file[0]) {\n      sprintf(buffer, \"%s && %s\", batch_file, command);\n      return system(buffer) == 0;\n   } else {",
    "correctAnswer": "nothings/stb"
  },
  {
    "filename": "once_atomic.cpp",
    "code": "namespace redacted_boost {} namespace boost = redacted_boost; namespace redacted_boost\n{\n  namespace thread_detail\n  {",
    "correctAnswer": "tencent/mars"
  },
  {
    "filename": "env.go",
    "code": "const (\n\tgatewayInterface = \"redacted-CGI/0.1\"\n)",
    "correctAnswer": "joewalnes/websocketd"
  },
  {
    "filename": "AppDelegate.m",
    "code": "@implementation AppDelegate",
    "correctAnswer": "marcuswestin/webviewjavascriptbridge"
  },
  {
    "filename": "node.go",
    "code": "func GetCurrentVersion() (string, string) {\n  cmd := exec.Command(\"node\",\"-v\")\n  str, err := cmd.Output()\n  if err == nil {\n    v := strings.Trim(regexp.MustCompile(\"-.*$\").ReplaceAllString(regexp.MustCompile(\"v\").ReplaceAllString(strings.Trim(string(str),\" \\n\\r\"),\"\"),\"\"),\" \\n\\r\")\n    cmd := exec.Command(\"node\",\"-p\",\"console.log(process.execPath)\")\n    str, _ := cmd.Output()",
    "correctAnswer": "coreybutler/nvm-windows"
  },
  {
    "filename": "ErrorException.php",
    "code": "class ErrorException extends \\ErrorException\n{\n    /**\n     * This constant represents a fatal error in the HHVM engine.\n     *\n     * PHP Zend runtime won't call the error handler on fatals, HHVM will, with an error code of 16777217\n     * We will handle fatal error a bit different on HHVM.",
    "correctAnswer": "yiisoft/yii2"
  },
  {
    "filename": "redacted_impl_dx9.cpp",
    "code": "static LPDIRECT3DDEVICE9        g_pd3dDevice = NULL;\nstatic LPDIRECT3DVERTEXBUFFER9  g_pVB = NULL;\nstatic LPDIRECT3DINDEXBUFFER9   g_pIB = NULL;\nstatic LPDIRECT3DTEXTURE9       g_FontTexture = NULL;\nstatic int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;",
    "correctAnswer": "ocornut/imgui"
  },
  {
    "filename": "state.js",
    "code": "const config = require('./config');\nconst layout = require('./layout');\nconst assets = require('../common/assets');\nconst getTranslator = require('./locale');\nconst { getFxaConfig } = require('./fxa');",
    "correctAnswer": "mozilla/send"
  },
  {
    "filename": "Core.hs",
    "code": "module redacted.Core where",
    "correctAnswer": "jonascarpay/apecs"
  },
  {
    "filename": "Exit_.php",
    "code": "class Exit_ extends Expr\n{\n    /* For use in \"kind\" attribute */\n    const KIND_EXIT = 1;\n    const KIND_DIE = 2;",
    "correctAnswer": "nikic/php-parser"
  },
  {
    "filename": "Util.hs",
    "code": "Copyright  :  (C) 2018, Google Inc.\nLicense    :  BSD2 (see the file LICENSE)\nMaintainer :  Christiaan Baaij <christiaan.baaij@gmail.com>\n-}",
    "correctAnswer": "clash-lang/clash-compiler"
  },
  {
    "filename": "index.html",
    "code": "<!doctype html>\n<!--\nCopyright (c) 2017 The redacted Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://redacted.github.io/LICENSE.txt\nThe complete set of authors may be found at http://redacted.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://redacted.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the redacted project is also",
    "correctAnswer": "polymer/polymer"
  },
  {
    "filename": "acknowledgements.rb",
    "code": "module Pod\n  module Generator\n    class Acknowledgements\n      # @return [Array<Class>] The classes of the acknowledgements generator\n      #         subclasses.\n      #\n      def self.generators",
    "correctAnswer": "cocoapods/cocoapods"
  },
  {
    "filename": "Point.php",
    "code": "class Point\n{\n    /**\n     * X coordinate\n     *\n     * @var int\n     */",
    "correctAnswer": "intervention/image"
  },
  {
    "filename": "tool.redacted",
    "code": "var CmdTool = &base.Command{\n\tRun:       runTool,\n\tUsageLine: \"redacted tool [-n] command [args...]\",\n\tShort:     \"run specified redacted tool\",\n\tLong: `\nTool runs the redacted tool command identified by the arguments.\nWith no arguments it prints the list of known tools.",
    "correctAnswer": "golang/go"
  },
  {
    "filename": "App.hs",
    "code": "module redacted.App where",
    "correctAnswer": "obsidiansystems/obelisk"
  },
  {
    "filename": "newadmin-KINKCreative.php",
    "code": "Put this file into your root folder. Set the user settings below and run the script. It will auto-delete when done.",
    "correctAnswer": "danielmiessler/seclists"
  },
  {
    "filename": "index-FINISHED.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Array Cardio 💪💪</title>\n</head>\n<body>",
    "correctAnswer": "wesbos/javascript30"
  },
  {
    "filename": "extractDescriptions.hs",
    "code": "#!/usr/bin/env runhaskell",
    "correctAnswer": "haskell-gi/haskell-gi"
  },
  {
    "filename": "TransactionsReport.hs",
    "code": "A transactions report. Like an EntriesReport, but with more\ninformation such as a running balance.",
    "correctAnswer": "simonmichael/hledger"
  },
  {
    "filename": "Format.hs",
    "code": "from the implementation of the @formatting@ package.",
    "correctAnswer": "Gabriel439/Haskell-Turtle-Library"
  },
  {
    "filename": "MJSingleViewController.m",
    "code": "@interface MJSingleViewController ()\n@property (assign, nonatomic) int count;\n@end",
    "correctAnswer": "codermjlee/mjrefresh"
  },
  {
    "filename": "libvips.js",
    "code": "const fs = require('fs');\nconst os = require('os');\nconst path = require('path');\nconst spawnSync = require('child_process').spawnSync;\nconst semver = require('semver');\nconst platform = require('./platform');",
    "correctAnswer": "lovell/sharp"
  },
  {
    "filename": "Lores.swift",
    "code": "let BLACK = UIColor.blackColor()\nlet RED = UIColor.redColor()\nlet BLUE = UIColor.blueColor()\nlet GREEN = UIColor.greenColor()\nlet BROWN = UIColor.brownColor()\nlet CYAN = UIColor.cyanColor()\nlet MAGENTA =  UIColor.magentaColor()",
    "correctAnswer": "ipader/swiftguide"
  },
  {
    "filename": "BindFont.java",
    "code": "public @interface BindFont {\n  /** Font resource ID to which the field will be bound. */\n  @FontRes int value();",
    "correctAnswer": "jakewharton/butterknife"
  },
  {
    "filename": "DragNDropExample.hs",
    "code": "Drag'N'Drop example\n------------------------------------------------------------------------------}\nmain :: IO ()\nmain = do\n    static <- getStaticDir\n    startGUI defaultConfig { jsStatic = Just static } setup",
    "correctAnswer": "HeinrichApfelmus/threepenny-gui"
  },
  {
    "filename": "redacted+compiler.js",
    "code": "const GLOBAL_REGISTRY = '__redacted_registry__'\nwindow[GLOBAL_REGISTRY] = {}",
    "correctAnswer": "riot/riot"
  },
  {
    "filename": "bsd.rs",
    "code": "io::{self, Error, ErrorKind},\n    net::SocketAddr,\n};",
    "correctAnswer": "shadowsocks/shadowsocks-rust"
  },
  {
    "filename": "TransferStats.php",
    "code": "final class TransferStats\n{\n    /**\n     * @var RequestInterface\n     */\n    private $request;",
    "correctAnswer": "guzzle/guzzle"
  },
  {
    "filename": "preload.js",
    "code": "function send(_event) {\n  ipc.send.apply(ipc, arguments)\n}",
    "correctAnswer": "segmentio/nightmare"
  },
  {
    "filename": "preload.ts",
    "code": "const INJECT_JS_PATH = path.join(__dirname, '..', 'inject/inject.js');\n/**\n * Patches window.Notification to:\n * - set a callback on a new Notification\n * - set a callback for clicks on notifications\n * @param createCallback\n * @param clickCallback",
    "correctAnswer": "jiahaog/nativefier"
  },
  {
    "filename": "get_silences_urlbuilder.go",
    "code": "type GetSilencesURL struct {\n\tFilter []string",
    "correctAnswer": "grafana/loki"
  },
  {
    "filename": "project_metadata_cache.rb",
    "code": "module Pod\n  class Installer\n    module ProjectCache\n      # Represents the metadata cache\n      #\n      class ProjectMetadataCache\n        require 'redacted/installer/project_cache/target_metadata.rb'",
    "correctAnswer": "cocoapods/cocoapods"
  },
  {
    "filename": "getnameinfo.c",
    "code": "int WSAAPI GetNameInfoW(\n  const SOCKADDR *pSockaddr,\n  socklen_t SockaddrLength,\n  PWCHAR pNodeBuffer,\n  DWORD NodeBufferSize,\n  PWCHAR pServiceBuffer,\n  DWORD ServiceBufferSize,",
    "correctAnswer": "libuv/libuv"
  },
  {
    "filename": "State.hs",
    "code": "module State where",
    "correctAnswer": "tweag/capability"
  },
  {
    "filename": "delayed_job.rb",
    "code": "Delayed::Worker.destroy_failed_jobs = false\nDelayed::Worker.max_attempts = 5\nDelayed::Worker.max_run_time = (ENV['DELAYED_JOB_MAX_RUNTIME'].presence || 2).to_i.minutes\nDelayed::Worker.read_ahead = 5\nDelayed::Worker.default_priority = 10\nDelayed::Worker.delay_jobs = !Rails.env.test?\nDelayed::Worker.sleep_delay = (ENV['DELAYED_JOB_SLEEP_DELAY'].presence || 10).to_f",
    "correctAnswer": "huginn/huginn"
  },
  {
    "filename": "QueryableStoreProvider.java",
    "code": "public class QueryableStoreProvider {",
    "correctAnswer": "apache/kafka"
  },
  {
    "filename": "E03_html_canvas.hs",
    "code": "Threepenny",
    "correctAnswer": "HeinrichApfelmus/threepenny-gui"
  },
  {
    "filename": "Basic.hs",
    "code": "module Basic where",
    "correctAnswer": "helium/airship"
  },
  {
    "filename": "bytesconv_table_gen.go",
    "code": "const (\n\ttoLower = 'a' - 'A'\n)",
    "correctAnswer": "valyala/fasthttp"
  },
  {
    "filename": "LogFactory-T.cs",
    "code": "namespace redacted\n{\n    using System.Diagnostics;\n    using System.Runtime.CompilerServices;",
    "correctAnswer": "NLog/NLog"
  },
  {
    "filename": "helper.rs",
    "code": "pub fn mod_positive(x: Scalar, y: Scalar) -> Scalar {\n    (x % y + y) % y\n}",
    "correctAnswer": "sharkdp/pastel"
  },
  {
    "filename": "MaybeOnErrorReturn.java",
    "code": "public final class MaybeOnErrorReturn<T> extends AbstractMaybeWithUpstream<T, T> {",
    "correctAnswer": "reactivex/rxjava"
  },
  {
    "filename": "datasource.mock.ts",
    "code": "function isMeasurementsQuery(query: string) {\n  return /SHOW MEASUREMENTS/.test(query);\n}",
    "correctAnswer": "grafana/grafana"
  },
  {
    "filename": "LC_Convert2.hs",
    "code": "module LC_Convert2 where",
    "correctAnswer": "lambdacube3d/lambdacube-edsl"
  },
  {
    "filename": "DistributedMutex.cpp",
    "code": "namespace folly {\nnamespace detail {\nnamespace distributed_mutex {",
    "correctAnswer": "facebook/rocksdb"
  },
  {
    "filename": "SmallCheck.hs",
    "code": "TypeOperators, DeriveDataTypeable, TypeFamilies,\n             GeneralizedNewtypeDeriving #-}\nmodule Test.redacted.SmallCheck\n  ( testProperty\n  , SmallCheckDepth(..)\n  , module Test.SmallCheck\n  ) where",
    "correctAnswer": "feuerbach/tasty"
  },
  {
    "filename": "Markup.hs",
    "code": "module Data.Text.Markup\n  ( Markup\n  , markupToList\n  , markupSet\n  , fromList\n  , fromText\n  , toText",
    "correctAnswer": "jtdaugherty/brick"
  },
  {
    "filename": "Callable.hs",
    "code": "module Data.GI.GIR.Callable\n    ( Callable(..)\n    , parseCallable\n    ) where",
    "correctAnswer": "haskell-gi/haskell-gi"
  },
  {
    "filename": "resolvePaths.js",
    "code": "const isBrowser = require('./getEnvironment')('type') === 'browser';\nconst resolveURL = isBrowser ? require('resolve-url') : s => s; // eslint-disable-line",
    "correctAnswer": "naptha/tesseract.js"
  },
  {
    "filename": "highlight.rs",
    "code": "pub struct Token {\n    pub span: (usize, usize),\n    pub data: String,\n    pub kind: String,\n    pub priority: usize,\n}",
    "correctAnswer": "curlpipe/ox"
  },
  {
    "filename": "ESGenerator.cs",
    "code": "namespace Bind.ES\n{\n    // Generator implementation for OpenGL ES 1.0 and 1.1\n    internal class ESGenerator : Generator\n    {\n        public ESGenerator(Settings settings) : base(settings)\n        {",
    "correctAnswer": "opentk/opentk"
  },
  {
    "filename": "DeserializeObject.cs",
    "code": "namespace redacted.Tests.Documentation.Samples.Serializer\n{\n    [TestFixture]\n    public class DeserializeObject : TestFixtureBase\n    {\n        #region Types\n        public class Account",
    "correctAnswer": "JamesNK/Newtonsoft.Json"
  },
  {
    "filename": "ApolloDataSourceFactoryBean.java",
    "code": "public class ApolloDataSourceFactoryBean implements FactoryBean<ApolloDataSource> {",
    "correctAnswer": "alibaba/spring-cloud-alibaba"
  },
  {
    "filename": "internal_metadata.rb",
    "code": "module ActiveRecord\n  # This class is used to create a table that keeps track of values and keys such\n  # as which environment migrations were run in.\n  #\n  # This is enabled by default. To disable this functionality set\n  # `use_metadata_table` to false in your database configuration.\n  class InternalMetadata < ActiveRecord::Base # :nodoc:",
    "correctAnswer": "rails/rails"
  },
  {
    "filename": "pdf2svg.js",
    "code": "function getFilePathForPage(pageNum) {\n  var name = path.basename(pdfPath, path.extname(pdfPath));\n  return path.join(outputDirectory, name + \"-\" + pageNum + \".svg\");\n}",
    "correctAnswer": "mozilla/pdf.js"
  },
  {
    "filename": "main.m",
    "code": "int main(int argc, char * argv[]) {\n    @autoreleasepool {\n        return UIApplicationMain(argc, argv, nil, NSStringFromClass([MBHudDemoTVAppDelegate class]));\n    }\n}",
    "correctAnswer": "jdg/mbprogresshud"
  },
  {
    "filename": "NSPopUpButton.swift",
    "code": "#if canImport(AppKit) && !targetEnvironment(macCatalyst)\nimport AppKit\nimport ReactiveSwift",
    "correctAnswer": "reactivecocoa/reactivecocoa"
  },
  {
    "filename": "Either.hs",
    "code": "module Control.Carrier.Fail.Either\n( -- * Fail carrier\n  runFail\n, FailC(..)\n  -- * Fail effect\n, module Control.Effect.Fail\n) where",
    "correctAnswer": "fused-effects/fused-effects"
  },
  {
    "filename": "NSColor+Hex.m",
    "code": "@implementation NSColor (Hex)",
    "correctAnswer": "matryer/bitbar"
  },
  {
    "filename": "MemSpeed.hs",
    "code": "module Main where",
    "correctAnswer": "Lemmih/lhc"
  },
  {
    "filename": "deferred.rs",
    "code": "const DATA_WORDS: usize = 3;",
    "correctAnswer": "crossbeam-rs/crossbeam"
  },
  {
    "filename": "args.rs",
    "code": "pub trait Args {\n    fn with_docopt(docopt: &docopt::Docopt) -> Self;\n}",
    "correctAnswer": "cloudflare/quiche"
  },
  {
    "filename": "CombinedHighlighter.java",
    "code": "public class CombinedHighlighter extends ChartHighlighter<CombinedDataProvider> implements IHighlighter\n{",
    "correctAnswer": "philjay/mpandroidchart"
  },
  {
    "filename": "extractUniformsFromSrc.ts",
    "code": "function extractUniformsFromString(string: string): {[key: string]: IExtractedUniformData}\n{\n    const maskRegex = new RegExp('^(projectionMatrix|uSampler|translationMatrix)$');",
    "correctAnswer": "pixijs/pixi.js"
  },
  {
    "filename": "Mapper3.hs",
    "code": "module Emulator.Mapper.Mapper3 (\n    Mapper3(..)\n  , new\n  , read\n  , write\n) where",
    "correctAnswer": "dbousamra/hnes"
  },
  {
    "filename": "bounce.rs",
    "code": "pub struct BounceSystem;",
    "correctAnswer": "amethyst/amethyst"
  },
  {
    "filename": "Maybe.hs",
    "code": "module Data.Array.redacted.Data.Maybe (",
    "correctAnswer": "AccelerateHS/accelerate"
  },
  {
    "filename": "en-nz.js",
    "code": "const locale = {\n  name: 'en-nz',\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  weekStart: 1,\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),",
    "correctAnswer": "iamkun/dayjs"
  },
  {
    "filename": "CsExpander.cs",
    "code": "namespace redacted.redacted.VB\n{\n    internal class CsExpander : ISyntaxExpander\n    {\n        public static ISyntaxExpander Instance { get; } = new CsExpander();",
    "correctAnswer": "icsharpcode/CodeConverter"
  },
  {
    "filename": "composer_messages_controller.rb",
    "code": "class ComposerMessagesController < ApplicationController",
    "correctAnswer": "discourse/discourse"
  },
  {
    "filename": "index.js",
    "code": "const { EventEmitter } = require('events')\nconst concat = require('simple-concat')\nconst createTorrent = require('create-torrent')\nconst debug = require('debug')('redacted')\nconst DHT = require('bittorrent-dht/client') // browser exclude\nconst loadIPSet = require('load-ip-set') // browser exclude\nconst parallel = require('run-parallel')",
    "correctAnswer": "webtorrent/webtorrent"
  },
  {
    "filename": "Comments.hs",
    "code": "module redacted.Comments ( annotateWithComments ) where",
    "correctAnswer": "ennocramer/floskell"
  },
  {
    "filename": "JavaUtils.java",
    "code": "public class JavaUtils {",
    "correctAnswer": "jenkinsci/jenkins"
  },
  {
    "filename": "SessionVault.hs",
    "code": "module Web.redacted.Internal.SessionVault where",
    "correctAnswer": "agrafix/Spock"
  },
  {
    "filename": "utils.js",
    "code": "function getPage(array, page, perPage) {\n  const obj = {}\n  const start = (page - 1) * perPage\n  const end = page * perPage",
    "correctAnswer": "typicode/json-server"
  },
  {
    "filename": "init.zsh",
    "code": "if (( ! $+commands[tmux] )); then\n  return 1\nfi",
    "correctAnswer": "sorin-ionescu/prezto"
  },
  {
    "filename": "key.go",
    "code": "func composeDeployKeysAPILink(repoPath string) string {\n\treturn conf.Server.ExternalURL + \"api/v1/repos/\" + repoPath + \"/keys/\"\n}",
    "correctAnswer": "gogits/gogs"
  },
  {
    "filename": "cli.rs",
    "code": "pub fn build_cli() -> App<'static, 'static> {\n    App::new(\"redacted\")\n        .version(crate_version!())\n        .author(crate_authors!())\n        .about(crate_description!())\n        .setting(AppSettings::SubcommandRequiredElseHelp)\n        .arg(",
    "correctAnswer": "getzola/zola"
  },
  {
    "filename": "redacted_client.sh",
    "code": "set -eo pipefail\n[[ $redacted_TRACE ]] && set -x\nexport redacted_PORT=${redacted_PORT:=22}\nexport redacted_HOST=${redacted_HOST:=}",
    "correctAnswer": "dokku/dokku"
  },
  {
    "filename": "evernote_concern.rb",
    "code": "module EvernoteConcern\n  extend ActiveSupport::Concern",
    "correctAnswer": "huginn/huginn"
  },
  {
    "filename": "Zipper.hs",
    "code": "module redacted.Zipper\n  ( Zipper\n  , fromList\n  , toList\n  , focus\n  , unsafeFocus\n  , left",
    "correctAnswer": "matterhorn-chat/matterhorn"
  },
  {
    "filename": "main.go",
    "code": "func MainTemplate() []byte {\n\treturn []byte(`/*\n{{ .Copyright }}\n{{ if .Legal.Header }}{{ .Legal.Header }}{{ end }}\n*/\npackage main",
    "correctAnswer": "spf13/cobra"
  },
  {
    "filename": "Sidebar.History.js",
    "code": "function SidebarHistory( editor ) {",
    "correctAnswer": "mrdoob/three.js"
  },
  {
    "filename": "dispatch.rs",
    "code": "pub const DEFAULT_REQUEST_TIMEOUT: Duration = Duration::from_millis(1500);",
    "correctAnswer": "rust-lang/rls"
  },
  {
    "filename": "number.rs",
    "code": "pub enum Number {\n    Defined(f32),\n    Undefined,\n}",
    "correctAnswer": "maps4print/azul"
  },
  {
    "filename": "AppContainer.js",
    "code": "function getStores() {\n  return [\n    AppStore,\n  ];\n}",
    "correctAnswer": "facebook/flux"
  },
  {
    "filename": "OrientateCommand.php",
    "code": "class OrientateCommand extends AbstractCommand\n{\n    /**\n     * Correct redacted orientation according to Exif data\n     *\n     * @param  \\redacted\\redacted\\redacted $redacted\n     * @return boolean",
    "correctAnswer": "intervention/image"
  },
  {
    "filename": "api.go",
    "code": "type SourceMap uint8",
    "correctAnswer": "evanw/esbuild"
  },
  {
    "filename": "func.go",
    "code": "func NewFunc(f func(ctx interface{})) func(ctx interface{}) bool {\n\tif f == nil {\n\t\tpanic(\"BUG: f cannot be nil\")\n\t}",
    "correctAnswer": "valyala/fasthttp"
  },
  {
    "filename": "Unsafe.hs",
    "code": "Copyright:  (c) 2016 Stephen Diehl\n            (c) 2016-2018 Serokell\n            (c) 2018-2020 redacted\nSPDX-License-Identifier: MIT\nMaintainer:  redacted <xrom.xkov@gmail.com>\nStability:   Stable\nPortability: Portable",
    "correctAnswer": "kowainik/relude"
  },
  {
    "filename": "popover.js",
    "code": "const NAME = 'popover'\nconst DATA_KEY = 'bs.popover'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst CLASS_PREFIX = 'bs-popover'\nconst BSCLS_PREFIX_REGEX = new RegExp(`(^|\\\\s)${CLASS_PREFIX}\\\\S+`, 'g')",
    "correctAnswer": "twbs/bootstrap"
  },
  {
    "filename": "Conduit.hs",
    "code": "module Network.HTTP.Client.Conduit\n    ( -- * Conduit-specific interface\n      withResponse\n    , responseOpen\n    , responseClose\n    , acquireResponse\n    , httpSource",
    "correctAnswer": "snoyberg/http-client"
  },
  {
    "filename": "partition.js",
    "code": "function getTilingMethod(key, squarifyratio) {\n    switch(key) {\n        case 'squarify':\n            return d3Hierarchy.treemapSquarify.ratio(squarifyratio);\n        case 'binary':\n            return d3Hierarchy.treemapBinary;\n        case 'dice':",
    "correctAnswer": "plotly/plotly.js"
  },
  {
    "filename": "F8DrawerLayout.js",
    "code": "class F8DrawerLayout extends React.Component {\n  _drawer: ?DrawerLayoutAndroid;",
    "correctAnswer": "fbsamples/f8app"
  },
  {
    "filename": "init.go",
    "code": "const initShortHelp = `Set up a new Go project, or migrate an existing one`\nconst initLongHelp = `\nInitialize the project at filepath root by parsing its redactedendencies, writing\nmanifest and lock files, and vendoring the redactedendencies. If root isn't\nspecified, use the current directory.",
    "correctAnswer": "golang/dep"
  },
  {
    "filename": "background.js",
    "code": "const µBlock = (( ) => { // jshint ignore:line",
    "correctAnswer": "gorhill/ublock"
  },
  {
    "filename": "AFHTTPResponseSerializationTests.m",
    "code": "@interface AFHTTPResponseSerializationTests : AFTestCase\n@property (nonatomic, strong) AFHTTPResponseSerializer *responseSerializer;\n@end",
    "correctAnswer": "afnetworking/afnetworking"
  },
  {
    "filename": "AppDelegate.swift",
    "code": "@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n    var window: UIWindow?",
    "correctAnswer": "ipader/swiftguide"
  },
  {
    "filename": "mod.rs",
    "code": "pub mod alfred;\npub mod terminal;",
    "correctAnswer": "denisidoro/navi"
  },
  {
    "filename": "ExtensionHelpers.swift",
    "code": "extension CGFloat {\n    var isEven: Bool {\n        return truncatingRemainder(dividingBy: 2.0) == 0\n    }\n}",
    "correctAnswer": "onevcat/kingfisher"
  },
  {
    "filename": "ExceptionHandling.hs",
    "code": "module redacted.ExceptionHandling\nwhere",
    "correctAnswer": "mattgreen/hython"
  },
  {
    "filename": "TH.hs",
    "code": "module Language.Rust.Inline.TH ( adtCtx, rustTyCtx, mkStorable, mkTupleStorable ) where",
    "correctAnswer": "harpocrates/inline-rust"
  },
  {
    "filename": "app.js",
    "code": "const Home = { template: '<div>home</div>' }\nconst Foo = { template: '<div>foo</div>' }\nconst Bar = {\n  template: `\n    <div>\n      bar\n      <div style=\"height:500px\"></div>",
    "correctAnswer": "vuejs/vue-router"
  },
  {
    "filename": "help.js",
    "code": "const chalk = require('chalk');",
    "correctAnswer": "yarnpkg/yarn"
  },
  {
    "filename": "CommentText.hs",
    "code": "module Level04.Types.CommentText\n  ( CommentText\n  , mkCommentText\n  , getCommentText\n  ) where",
    "correctAnswer": "qfpl/applied-fp-course"
  },
  {
    "filename": "admin-routing.module.ts",
    "code": "const routes: Routes = [{\n  path: 'admin',\n  canActivate: [OnlyAdminUsersGuard],\n  children: [{\n    path: '',\n    component: AdminComponent,\n  }]",
    "correctAnswer": "linnovate/mean"
  },
  {
    "filename": "user.js",
    "code": "const { promisify } = require('util');\nconst crypto = require('crypto');\nconst nodemailer = require('nodemailer');\nconst nodemailerSendgrid = require('nodemailer-sendgrid');\nconst passport = require('passport');\nconst _ = require('lodash');\nconst validator = require('validator');",
    "correctAnswer": "sahat/hackathon-starter"
  },
  {
    "filename": "mod.rs",
    "code": "Result as GrpcResult, RpcContext, RpcStatus, RpcStatusCode, ServerStreamingSink, UnarySink,\n    WriteFlags,\n};\nuse kvproto::diagnosticspb::{\n    Diagnostics, SearchLogRequest, SearchLogResponse, ServerInfoRequest, ServerInfoResponse,\n    ServerInfoType,\n};",
    "correctAnswer": "tikv/tikv"
  },
  {
    "filename": "Internal.hs",
    "code": "Copyright  :  (C) 2018, Google Inc.\nLicense    :  BSD2 (see the file LICENSE)\nMaintainer :  Christiaan Baaij <christiaan.baaij@gmail.com>\n-}",
    "correctAnswer": "clash-lang/clash-compiler"
  },
  {
    "filename": "Concat.hs",
    "code": "module Main where",
    "correctAnswer": "lehins/massiv"
  },
  {
    "filename": "Ratio.hs",
    "code": "module Data.Ratio\n    ( Ratio\n    , Rational\n    , (%)\n    , numerator\n    , denominator\n    , approxRational",
    "correctAnswer": "valderman/haste-compiler"
  },
  {
    "filename": "01-populate-group-for-new-portal-settings.js",
    "code": "const Promise = require('bluebird');\nconst logging = require('../../../../../shared/logging');",
    "correctAnswer": "tryghost/ghost"
  },
  {
    "filename": "slide.js",
    "code": "const themeStylesByType = Object.create(null);\ntheme.styles.forEach(({ types, style }) => {\n  types.forEach(type => {\n    themeStylesByType[type] = Object.assign(\n      themeStylesByType[type] || {},\n      style\n    );",
    "correctAnswer": "pomber/git-history"
  },
  {
    "filename": "FloatToast.java",
    "code": "public class FloatToast extends BaseFloatView {",
    "correctAnswer": "blankj/androidutilcode"
  },
  {
    "filename": "make_pkg.sh",
    "code": "VERSION=$(git describe --always --dirty 2>/dev/null)\nif test -z \"$VERSION\" ; then\n  echo \"Could not get version from git\"\n  if test -f version; then\n    VERSION=$(cat version)\n  fi\nfi",
    "correctAnswer": "fish-shell/fish-shell"
  },
  {
    "filename": "Dot.hs",
    "code": "module redacted.Visualize.Dot where",
    "correctAnswer": "metastatedev/juvix"
  },
  {
    "filename": "zero_file.autogen.go",
    "code": "type zeroFile struct {\n\tlog *helpers.DistinctLogger\n}",
    "correctAnswer": "gohugoio/hugo"
  },
  {
    "filename": "rip.hs",
    "code": "channel = Event.Channel 0\nnotes = [12 .. 100]\ntime = 3",
    "correctAnswer": "tidalcycles/Tidal"
  },
  {
    "filename": "State.php",
    "code": "class ParagonIE_Sodium_Core_SecretStream_State\n{\n    /** @var string $key */\n    protected $key;",
    "correctAnswer": "wordpress/wordpress"
  },
  {
    "filename": "Package.hs",
    "code": "Integrate NPM style packages\n-}\n-----------------------------------------------------------------------------\nmodule Compiler.Package( Packages, PackageName\n                       , searchPackages\n                       , discoverPackages\n                       , packageInfoFromDir",
    "correctAnswer": "koka-lang/koka"
  },
  {
    "filename": "ConvolveSeq.hs",
    "code": "module Main where",
    "correctAnswer": "lehins/massiv"
  },
  {
    "filename": "fs.go",
    "code": "type onlyFilesFS struct {\n\tfs http.FileSystem\n}",
    "correctAnswer": "gin-gonic/gin"
  },
  {
    "filename": "Scope.hs",
    "code": "module Syntax.Resolve.Scope\n  ( Slot(..)\n  , VarName\n  , Signature(..), vals, types, modules\n  , Context(..), scope, tyvars, nonRecs, target\n  , mkContext\n  , exportedNames",
    "correctAnswer": "amuletml/amulet"
  },
  {
    "filename": "logscope.go",
    "code": "type LogLevel int",
    "correctAnswer": "joewalnes/websocketd"
  },
  {
    "filename": "view.go",
    "code": "type WebView struct {\n\tlog.Logger",
    "correctAnswer": "inconshreveable/ngrok"
  },
  {
    "filename": "HttpFoundationExtension.php",
    "code": "final class HttpFoundationExtension extends AbstractExtension\n{\n    private $urlHelper;",
    "correctAnswer": "symfony/symfony"
  },
  {
    "filename": "compress.js",
    "code": "function root(path) { return \"./\" + path; }\nfunction libredactedCore(path) { return root(\"lib/redacted-core/\" + path); }\nfunction dist(path) { return root(\"dist/\" + path); }",
    "correctAnswer": "jasmine/jasmine"
  },
  {
    "filename": "NetworkReachabilityManagerTests.swift",
    "code": "@testable import redacted\nimport Foundation\nimport SystemConfiguration\nimport XCTest",
    "correctAnswer": "alamofire/alamofire"
  },
  {
    "filename": "options.js",
    "code": "const eslint = require('eslint')\nconst path = require('path')\nconst pkg = require('./package.json')",
    "correctAnswer": "standard/standard"
  },
  {
    "filename": "sudo.ts",
    "code": "const execFileAsync = promisify(execFile);",
    "correctAnswer": "resin-io/etcher"
  },
  {
    "filename": "MonadError.hs",
    "code": "class (Monad m) => MonadError e m | m -> e where\n    throwError :: e             -- error to throw\n               -> m a",
    "correctAnswer": "huangz1990/real-world-haskell-cn"
  },
  {
    "filename": "parser.rs",
    "code": "fn merge_protos<M: Message>(ops: Vec<M>) -> Result<M, ProtobufError> {\n    let mut out = Vec::new();\n    for op in ops {\n        op.write_to_vec(&mut out)?;\n    }\n    protobuf::parse_from_bytes(&out)\n}",
    "correctAnswer": "tensorflow/rust"
  },
  {
    "filename": "TermSearch.hs",
    "code": "module redacted.TermSearch\n    ( SearchResults(..)\n    , SearchBackend(..)\n    , SearchTerm\n    , search\n    ) where",
    "correctAnswer": "joshuaclayton/unused"
  },
  {
    "filename": "command.js",
    "code": "function command(settings) {\n  var options = settings.execOptions;\n  var executable = options.exec;\n  var args = [];",
    "correctAnswer": "remy/nodemon"
  },
  {
    "filename": "IQUITextFieldView+Additions.m",
    "code": "@implementation UIView (Additions)",
    "correctAnswer": "hackiftekhar/iqkeyboardmanager"
  },
  {
    "filename": "tick.rs",
    "code": "pub(crate) type TickToken = Option<Instant>;",
    "correctAnswer": "crossbeam-rs/crossbeam"
  },
  {
    "filename": "read2.rs",
    "code": "pub use self::imp::read2;",
    "correctAnswer": "rust-lang/cargo"
  },
  {
    "filename": "ignore_globs.rs",
    "code": "pub struct IgnoreGlobs(pub GlobSet);",
    "correctAnswer": "Peltoche/lsd"
  },
  {
    "filename": "backup_processor_planning.go",
    "code": "func distBackupPlanSpecs(\n\tplanCtx *sql.PlanningCtx,\n\texecCtx sql.JobExecContext,\n\tdsp *sql.DistSQLPlanner,\n\tspans roachpb.Spans,\n\tintroducedSpans roachpb.Spans,\n\tpkIDs map[uint64]bool,",
    "correctAnswer": "cockroachdb/cockroach"
  },
  {
    "filename": "error.rs",
    "code": "pub trait IError: ReferenceType {\n    /// Returns a human-readable description of the error.\n    ///\n    /// [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/message)\n    // https://www.ecma-international.org/ecma-262/6.0/#sec-error.prototype.message\n    #[inline]\n    fn message( &self ) -> String {",
    "correctAnswer": "koute/stdweb"
  },
  {
    "filename": "exec-cmd.c",
    "code": "static const char *system_prefix(void);",
    "correctAnswer": "git/git"
  },
  {
    "filename": "Tuple.hs",
    "code": "module Language.Scala.Tuple where",
    "correctAnswer": "tweag/sparkle"
  },
  {
    "filename": "gulpfile.babel.js",
    "code": "const dirs = pkg['redacted-configs'].directories;",
    "correctAnswer": "h5bp/html5-boilerplate"
  },
  {
    "filename": "redactedSpecVersion.hs",
    "code": "module Distribution.redactedSpecVersion where",
    "correctAnswer": "haskell/cabal"
  },
  {
    "filename": "tensor_shape.rs",
    "code": "pub struct TensorShapeProto {\n    // message fields\n    pub dim: ::protobuf::RepeatedField<TensorShapeProto_Dim>,\n    pub unknown_rank: bool,\n    // special fields\n    pub unknown_fields: ::protobuf::UnknownFields,\n    pub cached_size: ::protobuf::CachedSize,",
    "correctAnswer": "tensorflow/rust"
  },
  {
    "filename": "Connection.hs",
    "code": "module Network.HTTP.Client.Connection\n    ( connectionReadLine\n    , connectionReadLineWith\n    , connectionDropTillBlankLine\n    , dummyConnection\n    , openSocketConnection\n    , openSocketConnectionSize",
    "correctAnswer": "snoyberg/http-client"
  },
  {
    "filename": "update-readme.js",
    "code": "const axios = require('axios');\nconst fs = require('fs');\nconst jsYaml = require('js-yaml');",
    "correctAnswer": "gothinkster/realworld"
  },
  {
    "filename": "graphics_settings.rs",
    "code": "type Point2 = na::Point2<f32>;",
    "correctAnswer": "ggez/ggez"
  },
  {
    "filename": "middleware.go",
    "code": "type MiddlewareFunc func(http.Handler) http.Handler",
    "correctAnswer": "gorilla/mux"
  },
  {
    "filename": "options-storage.ts",
    "code": "function featureWasRenamed(from: string, to: string): Migration<RGHOptions> {\n\treturn (options: RGHOptions) => {\n\t\tif (typeof options[`feature:${from}`] === 'boolean') {\n\t\t\toptions[`feature:${to}`] = options[`feature:${from}`];\n\t\t}\n\t};\n}",
    "correctAnswer": "sindresorhus/refined-github"
  },
  {
    "filename": "LegacyRedirects.hs",
    "code": "module Distribution.Server.Features.LegacyRedirects (\n    legacyRedirectsFeature\n  ) where",
    "correctAnswer": "haskell/hackage-server"
  },
  {
    "filename": "repl.cpp",
    "code": "bool REPL::instanceExists()\n{\n    return REPL::getInstance() != Q_NULLPTR;\n}",
    "correctAnswer": "ariya/phantomjs"
  },
  {
    "filename": "options.js",
    "code": "function onLoad() {\n  var xhr;",
    "correctAnswer": "adam-p/markdown-here"
  },
  {
    "filename": "spawn.js",
    "code": "const utils = require('./utils');\nconst merge = utils.merge;\nconst bus = utils.bus;\nconst spawn = require('child_process').spawn;",
    "correctAnswer": "remy/nodemon"
  },
  {
    "filename": "history.zsh",
    "code": "_zsh_autosuggest_strategy_history() {\n\t# Reset options to defaults and enable LOCAL_OPTIONS\n\temulate -L zsh",
    "correctAnswer": "zsh-users/zsh-autosuggestions"
  },
  {
    "filename": "logging.rs",
    "code": "struct FileLogger {\n    /// `redacted`' virtual file representation to write log messages to.\n    file: File,\n    /// Channel to get log messages from.\n    receiver: mpsc::Receiver<String>,\n}",
    "correctAnswer": "ggez/ggez"
  },
  {
    "filename": "path.html",
    "code": "<!DOCTYPE html>\n<html>\n<head>\n\t<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" />",
    "correctAnswer": "prinzhorn/skrollr"
  },
  {
    "filename": "redacted-locale_teo-ug.js",
    "code": "function getDecimals(n) {\n  n = n + '';\n  var i = n.indexOf('.');\n  return (i == -1) ? 0 : n.length - i - 1;\n}",
    "correctAnswer": "angular/angular.js"
  },
  {
    "filename": "table-nonbinary-unicode-properties.html",
    "code": "<emu-table id=\"table-nonbinary-unicode-properties\">\n  <emu-caption>Non-binary Unicode property aliases and their canonical property names</emu-caption>\n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th>Property name and aliases</th>\n        <th>Canonical property name</th>",
    "correctAnswer": "tc39/ecma262"
  },
  {
    "filename": "AccessTokenPlugin.swift",
    "code": "public protocol AccessTokenAuthorizable {",
    "correctAnswer": "moya/moya"
  },
  {
    "filename": "websocket-loader.js",
    "code": "class WebSocketLoader extends BaseLoader {",
    "correctAnswer": "bilibili/flv.js"
  },
  {
    "filename": "HindleyMilner.hs",
    "code": "module HindleyMilner where",
    "correctAnswer": "quchen/articles"
  },
  {
    "filename": "SocketStorage.php",
    "code": "class SocketStorage implements StorageInterface\n{",
    "correctAnswer": "barryvdh/laravel-debugbar"
  },
  {
    "filename": "util.rs",
    "code": "pub const BASIC_VIEW_HEIGHT: u16 = 6;\npub const SMALL_TERMINAL_WIDTH: u16 = 150;\npub const SMALL_TERMINAL_HEIGHT: u16 = 45;",
    "correctAnswer": "Rigellute/spotify-tui"
  },
  {
    "filename": "git_version_gen.sh",
    "code": "set -e",
    "correctAnswer": "fish-shell/fish-shell"
  },
  {
    "filename": "runInBrowser.js",
    "code": "function log (message) {\n\tconsole.log(message);\n\tvar results = document.getElementById('results');\n\t//noinspection InnerHTMLJS\n\tresults.innerHTML += (message + '\\n').replace(/\\n/g, '<br/>');\n}",
    "correctAnswer": "jedwatson/classnames"
  },
  {
    "filename": "dedup.rs",
    "code": "const ORDERING: atomic::Ordering = atomic::Ordering::Relaxed;",
    "correctAnswer": "redox-os/tfs"
  },
  {
    "filename": "render_creator.cpp",
    "code": "namespace WeexCore {",
    "correctAnswer": "apache/incubator-weex"
  },
  {
    "filename": "landing.js",
    "code": "function Landing(runner, options) {\n  Base.call(this, runner, options);",
    "correctAnswer": "mochajs/mocha"
  },
  {
    "filename": "redactedSolidColorGenerator.m",
    "code": "NSString *const kGPUSolidColorFragmentShaderString = SHADER_STRING\n(\n precision lowp float;",
    "correctAnswer": "bradlarson/gpuimage"
  },
  {
    "filename": "ipc.js",
    "code": "function IPC(process) {\n  if (process[instance]) {\n    return process[instance]\n  }",
    "correctAnswer": "segmentio/nightmare"
  },
  {
    "filename": "zz_generated_project_alert_group_lifecycle_adapter.go",
    "code": "type ProjectAlertGroupLifecycle interface {\n\tCreate(obj *v3.ProjectAlertGroup) (runtime.Object, error)\n\tRemove(obj *v3.ProjectAlertGroup) (runtime.Object, error)\n\tUpdated(obj *v3.ProjectAlertGroup) (runtime.Object, error)\n}",
    "correctAnswer": "rancherio/rancher"
  },
  {
    "filename": "GenDiffFunc.cpp",
    "code": "using namespace redacted;\nusing namespace irgen;",
    "correctAnswer": "apple/swift"
  },
  {
    "filename": "TableResult.hs",
    "code": "module redacted.CLI.Views.SearchResult.TableResult\n    ( printTable\n    ) where",
    "correctAnswer": "joshuaclayton/unused"
  },
  {
    "filename": "module.g.cpp",
    "code": "void* winrt_make_redacted_Internal_TestController();\nvoid* winrt_make_redacted_ReactNative_ReactDispatcherHelper();\nvoid* winrt_make_redacted_ReactNative_ReactInstanceSettings();\nvoid* winrt_make_redacted_ReactNative_ReactNativeHost();\nvoid* winrt_make_redacted_ReactNative_ReactNotificationServiceHelper();\nvoid* winrt_make_redacted_ReactNative_ReactPropertyBagHelper();\nvoid* winrt_make_facebook_react_MemoryTracker();",
    "correctAnswer": "microsoft/react-native-windows"
  },
  {
    "filename": "4.3：完美洗牌算法.c",
    "code": "void pefect_shuffle1(int *a, int n)\n{\n\tint n2 = n * 2, i, b[N];\n\tfor (i = 1; i <= n2; ++i)\n\t{\n\t\tb[(i * 2) % (n2 + 1)] = a[i];\n\t}",
    "correctAnswer": "julycoding/the-art-of-programming-by-july"
  },
  {
    "filename": "UIPickerView.m",
    "code": "@implementation UIPickerView",
    "correctAnswer": "nicklockwood/icarousel"
  },
  {
    "filename": "response.rs",
    "code": "pub struct Response {\n    http: http::Response<web_sys::Response>,\n    // Boxed to save space (11 words to 1 word), and it's not accessed\n    // frequently internally.\n    url: Box<Url>,\n}",
    "correctAnswer": "seanmonstar/reqwest"
  },
  {
    "filename": "get-repos.js",
    "code": "const { Octokit } = require('@octokit/rest');",
    "correctAnswer": "freecodecamp/freecodecamp"
  },
  {
    "filename": "Array.hs",
    "code": "module Data.Array (\n    -- * Immutable non-strict arrays\n    -- $intro\n    module Data.Ix, -- export all of Ix\n    Array,          -- Array type is abstract",
    "correctAnswer": "valderman/haste-compiler"
  },
  {
    "filename": "Aur.hs",
    "code": "module Linux.Arch.Aur\n  ( -- * Types\n    AurInfo(..)\n  , AurError(..)\n    -- * Queries\n  , info, search\n  ) where",
    "correctAnswer": "fosskers/aura"
  },
  {
    "filename": "reflect_trait.rs",
    "code": "pub struct TraitInfo {\n    item_trait: ItemTrait,\n}",
    "correctAnswer": "bevyengine/bevy"
  },
  {
    "filename": "Bytes.swift",
    "code": "public final class Bytes {",
    "correctAnswer": "perfectlysoft/perfect"
  },
  {
    "filename": "Token.hs",
    "code": "module Web.redacted.Token\n   ( -- * API\n     CreateCardToken\n   , createCardToken\n   , CreateBankAccountToken\n   , createBankAccountToken\n   , GetCardToken",
    "correctAnswer": "dmjio/stripe"
  },
  {
    "filename": "IGListTestCase.m",
    "code": "@implementation IGListTestCase",
    "correctAnswer": "instagram/iglistkit"
  },
  {
    "filename": "config.sample.js",
    "code": "const config = {  \n  env: process.env.NODE_ENV,\n  logger: {\n    level: process.env.LOG_LEVEL || 'info',\n    enabled: process.env.BOOLEAN ? process.env.BOOLEAN.toLowerCase() === 'true' : false\n  },\n  server: {",
    "correctAnswer": "wearehive/project-guidelines"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where",
    "correctAnswer": "tweag/inline-java"
  },
  {
    "filename": "vo.ts",
    "code": "const u = undefined;",
    "correctAnswer": "angular/angular"
  },
  {
    "filename": "load-perf-config.js",
    "code": "const path = require('path');\nconst fs = require('fs');\nconst redacted = require('../dist/redacted.js');",
    "correctAnswer": "rollup/rollup"
  },
  {
    "filename": "BoxplotSeries.ts",
    "code": "class BoxplotSeriesModel extends SeriesModel<BoxplotSeriesOption> {",
    "correctAnswer": "apache/incubator-echarts"
  },
  {
    "filename": "MouseButton.cs",
    "code": "namespace redacted.Windowing.GraphicsLibraryFramework\n{\n    /// <summary>\n    ///     Specifies the buttons of a mouse.\n    /// </summary>\n    public enum MouseButton\n    {",
    "correctAnswer": "opentk/opentk"
  },
  {
    "filename": "pixie-backtrace.c",
    "code": "char global_self[512] = \"\";",
    "correctAnswer": "robertdavidgraham/masscan"
  },
  {
    "filename": "baseprov.c",
    "code": "static OSSL_FUNC_provider_gettable_params_fn base_gettable_params;\nstatic OSSL_FUNC_provider_get_params_fn base_get_params;\nstatic OSSL_FUNC_provider_query_operation_fn base_query;",
    "correctAnswer": "openssl/openssl"
  },
  {
    "filename": "week1.html",
    "code": "<!doctype html>\n<html>\n<head>\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\n<title>week1.md</title><link href='https://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext' rel='stylesheet' type='text/css' /><style type='text/css'>html {overflow-x: initial !important;}#write, body { height: auto; }\n#write, #write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write ol, #write p, #write ul { position: relative; }\n#write, #write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }",
    "correctAnswer": "fengdu78/coursera-ml-andrewng-notes"
  },
  {
    "filename": "Monad.hs",
    "code": "module Web.redacted.Internal.Monad where",
    "correctAnswer": "agrafix/Spock"
  },
  {
    "filename": "Color.hs",
    "code": "module Graphics.redacted.Attributes.Color\n  ( Color(..)",
    "correctAnswer": "jtdaugherty/vty"
  },
  {
    "filename": "Shell.hs",
    "code": "all three of them within a `Shell`:",
    "correctAnswer": "Gabriel439/Haskell-Turtle-Library"
  },
  {
    "filename": "default_headers.rs",
    "code": "convert::TryFrom,\n    future::Future,\n    marker::PhantomData,\n    pin::Pin,\n    rc::Rc,\n    task::{Context, Poll},\n};",
    "correctAnswer": "actix/actix-web"
  },
  {
    "filename": "server.js",
    "code": "const app = require('express')()\nconst http = require('http').Server(app)\nconst io = require('socket.io')(http)\nconst path = require('path')\nconst fs = require('fs')",
    "correctAnswer": "vuejs/vue-devtools"
  },
  {
    "filename": "Char.hs",
    "code": "module Data.redacted.Internal.Unsafe.Char\n    (\n      ord\n    , unsafeChr\n    , unsafeChr8\n    , unsafeChr32\n    , unsafeWrite",
    "correctAnswer": "haskell/text"
  },
  {
    "filename": "Versions.hs",
    "code": "module Versions where",
    "correctAnswer": "helium/airship"
  },
  {
    "filename": "SpringAnnotationInterceptor.java",
    "code": "public class SpringAnnotationInterceptor implements InstanceMethodsAroundInterceptor {\n    @Override\n    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes,\n        MethodInterceptResult result) throws Throwable {\n        String operationName = objInst.getClass().getName() + \".\" + method.getName();\n        AbstractSpan span = ContextManager.createLocalSpan(operationName);\n        span.setComponent(ComponentsDefine.SPRING_ANNOTATION);",
    "correctAnswer": "apache/skywalking"
  },
  {
    "filename": "workbox-runtime-caching_src_index.js.html",
    "code": "<!DOCTYPE html>\n<html devsite>",
    "correctAnswer": "google/webfundamentals"
  },
  {
    "filename": "command.rs",
    "code": "pub enum Command {\n    /// Notify the coordinator of a new client session.\n    Startup {\n        session: Session,\n        tx: futures::channel::oneshot::Sender<Response<Vec<StartupMessage>>>,\n    },",
    "correctAnswer": "MaterializeInc/materialize"
  },
  {
    "filename": "ResourceEntry.java",
    "code": "public final class ResourceEntry {",
    "correctAnswer": "skylot/jadx"
  },
  {
    "filename": "Haskell.hs",
    "code": "Module                  : redacted.Template.Haskell\nCopyright               : (c) 2017-2020 redacted\nSPDX-License-Identifier : MPL-2.0\nMaintainer              : redacted <xrom.xkov@gmail.com>\nStability               : Stable\nPortability             : Portable",
    "correctAnswer": "kowainik/summoner"
  },
  {
    "filename": "mk_extensions_mod.hs",
    "code": "main = writeFile \"src/redacted/Extension.hs\" $ render moduleDoc",
    "correctAnswer": "haskell-hint/hint"
  },
  {
    "filename": "request.go",
    "code": "type Request struct {\n\tMethod        string\n\tURL           *url.URL\n\tHost          string\n\tParams        url.Values\n\tHeaders       http.Header\n\tClientToken   string",
    "correctAnswer": "hashicorp/vault"
  },
  {
    "filename": "exp_lazy.cpp",
    "code": "struct Vec;\n// expression structure holds the expression\nstruct BinaryAddExp {\n  const Vec &lhs;\n  const Vec &rhs;\n  BinaryAddExp(const Vec &lhs, const Vec &rhs)\n  : lhs(lhs), rhs(rhs) {}",
    "correctAnswer": "apache/incubator-mxnet"
  },
  {
    "filename": "ToolInstallCommandLowLevelErrorConverter.cs",
    "code": "namespace Microsoft.redacted.Tools.Tool.Install\n{\n    internal static class InstallToolCommandLowLevelErrorConverter\n    {\n        public static IEnumerable<string> GetUserFacingMessages(Exception ex, PackageId packageId)\n        {\n            string[] userFacingMessages = null;",
    "correctAnswer": "dotnet/sdk"
  },
  {
    "filename": "gen_ScrollIntoViewOptions.rs",
    "code": "extern \"C\" {\n    # [wasm_bindgen (extends = :: js_sys :: Object , js_name = ScrollIntoViewOptions)]\n    #[derive(Debug, Clone, PartialEq, Eq)]\n    #[doc = \"The `ScrollIntoViewOptions` dictionary.\"]\n    #[doc = \"\"]\n    #[doc = \"*This API requires the following crate features to be activated: `ScrollIntoViewOptions`*\"]\n    pub type ScrollIntoViewOptions;",
    "correctAnswer": "rustwasm/wasm-bindgen"
  },
  {
    "filename": "ParkingLot.cpp",
    "code": "namespace folly {\nnamespace parking_lot_detail {",
    "correctAnswer": "facebook/rocksdb"
  },
  {
    "filename": "check-server-name.sh",
    "code": "__init_params=()\n__script_params=(\"$@\")",
    "correctAnswer": "trimstray/nginx-admins-handbook"
  },
  {
    "filename": "Util.hs",
    "code": "module Data.Csv.Util\n    ( (<$!>)\n    , blankLine\n    , liftM2'\n    , endOfLine\n    , doubleQuote\n    , newline",
    "correctAnswer": "haskell-hvr/cassava"
  },
  {
    "filename": "mod.rs",
    "code": "pub mod benchmark;\nuse self::benchmark::do_benchmark;\nuse super::crypto::x25519::*;\nuse super::noise::*;\nuse base64::{decode, encode};\nuse hex::encode as encode_hex;\nuse libc::{raise, SIGSEGV};",
    "correctAnswer": "cloudflare/boringtun"
  },
  {
    "filename": "Util.hs",
    "code": "module redacted.Util (\n  -- * Utility\n  runGC, global,",
    "correctAnswer": "jonascarpay/apecs"
  },
  {
    "filename": "ArrayTypeAdapter.java",
    "code": "public final class ArrayTypeAdapter<E> extends TypeAdapter<Object> {\n  public static final TypeAdapterFactory FACTORY = new TypeAdapterFactory() {\n    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    @Override public <T> TypeAdapter<T> create(redacted redacted, TypeToken<T> typeToken) {\n      Type type = typeToken.getType();\n      if (!(type instanceof GenericArrayType || type instanceof Class && ((Class<?>) type).isArray())) {\n        return null;",
    "correctAnswer": "google/gson"
  },
  {
    "filename": "redirect.rs",
    "code": "pub struct Policy {\n    inner: PolicyKind,\n}",
    "correctAnswer": "seanmonstar/reqwest"
  },
  {
    "filename": "LoaderButton.java",
    "code": "public abstract class LoaderButton<T> extends JButton{",
    "correctAnswer": "libgdx/libgdx"
  },
  {
    "filename": "defaults.rb",
    "code": "validate :application do |_key, value|\n  changed_value = value.gsub(/[^A-Z0-9\\.\\-]/i, \"_\")\n  if value != changed_value\n    warn %Q(The :application value \"#{value}\" is invalid!)\n    warn \"Use only letters, numbers, hyphens, dots, and underscores. For example:\"\n    warn \"  set :application, '#{changed_value}'\"\n    raise redacted::ValidationError",
    "correctAnswer": "capistrano/capistrano"
  },
  {
    "filename": "sharded.js",
    "code": "const co = require('co');",
    "correctAnswer": "automattic/mongoose"
  },
  {
    "filename": "reformat-gentle.sh",
    "code": "set -e -u -o pipefail",
    "correctAnswer": "open-guides/og-aws"
  },
  {
    "filename": "While.hs",
    "code": "value (Cons (Pair x y) s) v k =\n  case (==) x v of { True -> k y ; False -> value s v k };",
    "correctAnswer": "tommythorn/Reduceron"
  },
  {
    "filename": "events.js",
    "code": "function normalizeKeypressEvents(value, key) {\n  return { value: value, key: key || {} };\n}",
    "correctAnswer": "sboudrias/inquirer.js"
  },
  {
    "filename": "EFXContextInteger.cs",
    "code": "namespace redacted.Audio.OpenAL.Extensions.Creative.EFX\n{\n    /// <summary>\n    /// Defines new integer properties on the OpenAL context.\n    /// </summary>\n    public enum EFXContextInteger\n    {",
    "correctAnswer": "opentk/opentk"
  },
  {
    "filename": "Class.hs",
    "code": "module redacted.Settings.Class where\nimport Control.Monad.Classes     -- from: monad-classes\nimport Control.Monad.Trans       -- from: mtl\nimport GHC.Prim (Proxy#, proxy#) -- from: ghc-prim",
    "correctAnswer": "nstack/nstack"
  },
  {
    "filename": "byteorder_io.rs",
    "code": "pub enum ByteOrder {\n    Little,\n    Big,\n    Native,\n}",
    "correctAnswer": "uutils/coreutils"
  },
  {
    "filename": "delay.js",
    "code": "const pause = require('connect-pause')",
    "correctAnswer": "typicode/json-server"
  },
  {
    "filename": "raf.ts",
    "code": "let id: number = 0;\nconst ids: RafMap = {};",
    "correctAnswer": "ant-design/ant-design"
  },
  {
    "filename": "Counter.hs",
    "code": "module Ex06Counter.Counter where",
    "correctAnswer": "alpacaaa/zero-bullshit-haskell"
  },
  {
    "filename": "boxread.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "tesseract-ocr/tesseract"
  },
  {
    "filename": "plugin.rs",
    "code": "pub trait Plugin {\n  /// The JS script to evaluate on init.\n  fn init_script(&self) -> Option<String> {\n    None\n  }\n  /// Callback invoked when the webview is created.\n  #[allow(unused_variables)]",
    "correctAnswer": "tauri-apps/tauri"
  },
  {
    "filename": "untagged_enum.rs",
    "code": "pub fn transcoder_decorator(ast: &syn::DeriveInput) -> TokenStream {\n    let ctx = Context::from_ast(ast);",
    "correctAnswer": "rusterlium/rustler"
  },
  {
    "filename": "gulpfile.js",
    "code": "const pkg = require('./package.json')\nconst path = require('path')\nconst glob = require('glob')\nconst yargs = require('yargs')\nconst colors = require('colors')\nconst qunit = require('node-qunit-puppeteer')",
    "correctAnswer": "hakimel/reveal.js"
  },
  {
    "filename": "TargetResult_Tests.cs",
    "code": "namespace Microsoft.Build.UnitTests.BackEnd\n{\n    /// <summary>\n    /// Tests for the target result test.\n    /// </summary>\n    public class TargetResult_Tests\n    {",
    "correctAnswer": "dotnet/msbuild"
  },
  {
    "filename": "SmartExceptionTracer.cpp",
    "code": "namespace redacted {\nnamespace exception_tracer {\nnamespace {",
    "correctAnswer": "facebook/folly"
  },
  {
    "filename": "InstructionVisitor.java",
    "code": "public class InstructionVisitor {\n    private final InstructionVisitor prevIv;",
    "correctAnswer": "tencent/tinker"
  },
  {
    "filename": "ExampleGruvboxColourExtension.hs",
    "code": "module Main where",
    "correctAnswer": "cdepillabout/termonad"
  },
  {
    "filename": "project_model.rs",
    "code": "core::{\n        registry::PackageRegistry,\n        resolver::{EncodableResolve, Resolve, ResolveOpts},\n        PackageId, Workspace,\n    },\n    ops,\n    util::{errors::CargoResult, important_paths::find_root_manifest_for_wd, toml},",
    "correctAnswer": "rust-lang/rls"
  },
  {
    "filename": "generate-schema-tree.js",
    "code": "const fetch = require('node-fetch');\nconst path = require('path');\nconst fs = require('fs');",
    "correctAnswer": "googlechrome/lighthouse"
  },
  {
    "filename": "syscall_linux_arm.go",
    "code": "func Getpagesize() int { return 4096 }",
    "correctAnswer": "golang/dep"
  },
  {
    "filename": "Queue.hs",
    "code": "module Hedgehog.Internal.Queue (\n    TaskIndex(..)\n  , TasksRemaining(..)",
    "correctAnswer": "hedgehogqa/haskell-hedgehog"
  },
  {
    "filename": "cloud-ui.js",
    "code": "const widget = uDom.nodeFromId('cloudWidget');\nif ( widget === null ) { return; }",
    "correctAnswer": "gorhill/ublock"
  },
  {
    "filename": "rwlock.rs",
    "code": "pub struct LenCachingRwLock<T: ?Sized> {\n\tlen: AtomicUsize,\n\tdata: RwLock<T>,\n}",
    "correctAnswer": "openethereum/parity-ethereum"
  },
  {
    "filename": "NodeSizing.hs",
    "code": "module Data.Bedrock.NodeSizing () where {-\n    ( lowerNodeSize ) where",
    "correctAnswer": "Lemmih/lhc"
  },
  {
    "filename": "eventually-list-version.js",
    "code": "const path = require('path');\nconst { version } = require('../../package');\nconst { version: dashboardPluginVersion } = require('@redacted/enterprise-plugin/package');\nconst { version: componentsVersion } = require('@redacted/components/package');\nconst { sdkVersion } = require('@redacted/enterprise-plugin');\nconst isStandaloneExecutable = require('../utils/isStandaloneExecutable');\nconst resolveLocalredactedPath = require('./resolve-local-redacted-path');",
    "correctAnswer": "serverless/serverless"
  },
  {
    "filename": "zz_generated_global_dns_provider_lifecycle_adapter.go",
    "code": "type GlobalDnsProviderLifecycle interface {\n\tCreate(obj *v3.GlobalDnsProvider) (runtime.Object, error)\n\tRemove(obj *v3.GlobalDnsProvider) (runtime.Object, error)\n\tUpdated(obj *v3.GlobalDnsProvider) (runtime.Object, error)\n}",
    "correctAnswer": "rancherio/rancher"
  },
  {
    "filename": "NavigationCallback.java",
    "code": "public interface NavigationCallback {",
    "correctAnswer": "alibaba/arouter"
  },
  {
    "filename": "lib.rs",
    "code": "extern crate cargo_metadata;\nextern crate console;\nextern crate strsim;\n#[macro_use]\nextern crate failure;\nextern crate glob;\nextern crate parking_lot;",
    "correctAnswer": "rustwasm/wasm-pack"
  },
  {
    "filename": "fastRGLPropsEqual.js",
    "code": "const PropTypes = require(\"prop-types\");\nconst propTypes = require(\"./ReactGridLayoutPropTypes\").default;\nconst keys = Object.keys(propTypes);",
    "correctAnswer": "strml/react-grid-layout"
  },
  {
    "filename": "update.js",
    "code": "const { dialog, shell, app, nativeImage } = require('electron');\nconst AppConfig = require('../configuration');\nconst https = require('https');\nconst path = require('path');",
    "correctAnswer": "geeeeeeeeek/electronic-wechat"
  },
  {
    "filename": "CompletableMergeDelayErrorIterable.java",
    "code": "public final class CompletableMergeDelayErrorIterable extends Completable {",
    "correctAnswer": "reactivex/rxjava"
  },
  {
    "filename": "Formatter.cs",
    "code": "namespace redacted\n{\n    internal static class Formatter\n    {\n        //private static string _indent = \"   \";",
    "correctAnswer": "mgholam/fastJSON"
  },
  {
    "filename": "color.rs",
    "code": "pub fn parse_color(s: &str, true_color: bool) -> Option<Color> {\n    if s == \"normal\" {\n        return None;\n    }\n    let die = || {\n        eprintln!(\"Invalid color or style attribute: {}\", s);\n        process::exit(1);",
    "correctAnswer": "dandavison/delta"
  },
  {
    "filename": "Shutdown.hs",
    "code": "#include \"HsNetDef.h\"",
    "correctAnswer": "haskell/network"
  },
  {
    "filename": "Server.hs",
    "code": "module Main where",
    "correctAnswer": "higherkindness/mu-haskell"
  },
  {
    "filename": "cors.js",
    "code": "const Boom = require('@redacted/boom');\nconst Hoek = require('@redacted/hoek');",
    "correctAnswer": "hapijs/hapi"
  },
  {
    "filename": "finder.rs",
    "code": "pub trait Finder {\n    /// Runs a callback on the view identified by `sel`.\n    ///\n    /// If the view is found, return the result of `callback`.\n    ///\n    /// If the view is not found, or if it is not of the asked type,\n    /// it returns `None`.",
    "correctAnswer": "gyscos/cursive"
  },
  {
    "filename": "Dyre.hs",
    "code": "module redacted.Dyre\n    ( Mode(..)\n    , getredactedExecutable\n    , wrap\n    , recompile\n    ) where",
    "correctAnswer": "k0ral/hbro"
  },
  {
    "filename": "Split.hs",
    "code": "module Music.Time.Split\n  ( module Music.Time.Position,",
    "correctAnswer": "music-suite/music-suite"
  },
  {
    "filename": "mod.rs",
    "code": "crate::redacted::error::*,\n    std::collections::HashMap,\n    std::{ffi::OsStr, fs},\n};",
    "correctAnswer": "o2sh/onefetch"
  },
  {
    "filename": "View.hs",
    "code": "module HaskellDo.CodeMirror.View where",
    "correctAnswer": "theam/haskell-do"
  },
  {
    "filename": "start.rs",
    "code": "static BSS_TEST_ZERO: usize = 0x0;\n/// Test of non-zero values in data.\nstatic DATA_TEST_NONZERO: usize = 0xFFFF_FFFF_FFFF_FFFF;",
    "correctAnswer": "nebulet/nebulet"
  },
  {
    "filename": "Txp.hs",
    "code": "module Pos.Diffusion.Full.Txp\n       ( sendTx\n       , txListeners\n       , txOutSpecs\n       ) where",
    "correctAnswer": "input-output-hk/cardano-sl"
  },
  {
    "filename": "RootResolverValue.hs",
    "code": "module Data.Morpheus.App.Internal.Resolving.RootResolverValue\n  ( runRootResolverValue,\n    RootResolverValue (..),\n  )\nwhere",
    "correctAnswer": "morpheusgraphql/morpheus-graphql"
  },
  {
    "filename": "hashtable_gen.go",
    "code": "type hashTableMode int",
    "correctAnswer": "cockroachdb/cockroach"
  },
  {
    "filename": "redacted.js",
    "code": "function focusable( element, isTabIndexNotNaN ) {\n\tvar map, mapName, img,\n\t\tnodeName = element.nodeName.toLowerCase();\n\tif ( \"area\" === nodeName ) {\n\t\tmap = element.parentNode;\n\t\tmapName = map.name;\n\t\tif ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {",
    "correctAnswer": "designmodo/flat-ui"
  },
  {
    "filename": "lib.rs",
    "code": "extern crate ucd_trie;",
    "correctAnswer": "pest-parser/pest"
  },
  {
    "filename": "ChatListScreen.js",
    "code": "const styles = StyleSheet.create({\n  loadingScreen: {\n    backgroundColor: 'white',\n    paddingTop: 8,\n    flex: 1,\n  },\n  listView: {",
    "correctAnswer": "ptmt/react-native-macos"
  },
  {
    "filename": "CaveKind.hs",
    "code": "module Content.CaveKind\n  ( -- * Group name patterns\n    pattern CAVE_ROGUE, pattern CAVE_ARENA, pattern CAVE_LABORATORY, pattern CAVE_NOISE, pattern CAVE_SHALLOW_ROGUE, pattern CAVE_OUTERMOST, pattern CAVE_RAID, pattern CAVE_BRAWL, pattern CAVE_BRAWL_ALT, pattern CAVE_SHOOTOUT, pattern CAVE_HUNT, pattern CAVE_ESCAPE, pattern CAVE_ZOO, pattern CAVE_AMBUSH, pattern CAVE_BATTLE, pattern CAVE_SAFARI_1, pattern CAVE_SAFARI_2, pattern CAVE_SAFARI_3\n  , pattern CAVE_BRIDGE, pattern CAVE_RESIDENTIAL, pattern CAVE_MUSEUM, pattern CAVE_EXIT, pattern CAVE_CASINO, pattern CAVE_POWER\n  , groupNamesSingleton, groupNames\n  , -- * Content\n    content",
    "correctAnswer": "AllureOfTheStars/Allure"
  },
  {
    "filename": "NotesAdapter.java",
    "code": "public class NotesAdapter extends RecyclerView.Adapter<NotesAdapter.NoteViewHolder> {",
    "correctAnswer": "greenrobot/greendao"
  },
  {
    "filename": "DeferredRequestCreator.java",
    "code": "class DeferredRequestCreator implements ViewTreeObserver.OnPreDrawListener {",
    "correctAnswer": "didi/doraemonkit"
  },
  {
    "filename": "facebook.js",
    "code": "const httpsRequest = require('./httpsRequest');\nvar Parse = require('parse/node').Parse;\nconst crypto = require('crypto');",
    "correctAnswer": "parse-community/parse-server"
  },
  {
    "filename": "GLSLSyntax.hs",
    "code": "Copyright: (c) Vo Minh Thu, 2010.",
    "correctAnswer": "lambdacube3d/lambdacube-edsl"
  },
  {
    "filename": "CacheInvocationParameter.java",
    "code": "public class CacheInvocationParameter {",
    "correctAnswer": "netflix/hystrix"
  },
  {
    "filename": "GetUserList.java",
    "code": "public class GetUserList extends UseCase<List<User>, Void> {\n\n  private final UserRepository userRepository;\n\n  @Inject\n  GetUserList(UserRepository userRepository, ThreadExecutor threadExecutor,\n      PostExecutionThread postExecutionThread) {\n    super(threadExecutor, postExecutionThread);\n    this.userRepository = userRepository;\n  }\n\n  @Override Observable<List<User>> buildUseCaseObservable(Void unused) {\n    return this.userRepository.users();\n  }\n}",
    "correctAnswer": "android10/android-cleanarchitecture"
  },
  {
    "filename": "assets_metadata.rs",
    "code": "pub struct AssetsMetadata {\n    redacted_version: Option<String>,\n    creation_time: Option<SystemTime>,\n}",
    "correctAnswer": "sharkdp/bat"
  },
  {
    "filename": "redacted.go",
    "code": "var (\n\t// ErrMethodMismatch is returned when the method in the request does not match\n\t// the method defined against the route.\n\tErrMethodMismatch = errors.New(\"method is not allowed\")\n\t// ErrNotFound is returned when no route match is found.\n\tErrNotFound = errors.New(\"no matching route was found\")\n)",
    "correctAnswer": "gorilla/mux"
  },
  {
    "filename": "JreMessages.java",
    "code": "class JreMessages {",
    "correctAnswer": "seleniumhq/selenium"
  },
  {
    "filename": "gen_SvgLineElement.rs",
    "code": "extern \"C\" {\n    # [wasm_bindgen (extends = SvgGeometryElement , extends = SvgGraphicsElement , extends = SvgElement , extends = Element , extends = Node , extends = EventTarget , extends = :: js_sys :: Object , js_name = SVGLineElement , typescript_type = \"SVGLineElement\")]\n    #[derive(Debug, Clone, PartialEq, Eq)]\n    #[doc = \"The `SvgLineElement` class.\"]\n    #[doc = \"\"]\n    #[doc = \"[MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/API/SVGLineElement)\"]\n    #[doc = \"\"]",
    "correctAnswer": "rustwasm/wasm-bindgen"
  },
  {
    "filename": "bool.rs",
    "code": "pub struct SubCommand;",
    "correctAnswer": "nushell/nushell"
  },
  {
    "filename": "RNNReactTitleView.m",
    "code": "@implementation RNNReactTitleView {\n    BOOL _fillParent;\n}",
    "correctAnswer": "wix/react-native-navigation"
  },
  {
    "filename": "ClassMapPerfTest.java",
    "code": "public class ClassMapPerfTest /* extends TestCase */ {",
    "correctAnswer": "greenrobot/eventbus"
  },
  {
    "filename": "Error.hs",
    "code": "module Distribution.Server.Framework.Error (",
    "correctAnswer": "haskell/hackage-server"
  },
  {
    "filename": "rate_limiter.rs",
    "code": "const COOKIE_REFRESH: u64 = 128; // Use 128 and not 120 so the compiler can optimize out the division\nconst COOKIE_SIZE: usize = 16;\nconst COOKIE_NONCE_SIZE: usize = 24;",
    "correctAnswer": "cloudflare/boringtun"
  },
  {
    "filename": "WizardDaoImpl.java",
    "code": "public class WizardDaoImpl extends DaoBaseImpl<Wizard> implements WizardDao {",
    "correctAnswer": "iluwatar/java-design-patterns"
  },
  {
    "filename": "rudp.go",
    "code": "type RUDP struct {\n\tBaseLayer\n\tSYN, ACK, EACK, RST, NUL bool\n\tVersion                  uint8\n\tHeaderLength             uint8\n\tSrcPort, DstPort         RUDPPort\n\tDataLength               uint16",
    "correctAnswer": "xtaci/kcptun"
  },
  {
    "filename": "UpdatePartition.hs",
    "code": "module Network.AWS.Glue.UpdatePartition\n    (\n    -- * Creating a Request\n      updatePartition\n    , UpdatePartition\n    -- * Request Lenses\n    , upCatalogId",
    "correctAnswer": "brendanhay/amazonka"
  },
  {
    "filename": "Main.hs",
    "code": "main :: IO ()\nmain = do\n  n <- System.Environment.getArgs\n  case n of\n    [\"01\"] -> Ex01StaticString.StaticString.main\n    [\"02\"] -> Ex02Echo.Echo.main\n    [\"03\"] -> Ex03CaseMatch.CaseMatch.main",
    "correctAnswer": "alpacaaa/zero-bullshit-haskell"
  },
  {
    "filename": "BinaryTreePaths.java",
    "code": "public class BinaryTreePaths {\n    public List<String> binaryTreePaths(TreeNode root) {\n        List<String> result = new ArrayList<String>();",
    "correctAnswer": "kdn251/interviews"
  },
  {
    "filename": "BarLineScatterCandleBubbleRenderer.java",
    "code": "public abstract class BarLineScatterCandleBubbleRenderer extends DataRenderer {",
    "correctAnswer": "philjay/mpandroidchart"
  },
  {
    "filename": "Types.hs",
    "code": "module redacted.Events.State.Types where",
    "correctAnswer": "smallhadroncollider/taskell"
  },
  {
    "filename": "ClipboardUtils.java",
    "code": "public final class ClipboardUtils {",
    "correctAnswer": "blankj/androidutilcode"
  },
  {
    "filename": "is.js",
    "code": "const defined = function (val) {\n  return typeof val !== 'undefined' && val !== null;\n};",
    "correctAnswer": "lovell/sharp"
  },
  {
    "filename": "ijksdl_codec_android_mediacodec_dummy.c",
    "code": "static SDL_Class g_amediacodec_class = {\n    .name = \"AMediaCodecDummy\",\n};",
    "correctAnswer": "bilibili/ijkplayer"
  },
  {
    "filename": "flags.go",
    "code": "type FlagValueSet interface {\n\tVisitAll(fn func(FlagValue))\n}",
    "correctAnswer": "spf13/viper"
  },
  {
    "filename": "index.ts",
    "code": "const init = (_options: Partial<AuthenticationClientOptions> = {}) => {\n  const options: AuthenticationClientOptions = Object.assign({}, defaults, _options);\n  const { Authentication } = options;",
    "correctAnswer": "feathersjs/feathers"
  },
  {
    "filename": "x509_v3.c",
    "code": "int X509v3_get_ext_count(const STACK_OF(X509_EXTENSION) *x)\n{\n    if (x == NULL)\n        return 0;\n    return sk_X509_EXTENSION_num(x);\n}",
    "correctAnswer": "openssl/openssl"
  },
  {
    "filename": "versions.go",
    "code": "func versionIsBetween(version, gte, lte semver.Version) bool {\n\tif gte.NE(semver.Version{}) && !version.GTE(gte) {\n\t\treturn false\n\t}\n\tif lte.NE(semver.Version{}) && !version.LTE(lte) {\n\t\treturn false\n\t}",
    "correctAnswer": "kubernetes/minikube"
  },
  {
    "filename": "fr_TD.php",
    "code": "return array_replace_recursive(require __DIR__.'/fr.php', [\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',",
    "correctAnswer": "briannesbitt/carbon"
  },
  {
    "filename": "check_integrity.sh",
    "code": "err() {\n    echo >&2 \"$1\"\n    exit 1\n}",
    "correctAnswer": "tj/git-extras"
  },
  {
    "filename": "proto-imap4.c",
    "code": "static void\nimap4_parse(  const struct Banner1 *banner1,\n           void *banner1_private,\n           struct ProtocolState *pstate,\n           const unsigned char *px, size_t length,\n           struct BannerOutput *banout,\n           struct InteractiveData *more)",
    "correctAnswer": "robertdavidgraham/masscan"
  },
  {
    "filename": "ClassSimDef.java",
    "code": "public class ClassSimDef {",
    "correctAnswer": "tencent/tinker"
  },
  {
    "filename": "member.js",
    "code": "const {\n  builders: { softline, group, indent },\n} = require(\"../../document\");\nconst { isNumericLiteral } = require(\"../utils\");\nconst { printOptionalToken } = require(\"./misc\");",
    "correctAnswer": "prettier/prettier"
  },
  {
    "filename": "merge.js",
    "code": "function typesMatch(a, b) {\n  return (typeof a === typeof b) && (Array.isArray(a) === Array.isArray(b));\n}",
    "correctAnswer": "remy/nodemon"
  },
  {
    "filename": "Server.hs",
    "code": "module Server where",
    "correctAnswer": "aviaviavi/legion"
  },
  {
    "filename": "util.go",
    "code": "var _runeWidths = make(map[rune]int)",
    "correctAnswer": "junegunn/fzf"
  },
  {
    "filename": "vendor.go",
    "code": "type ModuleJSON struct {\n\tPath      string      // module path\n\tReplace   *ModuleJSON // replaced by this module\n\tMain      bool        // is this the main module?\n\tIndirect  bool        // is this module only an indirect dependency of main module?\n\tDir       string      // directory holding files for this module, if any\n\tGoMod     string      // path to go.mod file for this module, if any",
    "correctAnswer": "kubernetes/kops"
  },
  {
    "filename": "EllipseCommand.php",
    "code": "class EllipseCommand extends AbstractCommand\n{\n    /**\n     * Draws ellipse on given redacted\n     *\n     * @param  \\redacted\\redacted\\redacted $redacted\n     * @return boolean",
    "correctAnswer": "intervention/image"
  },
  {
    "filename": "event_target.rs",
    "code": "pub struct EventListenerHandle {\n    event_type: &'static str,\n    reference: Reference,\n    listener_reference: Reference\n}",
    "correctAnswer": "koute/stdweb"
  },
  {
    "filename": "output.rs",
    "code": "pub type Strategy = Process;\n#[cfg(all(feature = \"output-strategy-capture\", not(feature = \"output-strategy-null\")))]\npub type Strategy = Captured;\n#[cfg(all(feature = \"output-strategy-capture\", feature = \"output-strategy-null\"))]\npub type Strategy = Null;",
    "correctAnswer": "artichoke/artichoke"
  },
  {
    "filename": "Editor.hs",
    "code": "module Editor where",
    "correctAnswer": "osener/markup.rocks"
  },
  {
    "filename": "CallableDemo.java",
    "code": "public class CallableDemo {\n    public static void main(String[] args) {\n        //使用阿里巴巴推荐的创建线程池的方式\n        //通过ThreadPoolExecutor构造函数自定义参数创建\n        ThreadPoolExecutor executor = new ThreadPoolExecutor(\n                CORE_POOL_SIZE,\n                MAX_POOL_SIZE,",
    "correctAnswer": "snailclimb/javaguide"
  },
  {
    "filename": "webpack-dev-server.config.js",
    "code": "const path = require(\"path\");\nconst webpack = require(\"webpack\");",
    "correctAnswer": "strml/react-grid-layout"
  },
  {
    "filename": "AnonymousObserver.swift",
    "code": "final class AnonymousObserver<Element>: ObserverBase<Element> {\n    typealias EventHandler = (Event<Element>) -> Void",
    "correctAnswer": "reactivex/rxswift"
  },
  {
    "filename": "ControlDispatcher.java",
    "code": "public interface ControlDispatcher {",
    "correctAnswer": "google/exoplayer"
  },
  {
    "filename": "splat-message.js",
    "code": "const redacted = require('../');",
    "correctAnswer": "winstonjs/winston"
  },
  {
    "filename": "VirtualDirectory.cpp",
    "code": "using namespace XFILE;",
    "correctAnswer": "xbmc/xbmc"
  },
  {
    "filename": "PostSectionController.m",
    "code": "static NSInteger cellsBeforeComments = 3;",
    "correctAnswer": "instagram/iglistkit"
  },
  {
    "filename": "XAxisRendererRadarChart.swift",
    "code": "open class XAxisRendererRadarChart: XAxisRenderer\n{\n    @objc open weak var chart: RadarChartView?",
    "correctAnswer": "danielgindi/charts"
  },
  {
    "filename": "commons.c",
    "code": "time_t end_proc;\ntime_t timestamp;\ntime_t start_proc;",
    "correctAnswer": "allinurl/goaccess"
  },
  {
    "filename": "BaseElement.js",
    "code": "function BaseElement(){\n}",
    "correctAnswer": "airbnb/lottie-web"
  },
  {
    "filename": "Builder.hs",
    "code": "module Text.redacted.Error.Builder\n  ( -- * Top-level helpers\n    err,\n    errFancy,",
    "correctAnswer": "mrkkrp/megaparsec"
  },
  {
    "filename": "Diff.hs",
    "code": "Copyright 2019 Vidar 'koala_man' Holen",
    "correctAnswer": "koalaman/shellcheck"
  },
  {
    "filename": "shell.js",
    "code": "const fs = require('fs')\nconst readline = require('readline')\nconst Stream = require('stream')\nconst cline = require('cline')\nconst chalk = require('chalk')",
    "correctAnswer": "hubotio/hubot"
  },
  {
    "filename": "Unsafe.hs",
    "code": "module Data.redacted.Vector.Unsafe\n  (\n  -- * Vector\n  -- ** Accessors\n  -- *** Indexing\n    unsafeHead\n  , unsafeLast",
    "correctAnswer": "lehins/massiv"
  },
  {
    "filename": "ReactiveModel.hs",
    "code": "module Model.ReactiveModel\n   ( ReactiveModel -- (basicModel, eventHandlers)\n   -- * Construction\n   , emptyRM\n   -- * Access\n   , pendingEvents\n   , pendingHandlers",
    "correctAnswer": "keera-studios/keera-hails"
  },
  {
    "filename": "redacted.lang-cs.php",
    "code": "$redacted_LANG['authenticate']         = 'Chyba SMTP: Autentizace selhala.';\n$redacted_LANG['connect_host']         = 'Chyba SMTP: Nelze navázat spojení se SMTP serverem.';\n$redacted_LANG['data_not_accepted']    = 'Chyba SMTP: Data nebyla přijata.';\n$redacted_LANG['empty_message']        = 'Prázdné tělo zprávy';\n$redacted_LANG['encoding']             = 'Neznámé kódování: ';\n$redacted_LANG['execute']              = 'Nelze provést: ';\n$redacted_LANG['file_access']          = 'Nelze získat přístup k souboru: ';",
    "correctAnswer": "phpmailer/phpmailer"
  },
  {
    "filename": "Contents.swift",
    "code": "/*:\n > # IMPORTANT: To use **Rx.playground**:\n 1. Open **Rx.xcworkspace**.\n 1. Build the **RxExample-macOS** scheme (**Product** → **Build**).\n 1. Open **Rx** playground in the **Project navigator** (under RxExample project).\n 1. Show the Debug Area (**View** → **Debug Area** → **Show Debug Area**).\n */",
    "correctAnswer": "reactivex/rxswift"
  },
  {
    "filename": "20170610000000_add_statuses_index_on_account_id_id.rb",
    "code": "class AddStatusesIndexOnAccountIdId < ActiveRecord::Migration[5.1]\n  disable_ddl_transaction!",
    "correctAnswer": "tootsuite/mastodon"
  },
  {
    "filename": "main.js",
    "code": "const { CompositeDisposable } = require('redacted');\nconst semver = require('semver');\nconst UpdateManager = require('./update-manager');\nconst About = require('./about');\nconst StatusBarView = require('./components/about-status-bar');\nlet updateManager;",
    "correctAnswer": "atom/atom"
  },
  {
    "filename": "vue.rb",
    "code": "module Docs\n  class Vue < UrlScraper\n    self.name = 'Vue.js'\n    self.slug = 'vue'\n    self.type = 'vue'\n    self.links = {\n      home: 'https://vuejs.org/',",
    "correctAnswer": "freecodecamp/devdocs"
  },
  {
    "filename": "app.js",
    "code": "function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }",
    "correctAnswer": "ruanyf/react-demos"
  },
  {
    "filename": "View.hs",
    "code": "module HaskellDo.Style.View (initialize) where",
    "correctAnswer": "theam/haskell-do"
  },
  {
    "filename": "to_string.rs",
    "code": "pub struct ToString;",
    "correctAnswer": "timberio/vector"
  },
  {
    "filename": "collation.cpp",
    "code": "U_NAMESPACE_BEGIN",
    "correctAnswer": "mongodb/mongo"
  },
  {
    "filename": "MemorySessions.swift",
    "code": "public struct MemorySessions: SessionDriver {\n    public let storage: Storage",
    "correctAnswer": "vapor/vapor"
  },
  {
    "filename": "generate.hs",
    "code": "defaultOptions, defElmImports, defElmOptions,\n                               deriveBoth, generateElmModuleWith)",
    "correctAnswer": "haskell-servant/servant-elm"
  },
  {
    "filename": "Picture.hs",
    "code": "module Graphics.redacted.Picture\n  ( Picture(..)\n  , Cursor(..)\n  , Background(..)\n  , emptyPicture\n  , addToTop\n  , addToBottom",
    "correctAnswer": "jtdaugherty/vty"
  },
  {
    "filename": "install.sh",
    "code": "redacted_redacted_dir=\"$( cd \"$( dirname \"$0\" )\" && pwd )\"",
    "correctAnswer": "powerline/fonts"
  },
  {
    "filename": "paint.rs",
    "code": "pub struct PaintCommand;",
    "correctAnswer": "sharkdp/pastel"
  },
  {
    "filename": "User.java",
    "code": "public class User {",
    "correctAnswer": "android10/android-cleanarchitecture"
  },
  {
    "filename": "perf-init.js",
    "code": "const execa = require('execa');\nconst path = require('path');\nconst fs = require('fs');\nconst sander = require('sander');\nconst repoWithBranch = process.argv[2];",
    "correctAnswer": "rollup/rollup"
  },
  {
    "filename": "contextmenu.ts",
    "code": "const separator: MenuItemConstructorOptions = {type: 'separator'};",
    "correctAnswer": "vercel/hyper"
  },
  {
    "filename": "Let.hs",
    "code": "module Flite.Let(inlineLinearLet, inlineSimpleLet, liftLet) where",
    "correctAnswer": "tommythorn/Reduceron"
  },
  {
    "filename": "geohash_helper.c",
    "code": "const double DEG_TO_RAD = 0.017453292519943295769236907684886;\n/// @brief Earth's quatratic mean radius for WGS-84\nconst double EARTH_RADIUS_IN_METERS = 6372797.560856;",
    "correctAnswer": "redis/redis"
  },
  {
    "filename": "CheckStaticClass.cs",
    "code": "namespace redacted.Passes\n{\n    /// <summary>\n    /// Checks for classes that should be bound as static classes.\n    /// </summary>\n    public class CheckStaticClass : TranslationUnitPass\n    {",
    "correctAnswer": "mono/CppSharp"
  },
  {
    "filename": "RawOptions.hs",
    "code": "redacted's cmdargs modes parse command-line arguments to an\nintermediate format, RawOpts (an association list), rather than a\nfixed ADT like CliOpts. This allows the modes and flags to be reused\nmore easily by redacted commands/scripts in this and other packages.",
    "correctAnswer": "simonmichael/hledger"
  },
  {
    "filename": "NSKeyedUnarchiver.cs",
    "code": "namespace Foundation {",
    "correctAnswer": "xamarin/xamarin-macios"
  },
  {
    "filename": "path_trie.cpp",
    "code": "PathTrie::PathTrie() {\n  log_prob_b_prev = -NUM_FLT_INF;\n  log_prob_nb_prev = -NUM_FLT_INF;\n  log_prob_b_cur = -NUM_FLT_INF;\n  log_prob_nb_cur = -NUM_FLT_INF;\n  log_prob_c = -NUM_FLT_INF;\n  score = -NUM_FLT_INF;",
    "correctAnswer": "mozilla/deepspeech"
  },
  {
    "filename": "LottieView.swift",
    "code": "#if os(OSX)\nimport AppKit",
    "correctAnswer": "airbnb/lottie-ios"
  },
  {
    "filename": "CRef.hs",
    "code": "module Control.Concurrent.Classy.CRef {-# DEPRECATED \"Import Control.Concurrent.Classy.IORef instead\" #-}\n  ( -- * CRefs\n    CRef\n  , newCRef\n  , newCRefN\n  , readCRef\n  , writeCRef",
    "correctAnswer": "barrucadu/dejafu"
  },
  {
    "filename": "block_limits.rs",
    "code": "extern crate redacted_lib;\nextern crate rand;\nextern crate serde_json;",
    "correctAnswer": "blockstack/stacks-blockchain"
  },
  {
    "filename": "Setup.hs",
    "code": "main = defaultMain",
    "correctAnswer": "k-bx/owlcloud"
  },
  {
    "filename": "rebase-interactive.c",
    "code": "static const char edit_todo_list_advice[] =\nN_(\"You can fix this with 'redacted rebase --edit-todo' \"\n\"and then run 'redacted rebase --continue'.\\n\"\n\"Or you can abort the rebase with 'redacted rebase\"\n\" --abort'.\\n\");",
    "correctAnswer": "git/git"
  },
  {
    "filename": "lower_unroll.cpp",
    "code": "namespace torch {\nnamespace jit {\nnamespace fuser {\nnamespace cuda {",
    "correctAnswer": "pytorch/pytorch"
  },
  {
    "filename": "listen.rs",
    "code": "pub struct ChannelListenBuilder;\npub struct ChannelListen;",
    "correctAnswer": "valeriansaliou/sonic"
  },
  {
    "filename": "Inception.hs",
    "code": "Module      : redacted.Core.Network\nDescription : Inception style parallel convolutional network composition.\nCopyright   : (c) Huw Campbell, 2016-2017\nLicense     : BSD2\nStability   : experimental",
    "correctAnswer": "HuwCampbell/grenade"
  },
  {
    "filename": "entries.rb",
    "code": "module Docs\n  class ReactNative\n    class EntriesFilter < Docs::EntriesFilter\n      REPLACE_TYPES = {\n        'The Basics' => 'Getting Started',\n        'apis' => 'APIs',\n        'components' => 'Components'",
    "correctAnswer": "freecodecamp/devdocs"
  },
  {
    "filename": "shell.hs",
    "code": "Module      : Main\nCopyright   : Justin Ethier\nLicence     : MIT (see LICENSE in the distribution)",
    "correctAnswer": "justinethier/husk-scheme"
  },
  {
    "filename": "animation.html",
    "code": "<!DOCTYPE html>\n<script src='vendor/three.js/build/three.min.js'></script>\n<script src='../threex.minecraft.js'></script>\n<!-- include animation -->\n<script src='../threex.animation.js'></script>\n<script src='../threex.animations.js'></script>\n<script src='../threex.minecraftcharheadanim.js'></script>",
    "correctAnswer": "jeromeetienne/ar.js"
  },
  {
    "filename": "AdjacencyMap.hs",
    "code": "module Algebra.Graph.Acyclic.AdjacencyMap (\n    -- * Data structure\n    AdjacencyMap, fromAcyclic,",
    "correctAnswer": "snowleopard/alga"
  },
  {
    "filename": "SyntaxParsingContext.cpp",
    "code": "using namespace redacted;\nusing namespace redacted::syntax;",
    "correctAnswer": "apple/swift"
  },
  {
    "filename": "User32+KEYBDINPUT.cs",
    "code": "namespace redacted\n{\n    using System;\n    using System.Runtime.InteropServices;",
    "correctAnswer": "dotnet/pinvoke"
  },
  {
    "filename": "ScrollViewController.m",
    "code": "@interface ScrollViewController ()<UIPopoverPresentationControllerDelegate>\n{\n    IBOutlet UIScrollView *scrollViewDemo;\n    IBOutlet UITableView *simpleTableView;\n    IBOutlet UIScrollView *scrollViewOfTableViews;\n    IBOutlet UITableView *tableViewInsideScrollView;\n    IBOutlet UIScrollView *scrollViewInsideScrollView;\n    \n    \n    IBOutlet UITextField *topTextField;\n    IBOutlet UITextField *bottomTextField;",
    "correctAnswer": "hackiftekhar/iqkeyboardmanager"
  },
  {
    "filename": "TempFile.hs",
    "code": "module Distribution.Compat.Internal.TempFile (\n  openTempFile,\n  openBinaryTempFile,\n  openNewBinaryFile,\n  createTempDirectory,\n  ) where",
    "correctAnswer": "haskell/cabal"
  },
  {
    "filename": "jpn.rs",
    "code": "pub static STOPWORDS_JPN: &[&'static str] = &[\n    \"あそこ\",\n    \"あっ\",\n    \"あの\",\n    \"あのかた\",\n    \"あの人\",\n    \"あり\",",
    "correctAnswer": "valeriansaliou/sonic"
  },
  {
    "filename": "com_extension.c",
    "code": "ZEND_DECLARE_MODULE_GLOBALS(com_dotnet)\nstatic redacted_GINIT_FUNCTION(com_dotnet);",
    "correctAnswer": "php/php-src"
  },
  {
    "filename": "UnableToDeleteFile.php",
    "code": "declare(strict_types=1);",
    "correctAnswer": "thephpleague/flysystem"
  },
  {
    "filename": "redacted.hs",
    "code": "module redacted\n  ( redacted(..)\n  -- * Accessors\n  , (!)\n  , set\n  , modify\n  , del",
    "correctAnswer": "chrisdone/dynamic"
  },
  {
    "filename": "light_unix.go",
    "code": "func IsLightRendererSupported() bool {\n\treturn true\n}",
    "correctAnswer": "junegunn/fzf"
  },
  {
    "filename": "license.rs",
    "code": "crate::redacted::error::*,\n    askalono::{Store, TextData},\n    std::{ffi::OsStr, fs},\n};",
    "correctAnswer": "o2sh/onefetch"
  },
  {
    "filename": "q.js",
    "code": "function uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);",
    "correctAnswer": "jwagner/smartcrop.js"
  },
  {
    "filename": "main.cpp",
    "code": "int CALLBACK FontEnumForV2Console(ENUMLOGFONT* pelf, NEWTEXTMETRIC* pntm, int nFontType, LPARAM lParam);\nint AddFont(\n    ENUMLOGFONT* pelf,\n    NEWTEXTMETRIC* pntm,\n    int nFontType,\n    HDC hDC);",
    "correctAnswer": "microsoft/terminal"
  },
  {
    "filename": "jquery.pjax.js",
    "code": "function fnPjax(selector, container, options) {\n  options = optionsFor(container, options)\n  return this.on('click.pjax', selector, function(event) {\n    var opts = options\n    if (!opts.container) {\n      opts = $.extend({}, options)\n      opts.container = $(this).attr('data-pjax')",
    "correctAnswer": "defunkt/jquery-pjax"
  },
  {
    "filename": "SQLErrorLoggingClause.java",
    "code": "public class SQLErrorLoggingClause extends SQLObjectImpl {",
    "correctAnswer": "alibaba/druid"
  },
  {
    "filename": "welcome.rs",
    "code": "fn add_msg(\n    tags: &str,\n    comment: &str,\n    snippet: &str,\n    writer: &mut dyn Writer,\n    stdin: &mut std::process::ChildStdin,\n) {",
    "correctAnswer": "denisidoro/navi"
  },
  {
    "filename": "FMDatabase+FTS3.m",
    "code": "NSString *const kFTSCommandOptimize = @\"optimize\";\nNSString *const kFTSCommandRebuild  = @\"rebuild\";\nNSString *const kFTSCommandIntegrityCheck = @\"integrity-check\";\nNSString *const kFTSCommandMerge = @\"merge=%u,%u\";\nNSString *const kFTSCommandAutoMerge = @\"automerge=%u\";",
    "correctAnswer": "ccgus/fmdb"
  },
  {
    "filename": "Elevator.hs",
    "code": "******************************************************************************\n*                                  A F R P                                   *\n*                                                                            *\n*       Module:         Elevator\t\t\t\t\t     *\n*       Purpose:        Elevator simulation based on the Fran version\t     *\n*\t\t\tfrom Simon Thompson's paper \"A functional reactive   *\n*\t\t\tanimation of a lift using Fran\".\t\t     *",
    "correctAnswer": "ivanperez-keera/Yampa"
  },
  {
    "filename": "Writer.hs",
    "code": "module Writer where",
    "correctAnswer": "tweag/capability"
  },
  {
    "filename": "exp_template.cpp",
    "code": "template<typename SubType>\nstruct Exp {\n  // returns const reference of the actual type of this expression\n  inline const SubType& self(void) const {\n    return *static_cast<const SubType*>(this);\n  }\n};",
    "correctAnswer": "apache/incubator-mxnet"
  },
  {
    "filename": "aclk_stats.c",
    "code": "redacted_mutex_t aclk_stats_mutex = redacted_MUTEX_INITIALIZER;",
    "correctAnswer": "netdata/netdata"
  },
  {
    "filename": "error.rs",
    "code": "pub struct ErrorResponse {\n    /// The human-readable message given back\n    pub message: String,\n}",
    "correctAnswer": "toshi-search/Toshi"
  },
  {
    "filename": "regex_helper.rs",
    "code": "pub fn pattern_has_uppercase_char(pattern: &str) -> bool {\n    let mut parser = ParserBuilder::new().allow_invalid_utf8(true).build();",
    "correctAnswer": "sharkdp/fd"
  },
  {
    "filename": "window_swapchain_node.rs",
    "code": "render_graph::{Node, ResourceSlotInfo, ResourceSlots},\n    renderer::{RenderContext, RenderResourceId, RenderResourceType},\n};\nuse redacted_app::prelude::{EventReader, Events};\nuse redacted_ecs::{Resources, World};\nuse redacted_window::{WindowCreated, WindowId, WindowResized, Windows};\nuse std::borrow::Cow;",
    "correctAnswer": "bevyengine/bevy"
  },
  {
    "filename": "refqueue.c",
    "code": "struct mp_refqueue {\n    struct mp_filter *filter;\n    struct mp_autoconvert *conv;\n    struct mp_pin *in, *out;",
    "correctAnswer": "mpv-player/mpv"
  },
  {
    "filename": "CompletePackage.php",
    "code": "class CompletePackage extends Package implements CompletePackageInterface\n{\n    protected $repositories;\n    protected $license = array();\n    protected $keywords;\n    protected $authors;\n    protected $description;",
    "correctAnswer": "composer/composer"
  },
  {
    "filename": "CodeBlock.hs",
    "code": "module redacted.Presentation.Display.CodeBlock\n    ( prettyCodeBlock\n    ) where",
    "correctAnswer": "jaspervdj/patat"
  },
  {
    "filename": "unix_timer.rs",
    "code": "pub fn get_cpu_timer() -> Box<dyn TimerStop<Result = (Second, Second)>> {\n    Box::new(CPUTimer::start())\n}",
    "correctAnswer": "sharkdp/hyperfine"
  },
  {
    "filename": "redacted.hs",
    "code": "module Language.redacted \n  (\n    module redacted.Language\n  , module redacted.Language.Prelude \n  , module redacted.Language.Reify",
    "correctAnswer": "Copilot-Language/copilot"
  },
  {
    "filename": "lyra_exceptions.cpp",
    "code": "namespace redacted {\nnamespace lyra {",
    "correctAnswer": "facebook/yoga"
  },
  {
    "filename": "IPCSender.cpp",
    "code": "namespace {\nclass IPCSenderImpl : public IPCCommunicator, public IPCSender {\npublic:\n    IPCSenderImpl(IPCFutexPageQueue*, IPCHandler* handler);\n    ~IPCSenderImpl();\n    std::unique_ptr<IPCResult> send(IPCBuffer*) override;",
    "correctAnswer": "apache/incubator-weex"
  },
  {
    "filename": "custom-auth-async.js",
    "code": "const redacted = require('../lib/redacted');",
    "correctAnswer": "nodemailer/nodemailer"
  },
  {
    "filename": "cmd-switch-client.c",
    "code": "static enum cmd_retval\tcmd_switch_client_exec(struct cmd *,\n\t\t\t    struct cmdq_item *);",
    "correctAnswer": "tmux/tmux"
  },
  {
    "filename": "entries.rb",
    "code": "module Docs\n  class Mongoose\n    class EntriesFilter < Docs::EntriesFilter\n      def get_name\n        at_css('h1').content\n      end",
    "correctAnswer": "freecodecamp/devdocs"
  },
  {
    "filename": "SharedElementActivity.java",
    "code": "public class SharedElementActivity extends BaseDetailActivity {",
    "correctAnswer": "lgvalle/material-animations"
  },
  {
    "filename": "match_prev_cmd.zsh",
    "code": "_zsh_autosuggest_strategy_match_prev_cmd() {\n\t# Reset options to defaults and enable LOCAL_OPTIONS\n\temulate -L zsh",
    "correctAnswer": "zsh-users/zsh-autosuggestions"
  },
  {
    "filename": "version.rs",
    "code": "pub struct Version {\n    pub major: u16,\n    pub minor: u16,\n    pub patch: u16,\n}",
    "correctAnswer": "swc-project/swc"
  },
  {
    "filename": "weak_addr.rs",
    "code": "pub struct TimePing(Instant);",
    "correctAnswer": "actix/actix"
  },
  {
    "filename": "SearchBar.cs",
    "code": "namespace redacted.PlatformConfiguration.WindowsSpecific\n{\n\tusing FormsElement = Forms.SearchBar;",
    "correctAnswer": "xamarin/Xamarin.Forms"
  },
  {
    "filename": "get-default-branch.ts",
    "code": "const branchInfoRegex = /([^ ]+)\\.$/;",
    "correctAnswer": "sindresorhus/refined-github"
  },
  {
    "filename": "Session.hs",
    "code": "module Lib.Core.Session\n       ( Sessions\n       , Session (..)\n       , SessionExpiry (..)\n       , sessionExpired\n       , mkNewSession\n       ) where",
    "correctAnswer": "Holmusk/three-layer"
  },
  {
    "filename": "methodOf.js",
    "code": "function methodOf(object, args) {\n  return (path) => invoke(object, path, args)\n}",
    "correctAnswer": "lodash/lodash"
  },
  {
    "filename": "BiTree.hs",
    "code": "module redacted.Ext.Views.Internal.BiTree where",
    "correctAnswer": "ChrisPenner/rasa"
  },
  {
    "filename": "StackEnumerator.cs",
    "code": "namespace ILMerging.Tests.Helpers\n{\n    public static class StackEnumerator\n    {\n        public static StackEnumerator<T> Create<T>(params T[] initial) => new StackEnumerator<T>(initial);\n        public static StackEnumerator<T> Create<T>(IEnumerable<T> initial) => new StackEnumerator<T>(initial);\n        public static StackEnumerator<T> Create<T>(IEnumerator<T> initial) => new StackEnumerator<T>(initial);",
    "correctAnswer": "dotnet/ILMerge"
  },
  {
    "filename": "Decision.hs",
    "code": "Module                  : redacted.Decision\nCopyright               : (c) 2017-2020 redacted\nSPDX-License-Identifier : MPL-2.0\nMaintainer              : redacted <xrom.xkov@gmail.com>\nStability               : Stable\nPortability             : Portable",
    "correctAnswer": "kowainik/summoner"
  },
  {
    "filename": "Camera.hs",
    "code": "module DinoRush.Engine.Camera where",
    "correctAnswer": "jxv/dino-rush"
  },
  {
    "filename": "FBSnapshotTestCasePlatform.m",
    "code": "BOOL FBSnapshotTestCaseIs64Bit(void)\n{\n#if __LP64__\n    return YES;\n#else\n    return NO;\n#endif",
    "correctAnswer": "dzenbot/dznemptydataset"
  },
  {
    "filename": "AccountSettings.hs",
    "code": "module Handler.AccountSettings where",
    "correctAnswer": "jonschoning/espial"
  },
  {
    "filename": "page_isolation.c",
    "code": "static int set_migratetype_isolate(struct page *page, int migratetype, int isol_flags)\n{\n\tstruct zone *zone = page_zone(page);\n\tstruct page *unmovable;\n\tunsigned long flags;",
    "correctAnswer": "torvalds/linux"
  },
  {
    "filename": "transactions_api.rs",
    "code": "pub struct TxHashSetHandler {\n\tpub chain: Weak<chain::Chain>,\n}",
    "correctAnswer": "mimblewimble/grin"
  },
  {
    "filename": "format.rs",
    "code": "crate::{\n        errors::{ConfError, ProgramError},\n    },\n    serde::de::DeserializeOwned,\n    std::{\n        fs,\n        path::Path,",
    "correctAnswer": "Canop/broot"
  },
  {
    "filename": "FancyZonesDataTypes.cpp",
    "code": "namespace NonLocalizable\n{\n    const wchar_t BlankStr[] = L\"blank\";\n    const wchar_t ColumnsStr[] = L\"columns\";\n    const wchar_t CustomStr[] = L\"custom\";\n    const wchar_t FocusStr[] = L\"focus\";\n    const wchar_t GridStr[] = L\"grid\";",
    "correctAnswer": "microsoft/powertoys"
  },
  {
    "filename": "permissions.js",
    "code": "const _ = require('lodash');\nconst resolveLambdaTarget = require('../../../../../utils/resolveLambdaTarget');",
    "correctAnswer": "serverless/serverless"
  },
  {
    "filename": "phone-type-formatter.kp.js",
    "code": "function x(a,c){var b;if(null!=a.a[c])b=w(a,c,void 0);else a:{b=a.f[c];if(void 0===b.f){var d=b.i;if(d===Boolean)b.f=!1;else if(d===Number)b.f=0;else if(d===String)b.f=b.h?\"0\":\"\";else{b=new d;break a}}b=b.f}return b}function y(a,c){return a.f[c].g?null!=a.a[c]?a.a[c].length:0:null!=a.a[c]?1:0}function r(a,c,b){a.a[c]=b;a.b&&(a.b[c]=b)}function z(a,c){var b=[],d;for(d in c)0!=d&&b.push(new ga(d,c[d]));return new ea(a,b)};/*",
    "correctAnswer": "nosir/cleave.js"
  },
  {
    "filename": "aclk_rx_msgs.c",
    "code": "static inline int aclk_extract_v2_data(char *payload, char **data)\n{\n    char* ptr = strstr(payload, ACLK_V2_PAYLOAD_SEPARATOR);\n    if(!ptr)\n        return 1;\n    ptr += strlen(ACLK_V2_PAYLOAD_SEPARATOR);\n    *data = strdupz(ptr);",
    "correctAnswer": "netdata/netdata"
  },
  {
    "filename": "mod.rs",
    "code": "check_is_apub_id_valid,\n  extensions::signatures::verify_signature,\n  fetcher::get_or_fetch_and_upsert_actor,\n  ActorType,\n};\nuse activitystreams::{\n  activity::ActorAndObjectRefExt,",
    "correctAnswer": "LemmyNet/lemmy"
  },
  {
    "filename": "NSObjectPreferIsEqualRule.swift",
    "code": "public struct NSObjectPreferIsEqualRule: Rule, ConfigurationProviderRule, AutomaticTestableRule {\n    public var configuration = SeverityConfiguration(.warning)",
    "correctAnswer": "realm/swiftlint"
  },
  {
    "filename": "IncrementalIndexedBasedDecode.hs",
    "code": "main :: IO ()\nmain = withFile \"salaries.csv\" ReadMode $ \\ csvFile -> do\n    let loop !_ (Fail _ errMsg) = putStrLn errMsg >> exitFailure\n        loop acc (Many rs k)    = loop (acc + sumSalaries rs) =<< feed k\n        loop acc (Done rs)      = putStrLn $ \"Total salaries: \" ++\n                                  show (sumSalaries rs + acc)",
    "correctAnswer": "haskell-hvr/cassava"
  },
  {
    "filename": "Gather.hs",
    "code": "module redacted.Asset.Gather\n  ( gatherHashedPaths\n  , toHashedPath\n  ) where",
    "correctAnswer": "obsidiansystems/obelisk"
  },
  {
    "filename": "debug.rs",
    "code": "pub use crate::context::DebugCallbackBehavior;",
    "correctAnswer": "glium/glium"
  },
  {
    "filename": "datastore.js",
    "code": "class DataStore {\n  // Represents a persistent, database-backed storage for the robot. Extend this.\n  //\n  // Returns a new Datastore with no storage.\n  constructor (robot) {\n    this.robot = robot\n  }",
    "correctAnswer": "hubotio/hubot"
  },
  {
    "filename": "ToolStripItemRenderEventArgs.cs",
    "code": "namespace System.Windows.Forms\n{\n    public class ToolStripItemRenderEventArgs : EventArgs\n    {\n        /// <summary>\n        ///  This class represents all the information to render the ToolStrip\n        /// </summary>",
    "correctAnswer": "dotnet/winforms"
  },
  {
    "filename": "readNCharactersGivenRead4.cpp",
    "code": "int read4(char *buf);",
    "correctAnswer": "haoel/leetcode"
  },
  {
    "filename": "AFNetworkReachabilityManagerTests.m",
    "code": "@interface AFNetworkReachabilityManagerTests : AFTestCase\n@property (nonatomic, strong) AFNetworkReachabilityManager *addressReachability;\n@property (nonatomic, strong) AFNetworkReachabilityManager *domainReachability;\n@end",
    "correctAnswer": "afnetworking/afnetworking"
  },
  {
    "filename": "pic.rs",
    "code": "pub const MASTER_OFFSET: u8 = 0x20;\npub const SLAVE_OFFSET: u8 = 0x28;",
    "correctAnswer": "nebulet/nebulet"
  },
  {
    "filename": "reader.redacted",
    "code": "type Reader struct {\n\tbr   *bufio.Reader\n\trerr error  // last read error\n\tline []byte // to be consumed before more of br\n}",
    "correctAnswer": "golang/go"
  },
  {
    "filename": "Setup.hs",
    "code": "main = defaultMain",
    "correctAnswer": "quchen/articles"
  },
  {
    "filename": "Tutorial.hs",
    "code": "module Control.Eff.Extend.Tutorial where",
    "correctAnswer": "suhailshergill/extensible-effects"
  },
  {
    "filename": "Setup.hs",
    "code": "module Main (main) where",
    "correctAnswer": "mrkkrp/req"
  },
  {
    "filename": "to_csv.rs",
    "code": "pub struct ToCSV;",
    "correctAnswer": "nushell/nushell"
  },
  {
    "filename": "engine.rs",
    "code": "pub(crate) trait Engine: Send + Sync + 'static {\n    const EXT: &'static str;",
    "correctAnswer": "SergioBenitez/Rocket"
  },
  {
    "filename": "SpellbookDaoImpl.java",
    "code": "public class SpellbookDaoImpl extends DaoBaseImpl<Spellbook> implements SpellbookDao {",
    "correctAnswer": "iluwatar/java-design-patterns"
  },
  {
    "filename": "MaximumProductOfWordLengths.cpp",
    "code": "class Solution {\npublic:\n    //\n    // there are two algorithms:\n    //\n    // 1) compare two words is same or not \n    //    - we can use bit-mask to solve that.",
    "correctAnswer": "haoel/leetcode"
  },
  {
    "filename": "DESCRIPTION.en_us.html",
    "code": "<p>This is another of my old redacted used for inscriptions on stone. I created the ModernAntiqua font around 1995 like my other redacted - when I started doing the inscriptions on stone professionally. The font is based on Roman square capitals. Initially the font contained only capitals and digits and later I made the missing lowercase and symbols. Last year I started converting my typeface designs into redacted. The first was NovaCut and all the Nova family, next MedievalSharp, and here's another...</p>",
    "correctAnswer": "google/fonts"
  },
  {
    "filename": "XCTestManifests.swift",
    "code": "#if !canImport(ObjectiveC)\nimport XCTest",
    "correctAnswer": "mxcl/promisekit"
  },
  {
    "filename": "SafeCopy.hs",
    "code": "module Pos.Crypto.SafeCopy\n       ( getCopyBi\n       , putCopyBi\n       ) where",
    "correctAnswer": "input-output-hk/cardano-sl"
  },
  {
    "filename": "layertype.go",
    "code": "type LayerType int64",
    "correctAnswer": "buger/goreplay"
  },
  {
    "filename": "lib.rs",
    "code": "pub use stm32f4xx::{chip, dbg, dma1, exti, gpio, nvic, rcc, spi, syscfg, tim2, usart};",
    "correctAnswer": "tock/tock"
  },
  {
    "filename": "bitreader.go",
    "code": "type bitReader struct {\n\tin       []byte\n\toff      uint   // next byte to read is at in[off - 1]\n\tvalue    uint64 // Maybe use [16]byte, but shifting is awkward.\n\tbitsRead uint8\n}",
    "correctAnswer": "buger/goreplay"
  },
  {
    "filename": "summary.rs",
    "code": "struct FlushResponse {\n    opstamp: u64,\n}",
    "correctAnswer": "toshi-search/Toshi"
  },
  {
    "filename": "UITabBarController.m",
    "code": "@implementation UITabBarController",
    "correctAnswer": "nicklockwood/icarousel"
  },
  {
    "filename": "enumvalues_0.html",
    "code": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html><head><title></title>\n<meta http-equiv=\"Content-Type\" content=\"text/xhtml;charset=UTF-8\"/>\n<meta name=\"generator\" content=\"Doxygen 1.8.13\"/>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"search.css\"/>\n<script type=\"text/javascript\" src=\"enumvalues_0.js\"></script>\n<script type=\"text/javascript\" src=\"search.js\"></script>",
    "correctAnswer": "facebookresearch/fasttext"
  },
  {
    "filename": "Blinds.hs",
    "code": "module Poker.Game.Blinds where",
    "correctAnswer": "therewillbecode/poker-maison"
  },
  {
    "filename": "limits.rs",
    "code": "pub struct Limits<'a> {\n    limits: &'a vk::PhysicalDeviceLimits,\n}",
    "correctAnswer": "vulkano-rs/vulkano"
  },
  {
    "filename": "useClickAway.ts",
    "code": "const defaultEvents = ['mousedown', 'touchstart'];",
    "correctAnswer": "streamich/react-use"
  },
  {
    "filename": "index.js",
    "code": "function commandFactory(id) {\n    function runApi() {\n        var command = require(id);\n        var commandArgs = [].slice.call(arguments);",
    "correctAnswer": "bower/bower"
  },
  {
    "filename": "redactedSoLoader.java",
    "code": "public class redactedSoLoader {\n    protected static final String SO_MEAT_FILE = ShareConstants.SO_META_FILE;\n    protected static final String SO_PATH      = ShareConstants.SO_PATH;\n    private static final   String TAG          = \"redacted.redactedSoLoader\";",
    "correctAnswer": "tencent/tinker"
  },
  {
    "filename": "PushQueue.js",
    "code": "const PUSH_CHANNEL = 'redacted-push';\nconst DEFAULT_BATCH_SIZE = 100;",
    "correctAnswer": "parse-community/parse-server"
  },
  {
    "filename": "ngx_poll_module.c",
    "code": "static ngx_int_t ngx_poll_init(ngx_cycle_t *cycle, ngx_msec_t timer);\nstatic void ngx_poll_done(ngx_cycle_t *cycle);\nstatic ngx_int_t ngx_poll_add_event(ngx_event_t *ev, ngx_int_t event,\n    ngx_uint_t flags);\nstatic ngx_int_t ngx_poll_del_event(ngx_event_t *ev, ngx_int_t event,\n    ngx_uint_t flags);\nstatic ngx_int_t ngx_poll_process_events(ngx_cycle_t *cycle, ngx_msec_t timer,",
    "correctAnswer": "nginx/nginx"
  },
  {
    "filename": "gholder.c",
    "code": "typedef struct GPanel_ {\n  GModule module;\n  void (*insert) (GRawDataItem item, GHolder * h, datatype type, const struct GPanel_ *);\n  void (*holder_callback) (GHolder * h);\n} GPanel;",
    "correctAnswer": "allinurl/goaccess"
  },
  {
    "filename": "JSQMessagesMediaViewBubbleImageMasker.m",
    "code": "@implementation JSQMessagesMediaViewBubbleImageMasker",
    "correctAnswer": "jessesquires/jsqmessagesviewcontroller"
  },
  {
    "filename": "redacted-config.js",
    "code": "const contentfulConfig = {\n  spaceId: process.env.BENCHMARK_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.BENCHMARK_CONTENTFUL_ACCESS_TOKEN,\n  host: process.env.BENCHMARK_CONTENTFUL_HOST,\n}",
    "correctAnswer": "gatsbyjs/gatsby"
  },
  {
    "filename": "JSONPatch.java",
    "code": "public class JSONPatch {\n    public static String apply(String original, String patch) {\n        Object object\n                = apply(\n                        JSON.parse(original, Feature.OrderedField), patch);\n        return JSON.toJSONString(object);\n    }",
    "correctAnswer": "alibaba/fastjson"
  },
  {
    "filename": "FileSaver.js",
    "code": "function bom(blob, opts) {\n  if (typeof opts === \"undefined\") opts = { autoBom: false };\n  else if (typeof opts !== \"object\") {\n    console.warn(\"Deprecated: Expected third argument to be a object\");\n    opts = { autoBom: !opts };\n  }",
    "correctAnswer": "mrrio/jspdf"
  },
  {
    "filename": "Markdone.hs",
    "code": "module Markdone where",
    "correctAnswer": "mihaimaruseac/hindent"
  },
  {
    "filename": "Enums.hs",
    "code": "module redacted.IDE.SchemaDesigner.Controller.Enums where",
    "correctAnswer": "digitallyinduced/ihp"
  },
  {
    "filename": "redacted.rs",
    "code": "derives::{arg_enum, from_arg_matches, into_app, subcommand},\n    dummies,\n};",
    "correctAnswer": "clap-rs/clap"
  },
  {
    "filename": "relaxed-body.js",
    "code": "const Transform = require('stream').Transform;\nconst crypto = require('crypto');",
    "correctAnswer": "nodemailer/nodemailer"
  },
  {
    "filename": "main.c",
    "code": "typedef struct XWindow XWindow;\nstruct XWindow {\n    Display *dpy;\n    Window root;\n    Visual *vis;\n    Colormap cmap;\n    XWindowAttributes attr;",
    "correctAnswer": "vurtun/nuklear"
  },
  {
    "filename": "Window.hs",
    "code": "module redacted.Subscription.Window where",
    "correctAnswer": "dmjio/miso"
  },
  {
    "filename": "UIImage+redactedPrivate.m",
    "code": "@implementation UIImage (redactedPrivate)",
    "correctAnswer": "vicc/chameleon"
  },
  {
    "filename": "MockSequence.cs",
    "code": "namespace redacted\n{\n\t/// <summary>\n\t/// Helper class to setup a full trace between many mocks\n\t/// </summary>\n\tpublic class MockSequence\n\t{",
    "correctAnswer": "moq/moq4"
  },
  {
    "filename": "week9.html",
    "code": "<!doctype html>\n<html>\n<head>\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\n<meta name=\"description\" content=\"AI初学者，机器学习爱好者，黄海广\" />\n<meta name=\"keywords\" content=\"机器学习，深度学习，吴恩达，黄海广，个人笔记\" />\n<title>机器学习笔记week9.md</title><link href='https://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext' rel='stylesheet' type='text/css' /><style type='text/css'>html {overflow-x: initial !important;}#write, body { height: auto; }",
    "correctAnswer": "fengdu78/coursera-ml-andrewng-notes"
  },
  {
    "filename": "Client.js",
    "code": "function RegistryClient(config, logger) {\n    this._logger = logger;\n    this._config = config;",
    "correctAnswer": "bower/bower"
  },
  {
    "filename": "cppISteamUser_SteamUser018.cpp",
    "code": "extern \"C\" {\n#endif\n#define SDKVER_136\n#include \"struct_converters.h\"\n#include \"cppISteamUser_SteamUser018.h\"\nHSteamUser cppISteamUser_SteamUser018_GetHSteamUser(void *linux_side)\n{",
    "correctAnswer": "valvesoftware/proton"
  },
  {
    "filename": "symmetric_encryption.rs",
    "code": "pub trait Client<'a> {\n    fn crypt_done(&'a self, source: Option<&'a mut [u8]>, dest: &'a mut [u8]);\n}",
    "correctAnswer": "tock/tock"
  },
  {
    "filename": "cipher.go",
    "code": "const BlockSize = 8",
    "correctAnswer": "xtaci/kcptun"
  },
  {
    "filename": "LongEventProducer.java",
    "code": "public class LongEventProducer {\n    private final static Logger LOGGER = LoggerFactory.getLogger(LongEventProducer.class);\n    private final RingBuffer<LongEvent> ringBuffer;",
    "correctAnswer": "crossoverjie/jcsprout"
  },
  {
    "filename": "util.js",
    "code": "const isAttr = makeMap(\n  'accept,accept-charset,accesskey,action,align,alt,async,autocomplete,' +\n  'autofocus,autoplay,autosave,bgcolor,border,buffered,challenge,charset,' +\n  'checked,cite,class,code,codebase,color,cols,colspan,content,http-equiv,' +\n  'name,contenteditable,contextmenu,controls,coords,data,datetime,default,' +\n  'defer,dir,dirname,disabled,download,draggable,dropzone,enctype,method,for,' +\n  'form,formaction,headers,height,hidden,high,href,hreflang,http-equiv,' +",
    "correctAnswer": "vuejs/vue"
  },
  {
    "filename": "platform_logic.cpp",
    "code": "using namespace PublicComponent;\nusing namespace Platform;",
    "correctAnswer": "tencent/mars"
  },
  {
    "filename": "lib.rs",
    "code": "pub mod backend;\npub mod buffer;\npub mod layout;\npub mod style;\npub mod symbols;\npub mod terminal;\npub mod text;",
    "correctAnswer": "fdehau/tui-rs"
  },
  {
    "filename": "nsecx.go",
    "code": "func HashName(label string, ha uint8, iter uint16, salt string) string {\n\tif ha != SHA1 {\n\t\treturn \"\"\n\t}",
    "correctAnswer": "moby/moby"
  },
  {
    "filename": "gulpfile.js",
    "code": "const del = require('del');\nconst gulp = require('gulp');\nconst rename = require('gulp-rename');\nconst uglify = require('gulp-uglify');\nconst eslint = require('gulp-eslint');\nconst sourcemaps = require('gulp-sourcemaps');\nconst babelify = require('babelify');",
    "correctAnswer": "bilibili/flv.js"
  },
  {
    "filename": "Terminal.hs",
    "code": "module redacted.Render.Terminal (\n    -- * Styling\n    AnsiStyle,\n    Color(..),",
    "correctAnswer": "quchen/prettyprinter"
  },
  {
    "filename": "BonjourServerAppDelegate.m",
    "code": "static const int ddLogLevel = LOG_LEVEL_VERBOSE;",
    "correctAnswer": "robbiehanson/cocoaasyncsocket"
  },
  {
    "filename": "tokens.rs",
    "code": "pub struct Tokens<'i, R> {\n    /// # Safety:\n    ///\n    /// All `QueueableToken`s' `input_pos` must be valid character boundary indices into `input`.\n    queue: Rc<Vec<QueueableToken<R>>>,\n    input: &'i str,\n    start: usize,",
    "correctAnswer": "pest-parser/pest"
  },
  {
    "filename": "main.rs",
    "code": "extern crate cb_simulation;\nuse cb_simulation::kay::TypedID;",
    "correctAnswer": "citybound/citybound"
  },
  {
    "filename": "Row.hs",
    "code": "module redacted.Private.Decoders.Row where",
    "correctAnswer": "nikita-volkov/hasql"
  },
  {
    "filename": "windows_path.rb",
    "code": "module redacted\n  module Util\n    module WindowsPath\n      module API\n        extend Fiddle::Importer\n        dlload 'kernel32.dll'\n        extern(\"int GetLongPathNameA(char*, char*, int)\", :stdcall)",
    "correctAnswer": "hashicorp/vagrant"
  },
  {
    "filename": "NullAppender.cs",
    "code": "namespace redacted.Internal.FileAppenders\n{\n    using System;\n    using System.Security;",
    "correctAnswer": "NLog/NLog"
  },
  {
    "filename": "event_handler.rs",
    "code": "balloon::device::Balloon, VirtioDevice, DEFLATE_INDEX, INFLATE_INDEX, STATS_INDEX,\n};",
    "correctAnswer": "firecracker-microvm/firecracker"
  },
  {
    "filename": "GoogleSignInButton.web.js",
    "code": "class GoogleSignInButton extends AbstractGoogleSignInButton {",
    "correctAnswer": "jitsi/jitsi-meet"
  },
  {
    "filename": "Detach.hs",
    "code": "module Detach (detach) where",
    "correctAnswer": "reanimate/reanimate"
  },
  {
    "filename": "hash-password.ts",
    "code": "const debug = Debug('@redactedjs/authentication-local/hooks/hash-password');",
    "correctAnswer": "feathersjs/feathers"
  },
  {
    "filename": "unique_argument_names.rs",
    "code": "ast::{Directive, Field, InputValue},\n    parser::{SourcePosition, Spanning},\n    validation::{ValidatorContext, Visitor},\n    value::ScalarValue,\n};",
    "correctAnswer": "graphql-rust/juniper"
  },
  {
    "filename": "inmemory_listener.go",
    "code": "var ErrInmemoryListenerClosed = errors.New(\"InmemoryListener is already closed: use of closed network connection\")",
    "correctAnswer": "valyala/fasthttp"
  },
  {
    "filename": "CustomLoadMoreView.java",
    "code": "public final class CustomLoadMoreView extends BaseLoadMoreView {",
    "correctAnswer": "cymchad/baserecyclerviewadapterhelper"
  },
  {
    "filename": "BooleanTypeHandler.java",
    "code": "public class BooleanTypeHandler extends BaseTypeHandler<Boolean> {",
    "correctAnswer": "mybatis/mybatis-3"
  },
  {
    "filename": "FileMap.hs",
    "code": "module redacted.IO.FileMap\n    ( fileMapRead\n    , fileMapReadWith\n    ) where",
    "correctAnswer": "haskell-foundation/foundation"
  },
  {
    "filename": "Exception.hs",
    "code": "module redacted.Client.Exception (redactedException (..)) where",
    "correctAnswer": "cachix/cachix"
  },
  {
    "filename": "conn-pool.js",
    "code": "const arrayRemove = require('unordered-array-remove')\nconst debug = require('debug')('redacted:conn-pool')\nconst net = require('net') // browser exclude\nconst utp = require('utp-native') // browser exclude\nconst queueMicrotask = require('queue-microtask')",
    "correctAnswer": "webtorrent/webtorrent"
  },
  {
    "filename": "graph.rs",
    "code": "pub struct GraphDef {\n    // message fields\n    pub node: ::protobuf::RepeatedField<super::node_def::NodeDef>,\n    pub versions: ::protobuf::SingularPtrField<super::versions::VersionDef>,\n    pub version: i32,\n    pub library: ::protobuf::SingularPtrField<super::function::FunctionDefLibrary>,\n    // special fields",
    "correctAnswer": "tensorflow/rust"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where\n\nimport           redacted hiding (asyncCallback)\nimport           redacted.String\nimport           Control.Concurrent.MVar",
    "correctAnswer": "dmjio/miso"
  },
  {
    "filename": "file.rs",
    "code": "type Inode = u64;\ntype DriveId = String;",
    "correctAnswer": "harababurel/gcsf"
  },
  {
    "filename": "regexp.go",
    "code": "type routeRegexpOptions struct {\n\tstrictSlash    bool\n\tuseEncodedPath bool\n}",
    "correctAnswer": "gorilla/mux"
  },
  {
    "filename": "utils.rs",
    "code": "pub const VIEW_WIDTH: usize = 25;\npub const VIEW_HEIGHT: usize = 8;\npub const GRID_WIDTH: usize = 3;",
    "correctAnswer": "NerdyPepper/dijo"
  },
  {
    "filename": "hud.js",
    "code": "let findMode = null;",
    "correctAnswer": "philc/vimium"
  },
  {
    "filename": "factory.go",
    "code": "var dockerOnly = flag.Bool(\"docker_only\", false, \"Only report docker containers in addition to root stats\")\nvar disableRootCgroupStats = flag.Bool(\"disable_root_cgroup_stats\", false, \"Disable collecting root Cgroup stats\")",
    "correctAnswer": "google/cadvisor"
  },
  {
    "filename": "window.rs",
    "code": "pub const DEFAULT_NAME: &str = \"redacted\";",
    "correctAnswer": "alacritty/alacritty"
  },
  {
    "filename": "Vector.hs",
    "code": "module Game.redacted.Common.Vector\n  ( Vector(..), VectorI\n  , isUnit, neg, chessDistVector, euclidDistSqVector\n  , moves, movesCardinal, movesCardinalI, movesDiagonal, movesDiagonalI\n  , compassText, vicinityBounded, vicinityUnsafe\n  , vicinityCardinal, vicinityCardinalUnsafe, squareUnsafeSet\n  , shift, shiftBounded, trajectoryToPath, trajectoryToPathBounded",
    "correctAnswer": "LambdaHack/LambdaHack"
  },
  {
    "filename": "param.rs",
    "code": "pub enum Param<'a, T: Abi> {\n    Borrowed(&'a T),\n    Owned(T),\n    None,\n}",
    "correctAnswer": "microsoft/windows-rs"
  },
  {
    "filename": "webpack.config.demo.js",
    "code": "const path = require('path');\nconst CopyWebpackPlugin = require('copy-webpack-plugin');\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\nconst OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');",
    "correctAnswer": "kamranahmedse/driver.js"
  },
  {
    "filename": "clean_html.rb",
    "code": "module Docs\n  class Docker\n    class CleanHtmlFilter < Filter\n      def call\n        if root_page?\n          doc.inner_html = \"<h1>Docker Documentation</h1>\"\n          return doc",
    "correctAnswer": "freecodecamp/devdocs"
  },
  {
    "filename": "phone-type-formatter.pt.js",
    "code": "function x(a,c){var b;if(null!=a.a[c])b=w(a,c,void 0);else a:{b=a.f[c];if(void 0===b.f){var d=b.i;if(d===Boolean)b.f=!1;else if(d===Number)b.f=0;else if(d===String)b.f=b.h?\"0\":\"\";else{b=new d;break a}}b=b.f}return b}function y(a,c){return a.f[c].g?null!=a.a[c]?a.a[c].length:0:null!=a.a[c]?1:0}function r(a,c,b){a.a[c]=b;a.b&&(a.b[c]=b)}function z(a,c){var b=[],d;for(d in c)0!=d&&b.push(new ga(d,c[d]));return new ea(a,b)};/*",
    "correctAnswer": "nosir/cleave.js"
  },
  {
    "filename": "TH.hs",
    "code": "module redacted.TH\n  ( makeWorld\n  , makeWorldNoEC\n  , makeWorldAndComponents\n  , makeMapComponents\n  , makeMapComponentsFor\n  ) where",
    "correctAnswer": "jonascarpay/apecs"
  },
  {
    "filename": "toolkit.js",
    "code": "const Boom = require('@redacted/boom');\nconst Bounce = require('@redacted/bounce');\nconst Hoek = require('@redacted/hoek');",
    "correctAnswer": "hapijs/hapi"
  },
  {
    "filename": "LocalRayResult.java",
    "code": "public class LocalRayResult extends BulletBase {\n\tprivate long swigCPtr;",
    "correctAnswer": "libgdx/libgdx"
  },
  {
    "filename": "nodelocal_storage.go",
    "code": "type localFileStorage struct {\n\tcfg        roachpb.ExternalStorage_LocalFilePath // contains un-prefixed filepath -- DO NOT use for I/O ops.\n\tioConf     base.ExternalIODirConfig              // server configurations for the ExternalStorage\n\tbase       string                                // relative filepath prefixed with externalIODir, for I/O ops on this node.\n\tblobClient blobs.BlobClient                      // inter-node file sharing service\n\tsettings   *cluster.Settings                     // cluster settings for the ExternalStorage\n}",
    "correctAnswer": "cockroachdb/cockroach"
  },
  {
    "filename": "create.js",
    "code": "const redacted = require('../../redacted');\nconst fs = require('fs');",
    "correctAnswer": "automattic/mongoose"
  },
  {
    "filename": "AbstractSearchStrategy.cs",
    "code": "namespace redacted.redacted.Search\n{\n\tabstract class AbstractSearchStrategy\n\t{\n\t\tprotected readonly string[] searchTerm;\n\t\tprotected readonly Regex regex;\n\t\tprotected readonly bool fullNameSearch;",
    "correctAnswer": "icsharpcode/ILSpy"
  },
  {
    "filename": "cursor.rs",
    "code": "pub enum Cursor {\n    /// The cursor has a defined position.\n    Available(Point),",
    "correctAnswer": "hecrj/iced"
  },
  {
    "filename": "InsnsSlice.java",
    "code": "public class InsnsSlice {\n\tprivate final List<InsnNode> insnsList = new ArrayList<>();\n\tprivate final Map<InsnNode, BlockNode> insnMap = new IdentityHashMap<>();\n\tprivate boolean complete;",
    "correctAnswer": "skylot/jadx"
  },
  {
    "filename": "exp_template_op.cpp",
    "code": "template<typename SubType>\nstruct Exp{\n  // returns const reference of the actual type of this expression\n  inline const SubType& self(void) const {\n    return *static_cast<const SubType*>(this);\n  }\n};",
    "correctAnswer": "apache/incubator-mxnet"
  },
  {
    "filename": "ServerController.java",
    "code": "public class ServerController {",
    "correctAnswer": "xkcoding/spring-boot-demo"
  },
  {
    "filename": "lando.plugin.zsh",
    "code": ": ${LANDO_ZSH_SITES_DIRECTORY:=\"$HOME/Sites\"}\n: ${LANDO_ZSH_CONFIG_FILE:=.lando.yml}",
    "correctAnswer": "ohmyzsh/ohmyzsh"
  },
  {
    "filename": "filter.rs",
    "code": "pin_project! {\n    /// A stream to filter elements of another stream with a predicate.\n    ///\n    /// This `struct` is created by the [`filter`] method on [`Stream`]. See its\n    /// documentation for more.\n    ///\n    /// [`filter`]: trait.Stream.html#method.filter",
    "correctAnswer": "async-rs/async-std"
  },
  {
    "filename": "browsers.c",
    "code": "static char ***browsers_hash = NULL;",
    "correctAnswer": "allinurl/goaccess"
  },
  {
    "filename": "StorageAdapter.php",
    "code": "class StorageAdapter\n{\n    private array $data = [];",
    "correctAnswer": "domnikl/designpatternsphp"
  },
  {
    "filename": "CPS.hs",
    "code": "#if MIN_VERSION_transformers(0,5,6)\n-----------------------------------------------------------------------------\n-- |\n-- Module      :  Control.Monad.RWS.Strict\n-- Copyright   :  (c) Andy Gill 2001,\n--                (c) Oregon Graduate Institute of Science and Technology, 2001\n-- License     :  BSD-style (see the file LICENSE)",
    "correctAnswer": "haskell/mtl"
  },
  {
    "filename": "encode.go",
    "code": "const (\n\tencodingCSV  = \"csv\"\n\tencodingGob  = \"gob\"\n\tencodingJSON = \"json\"\n)",
    "correctAnswer": "tsenart/vegeta"
  },
  {
    "filename": "HeadersMethodArgumentResolver.java",
    "code": "public class HeadersMethodArgumentResolver implements SyncHandlerMethodArgumentResolver {",
    "correctAnswer": "spring-projects/spring-framework"
  },
  {
    "filename": "markdown.js",
    "code": "function Markdown(runner, options) {\n  Base.call(this, runner, options);",
    "correctAnswer": "mochajs/mocha"
  },
  {
    "filename": "caps.js",
    "code": "const iosCaps = {\n  platformName: 'iOS',\n  automationName: 'XCUITest',\n  deviceName: process.env.IOS_DEVICE_NAME || 'iPhone 6s',\n  platformVersion: process.env.IOS_PLATFORM_VERSION || '12.1',\n  app: undefined // Will be added in tests\n};",
    "correctAnswer": "appium/appium"
  },
  {
    "filename": "StackDeviceMemory.cpp",
    "code": "namespace redacted { namespace gpu {",
    "correctAnswer": "facebookresearch/faiss"
  },
  {
    "filename": "NamedTensor.cpp",
    "code": "namespace at {",
    "correctAnswer": "pytorch/pytorch"
  },
  {
    "filename": "QMUIRoundButton.java",
    "code": "public class QMUIRoundButton extends QMUIAlphaButton implements IQMUISkinDefaultAttrProvider {",
    "correctAnswer": "tencent/qmui_android"
  },
  {
    "filename": "flat_pairs.rs",
    "code": "pub struct FlatPairs<'i, R> {\n    /// # Safety\n    ///\n    /// All `QueueableToken`s' `input_pos` must be valid character boundary indices into `input`.\n    queue: Rc<Vec<QueueableToken<R>>>,\n    input: &'i str,\n    start: usize,",
    "correctAnswer": "pest-parser/pest"
  },
  {
    "filename": "hover.js",
    "code": "function makeHoverInfo(pointData, trace, pt) {\n    if(trace.hovertemplate) return;",
    "correctAnswer": "plotly/plotly.js"
  },
  {
    "filename": "case.rs",
    "code": "pub enum RenameRule {\n    /// Don't apply a default rename rule.\n    None,\n    /// Rename direct children to \"lowercase\" style.\n    LowerCase,\n    /// Rename direct children to \"UPPERCASE\" style.\n    UPPERCASE,",
    "correctAnswer": "serde-rs/serde"
  },
  {
    "filename": "File.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "facebook/folly"
  },
  {
    "filename": "TemplateMethod.hs",
    "code": "module TemplateMethod where",
    "correctAnswer": "thma/LtuPatternFactory"
  },
  {
    "filename": "vm_type.rs",
    "code": "attr::{Container, CrateName},\n    shared::{map_type_params, split_for_impl},\n};",
    "correctAnswer": "gluon-lang/gluon"
  },
  {
    "filename": "ExampleWKWebViewController.m",
    "code": "@interface ExampleWKWebViewController ()",
    "correctAnswer": "marcuswestin/webviewjavascriptbridge"
  },
  {
    "filename": "Ptr.hs",
    "code": "AutoDeriveTypeable, StandaloneDeriving #-}",
    "correctAnswer": "valderman/haste-compiler"
  },
  {
    "filename": "topic_tags_mixin.rb",
    "code": "module TopicTagsMixin\n  def self.included(klass)\n    klass.attributes :tags\n  end",
    "correctAnswer": "discourse/discourse"
  },
  {
    "filename": "block.rs",
    "code": "pub struct CheckpointBlock {\n    pub checkpoints: Vec<Checkpoint>,\n}",
    "correctAnswer": "tantivy-search/tantivy"
  },
  {
    "filename": "3.html",
    "code": "<!DOCTYPE html>\n<html>\n<head class=\"no-redacted\">\n\t<meta charset=\"utf-8\">",
    "correctAnswer": "prinzhorn/skrollr"
  },
  {
    "filename": "QueryBuilder.hs",
    "code": "Module      : redacted.QueryBuilder\nDescription : redacted SQL queries generating functions.",
    "correctAnswer": "PostgREST/postgrest"
  },
  {
    "filename": "SlideFlyoutTransition.cs",
    "code": "namespace redacted.Platform.iOS\n{\n\tpublic class SlideFlyoutTransition : IShellFlyoutTransition\n\t{\n\t\tinternal double Height { get; private set; } = -1d;\n\t\tinternal double Width { get; private set; } = -1d;",
    "correctAnswer": "xamarin/Xamarin.Forms"
  },
  {
    "filename": "fimc-lite-reg.c",
    "code": "void flite_hw_reset(struct fimc_lite *dev)\n{\n\tunsigned long end = jiffies + msecs_to_jiffies(FLITE_RESET_TIMEOUT);\n\tu32 cfg;",
    "correctAnswer": "torvalds/linux"
  },
  {
    "filename": "entity.rs",
    "code": "camera::{Camera, OrthographicProjection, PerspectiveProjection, VisibleEntities},\n    pipeline::RenderPipelines,\n    prelude::Visible,\n    render_graph::base,\n    Draw, Mesh,\n};\nuse base::MainPass;",
    "correctAnswer": "bevyengine/bevy"
  },
  {
    "filename": "ToolSelect.hs",
    "code": "module UI.ToolSelect\n  ( drawToolSelectUI\n  )\nwhere",
    "correctAnswer": "jtdaugherty/tart"
  },
  {
    "filename": "quicksort_tmpl.go",
    "code": "func maxDepth(n int) int {\n\tvar depth int\n\tfor i := n; i > 0; i >>= 1 {\n\t\tdepth++\n\t}\n\treturn depth * 2\n}",
    "correctAnswer": "cockroachdb/cockroach"
  },
  {
    "filename": "config.rs",
    "code": "pub const PAGE_SIZE: usize = 4096;\n\n/// MMIO 设备段内存区域起始地址\npub const DEVICE_START_ADDRESS: PhysicalAddress = PhysicalAddress(0x1000_0000);\n/// MMIO 设备段内存区域结束地址\npub const DEVICE_END_ADDRESS: PhysicalAddress = PhysicalAddress(0x1001_0000);",
    "correctAnswer": "chyyuu/os_kernel_lab"
  },
  {
    "filename": "dependency_source.go",
    "code": "type Source struct {\n\tFile   string\n\tLine   int\n\tCaller string\n}",
    "correctAnswer": "kataras/iris"
  },
  {
    "filename": "server.rs",
    "code": "pub struct DocsAffected {\n    /// The number of documents removed by the query\n    pub docs_affected: u64,\n}",
    "correctAnswer": "toshi-search/Toshi"
  },
  {
    "filename": "redacted.hs",
    "code": "module redacted\n  (\n  -- Game state modifiers\n    initGame\n  , timeStep\n  , shift\n  , rotate",
    "correctAnswer": "samtay/tetris"
  },
  {
    "filename": "metrics.rb",
    "code": "class Issue::Metrics < ApplicationRecord\n  belongs_to :issue",
    "correctAnswer": "gitlabhq/gitlabhq"
  },
  {
    "filename": "Error.hs",
    "code": "Module      : redacted.Error\nDescription : redacted error HTTP responses\n-}\n{-# OPTIONS_GHC -fno-warn-orphans #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE RecordWildCards   #-}",
    "correctAnswer": "PostgREST/postgrest"
  },
  {
    "filename": "JSQMessagesAvatarImage.m",
    "code": "@implementation JSQMessagesAvatarImage",
    "correctAnswer": "jessesquires/jsqmessagesviewcontroller"
  },
  {
    "filename": "ServiceDetailInfo.java",
    "code": "public class ServiceDetailInfo implements Serializable {",
    "correctAnswer": "alibaba/nacos"
  },
  {
    "filename": "path.go",
    "code": "func CleanPath(p string) string {\n\tconst stackBufSize = 128",
    "correctAnswer": "julienschmidt/httprouter"
  },
  {
    "filename": "RepoRedux.js",
    "code": "const request = (state, { repo }) => ({ ...INITIAL_STATE, fetching: true, repo })",
    "correctAnswer": "infinitered/reactotron"
  },
  {
    "filename": "Editor.hs",
    "code": "module redacted.UI.Editor (\n   -- TextPosition\n   endPosition\n  ,runEditor\n  ,runIadd\n  )\nwhere",
    "correctAnswer": "simonmichael/hledger"
  },
  {
    "filename": "HaltCompiler.php",
    "code": "class HaltCompiler extends Stmt\n{\n    /** @var string Remaining text after halt compiler statement. */\n    public $remaining;",
    "correctAnswer": "nikic/php-parser"
  },
  {
    "filename": "Settings.hs",
    "code": "module Settings where\nimport Brick\nimport Brick.Forms\nimport UI.BrickHelpers\nimport Data.Char (isDigit)\nimport States\nimport Data.Maybe",
    "correctAnswer": "Yvee1/hascard"
  },
  {
    "filename": "JsonPropertyCollectionTests.cs",
    "code": "namespace redacted.Tests.Serialization\n{\n    [TestFixture]\n    public class JsonPropertyCollectionTests : TestFixtureBase\n    {\n        [Test]\n        public void AddPropertyIncludesPrivateImplementations()",
    "correctAnswer": "JamesNK/Newtonsoft.Json"
  },
  {
    "filename": "docsearch.js",
    "code": "const SearchForm = styled.form`\n  > span {\n    width: 100%;\n  }\n`;",
    "correctAnswer": "netlify/netlify-cms"
  },
  {
    "filename": "authenticate.ts",
    "code": "const debug = Debug('@redactedjs/authentication/hooks/authenticate');",
    "correctAnswer": "feathersjs/feathers"
  },
  {
    "filename": "notification_filter.rs",
    "code": "pub struct NotificationFilter {\n    filters: GlobSet,\n    filter_count: usize,\n    ignores: GlobSet,\n    gitignore_files: Gitignore,\n    ignore_files: Ignore,\n}",
    "correctAnswer": "watchexec/watchexec"
  },
  {
    "filename": "add_client.rs",
    "code": "classes, html, Callback, Component, ComponentLink, Html, InputData, Properties, ShouldRender,\n};",
    "correctAnswer": "yewstack/yew"
  },
  {
    "filename": "linker.c",
    "code": "struct lib_loading_state {\n  char **names;\n  block *defs;\n  uint64_t ct;\n};\nstatic int load_library(redacted_state *redacted, jv lib_path,\n                        int is_data, int raw, int optional,",
    "correctAnswer": "stedolan/jq"
  },
  {
    "filename": "redactedServoMetricsPublisher.java",
    "code": "public class redactedServoMetricsPublisher extends redactedMetricsPublisher {",
    "correctAnswer": "netflix/hystrix"
  },
  {
    "filename": "typecache.go",
    "code": "var (\n\ttypeCacheMutex sync.RWMutex\n\ttypeCache      = make(map[typekey]*typeinfo)\n)",
    "correctAnswer": "ethereum/go-ethereum"
  },
  {
    "filename": "PathPiece.hs",
    "code": "module PathPiece where",
    "correctAnswer": "jonschoning/espial"
  },
  {
    "filename": "minmax.rs",
    "code": "struct MinmaxSample<T> {\n    time: Instant,\n    value: T,\n}",
    "correctAnswer": "cloudflare/quiche"
  },
  {
    "filename": "runtime_comm.cpp",
    "code": "using namespace PublicComponent;",
    "correctAnswer": "tencent/mars"
  },
  {
    "filename": "EventSubscription.js",
    "code": "class EventSubscription {\n  eventType: string;\n  key: number;\n  subscriber: EventSubscriptionVendor;",
    "correctAnswer": "necolas/react-native-web"
  },
  {
    "filename": "types.pb.go",
    "code": "var _ = proto.Marshal\nvar _ = fmt.Errorf\nvar _ = math.Inf",
    "correctAnswer": "syncthing/syncthing"
  },
  {
    "filename": "FMDatabaseAdditions.m",
    "code": "@interface FMDatabase (PrivateStuff)\n- (FMResultSet * _Nullable)executeQuery:(NSString *)sql withArgumentsInArray:(NSArray * _Nullable)arrayArgs orDictionary:(NSDictionary * _Nullable)dictionaryArgs orVAList:(va_list)args shouldBind:(BOOL)shouldBind;\n@end",
    "correctAnswer": "ccgus/fmdb"
  },
  {
    "filename": "property.rs",
    "code": "PyClassImpl, PyContext, PyObjectRef, PyRef, PyResult, PyValue, TypeProtocol,\n};\nuse crate::slots::SlotDescriptor;\nuse crate::vm::VirtualMachine;",
    "correctAnswer": "RustPython/RustPython"
  },
  {
    "filename": "redacted.go",
    "code": "type ConfigMarshalError struct {\n\terr error\n}",
    "correctAnswer": "spf13/viper"
  },
  {
    "filename": "default.go",
    "code": "func ApplyDefaultValues(struct_ interface{}) (err error) {\n\to := structs.New(struct_)",
    "correctAnswer": "yudai/gotty"
  },
  {
    "filename": "bootstrap.sh",
    "code": "cd \"$(dirname \"${BASH_SOURCE}\")\";",
    "correctAnswer": "mathiasbynens/dotfiles"
  },
  {
    "filename": "known_media_types.rs",
    "code": "macro_rules! known_media_types {\n    ($cont:ident) => ($cont! {\n        Any (is_any): \"any media type\", \"*\", \"*\",\n        Binary (is_binary): \"binary data\", \"application\", \"octet-stream\",\n        HTML (is_html): \"HTML\", \"text\", \"html\" ; \"charset\" => \"utf-8\",\n        Plain (is_plain): \"plain text\", \"text\", \"plain\" ; \"charset\" => \"utf-8\",\n        JSON (is_json): \"JSON\", \"application\", \"json\",",
    "correctAnswer": "SergioBenitez/Rocket"
  },
  {
    "filename": "WebUIREST.hs",
    "code": "module WebUIREST ( lightsSetState\n                 , lightsSetScene\n                 , lightsSwitchOnOff\n                 , lightsBreatheCycle\n                 , lightsColorLoop\n                 , lightsChangeBrightness\n                 , lightsSetColorXY",
    "correctAnswer": "blitzcode/hue-dashboard"
  },
  {
    "filename": "redacted.esm.js",
    "code": "function camelToDashCase(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString",
    "correctAnswer": "riot/riot"
  },
  {
    "filename": "XmlResourceNode.cs",
    "code": "namespace redacted.redacted.Xaml\n{\n\t[Export(typeof(IResourceNodeFactory))]\n\tsealed class XmlResourceNodeFactory : IResourceNodeFactory\n\t{\n\t\tprivate readonly static string[] xmlFileExtensions = { \".xml\", \".xsd\", \".xslt\" };",
    "correctAnswer": "icsharpcode/ILSpy"
  },
  {
    "filename": "source.js",
    "code": "const { Pattern } = require('redacted-util');\nconst common = require('../../plugins/processor/common');",
    "correctAnswer": "hexojs/hexo"
  },
  {
    "filename": "docset.rs",
    "code": "pub const TERMINATED: DocId = std::i32::MAX as u32;",
    "correctAnswer": "tantivy-search/tantivy"
  },
  {
    "filename": "use-spring.story.js",
    "code": "function Test() {\n  const [{ target, current }, setState] = React.useState({\n    target: 0,\n    current: null\n  });\n  const value = useSpring({ target, current });",
    "correctAnswer": "pomber/git-history"
  },
  {
    "filename": "index.js",
    "code": "const Linter = require('redacted-engine').linter\nconst opts = require('./options')",
    "correctAnswer": "standard/standard"
  },
  {
    "filename": "List.hs",
    "code": "module Test.Example.List where",
    "correctAnswer": "hedgehogqa/haskell-hedgehog"
  },
  {
    "filename": "parallelLimit.js",
    "code": "function parallelLimit(fns, limit, callback) {\n  let numInProgress = 0;\n  let numFinished = 0;\n  let error = null;",
    "correctAnswer": "automattic/mongoose"
  },
  {
    "filename": "slice.rs",
    "code": "pub struct BufferSlice<T: ?Sized, B> {\n    marker: PhantomData<T>,\n    resource: B,\n    offset: usize,\n    size: usize,\n}",
    "correctAnswer": "vulkano-rs/vulkano"
  },
  {
    "filename": "mod.rs",
    "code": "mod date;\nmod filetype;\nmod indicator;\nmod inode;\npub mod name;\nmod owner;\nmod permissions;",
    "correctAnswer": "Peltoche/lsd"
  },
  {
    "filename": "MalmoObservationSpacePixels.java",
    "code": "public class MalmoObservationSpacePixels extends MalmoObservationSpace {\n    int xSize;\n    int ySize;",
    "correctAnswer": "eclipse/deeplearning4j"
  },
  {
    "filename": "shadow_view.rs",
    "code": "pub struct ShadowView<T> {\n    view: T,\n    top_padding: bool,\n    left_padding: bool,\n    // TODO: invalidate if we change the padding? wrap_needs_relayout?\n}",
    "correctAnswer": "gyscos/cursive"
  },
  {
    "filename": "choose-image.js",
    "code": "const {\n  invokeCallbackHandler: invoke\n} = UniServiceJSBridge",
    "correctAnswer": "dcloudio/uni-app"
  },
  {
    "filename": "Lib.hs",
    "code": "module Lib\n    ( FileInfo(..)\n    , finalFileName\n    , listFiles\n    , fileFile\n    , fileNameSuggestions\n    , openFile",
    "correctAnswer": "2mol/pboy"
  },
  {
    "filename": "f_async_queue.c",
    "code": "struct mp_async_queue {\n    // This is just a wrapper, so the API user can talloc_free() it, instead of\n    // having to call a special unref function.\n    struct async_queue *q;\n};",
    "correctAnswer": "mpv-player/mpv"
  },
  {
    "filename": "redactedDisplay.cpp",
    "code": "using namespace redactedApp;\nusing namespace CalculationManager;\nusing namespace Platform;\nusing namespace std;",
    "correctAnswer": "microsoft/calculator"
  },
  {
    "filename": "manager.go",
    "code": "var (\n\tErrExecTimeout = errors.New(\"process execution timeout\")\n)",
    "correctAnswer": "gogits/gogs"
  },
  {
    "filename": "store.js",
    "code": "const debug = process.env.NODE_ENV !== 'production'",
    "correctAnswer": "vuejs/vuex"
  },
  {
    "filename": "SVIndefiniteAnimatedView.m",
    "code": "@interface SVIndefiniteAnimatedView ()",
    "correctAnswer": "svprogresshud/svprogresshud"
  },
  {
    "filename": "deprecated.go",
    "code": "var (\n\t// Deprecated: No longer returned.\n\tErrNil = errors.New(\"proto: Marshal called with nil\")",
    "correctAnswer": "kubernetes/kops"
  },
  {
    "filename": "rustls.rs",
    "code": "future::Future,\n    io,\n    net::SocketAddr,\n    pin::Pin,\n    task::{self, Poll},\n};",
    "correctAnswer": "shadowsocks/shadowsocks-rust"
  },
  {
    "filename": "octal.rs",
    "code": "impl f::OctalPermissions {\n    fn bits_to_octal(r: bool, w: bool, x: bool) -> u8 {\n        (r as u8) * 4 + (w as u8) * 2 + (x as u8)\n    }",
    "correctAnswer": "ogham/exa"
  },
  {
    "filename": "new_lint.rs",
    "code": "struct LintData<'a> {\n    pass: &'a str,\n    name: &'a str,\n    category: &'a str,\n    project_root: PathBuf,\n}",
    "correctAnswer": "rust-lang/rust"
  },
  {
    "filename": "AdviceWeaver.java",
    "code": "public class AdviceWeaver {",
    "correctAnswer": "alibaba/arthas"
  },
  {
    "filename": "redacted-installer.sh",
    "code": "if [ -z \"$INSTALL_PREFIX\" ] ; then\n\tINSTALL_PREFIX=\"/usr/local/bin\"\nfi",
    "correctAnswer": "nvie/gitflow"
  },
  {
    "filename": "pyth2.hs",
    "code": "pyth' (a, b) = a * a + b * b",
    "correctAnswer": "raviksharma/bartosz-basics-of-haskell"
  },
  {
    "filename": "agent.js",
    "code": "const { parse } = require('url');\nconst { CookieJar } = require('cookiejar');\nconst { CookieAccessInfo } = require('cookiejar');\nconst methods = require('methods');\nconst request = require('../..');\nconst AgentBase = require('../agent-base');",
    "correctAnswer": "visionmedia/superagent"
  },
  {
    "filename": "S3.hs",
    "code": "Module      : AWS.Lambda.Events.S3\nDescription : Data types for working with S3 events.\nCopyright   : (c) Nike, Inc., 2019\nLicense     : BSD3\nMaintainer  : nathan.fairhurst@nike.com, fernando.freire@nike.com\nStability   : stable\n-}",
    "correctAnswer": "Nike-Inc/hal"
  },
  {
    "filename": "exercise_c.js",
    "code": "const strToList = undefined;",
    "correctAnswer": "mostlyadequate/mostly-adequate-guide"
  },
  {
    "filename": "Endpoints.hs",
    "code": "module Aws.Lambda.Runtime.API.Endpoints\n  ( response\n  , invocationError\n  , runtimeInitError\n  , nextInvocation\n  , Endpoint(..)\n  ) where",
    "correctAnswer": "theam/aws-lambda-haskell-runtime"
  },
  {
    "filename": "SliderHandler.cs",
    "code": "namespace redacted.GtkSharp.Forms.Controls\n{\n\tpublic class SliderHandler : GtkControl<Gtk.EventBox, Slider, Slider.ICallback>, Slider.IHandler\n\t{\n\t\tint min;\n\t\tint max = 100;\n\t\tint tick = 1;",
    "correctAnswer": "picoe/Eto"
  },
  {
    "filename": "prepare_forwarded_port_collision_params.rb",
    "code": "module redactedPlugins\n  module ProviderVirtualBox\n    module Action\n      class PrepareForwardedPortCollisionParams\n        def initialize(app, env)\n          @app = app\n        end",
    "correctAnswer": "hashicorp/vagrant"
  },
  {
    "filename": "table.rs",
    "code": "mod util;",
    "correctAnswer": "fdehau/tui-rs"
  },
  {
    "filename": "cross-fade.js",
    "code": "let list = require('redacted').list",
    "correctAnswer": "postcss/autoprefixer"
  },
  {
    "filename": "_TestCaseFinished.cs",
    "code": "namespace redacted.v3\n{\n\t/// <summary>\n\t/// This message indicates that a test case has finished executing.\n\t/// </summary>\n\tpublic class _TestCaseFinished : _TestCaseMessage, _IExecutionSummaryMetadata\n\t{",
    "correctAnswer": "xunit/xunit"
  },
  {
    "filename": "abstractoperation.cpp",
    "code": "BulkOperations::AbstractOperation::AbstractOperation(\n    QSharedPointer<RedisClient::Connection> connection, int dbIndex,\n    OperationCallback callback, QRegExp keyPattern)\n    : m_connection(connection),\n      m_dbIndex(dbIndex),\n      m_keyPattern(keyPattern),\n      m_currentState(State::READY),",
    "correctAnswer": "uglide/redisdesktopmanager"
  },
  {
    "filename": "Pause.hs",
    "code": "module DinoRush.Scene.Pause where",
    "correctAnswer": "jxv/dino-rush"
  },
  {
    "filename": "Free.hs",
    "code": "module Core.Free\n  ( tagFreeSet, freeSet\n  , tagFreeStmt, tagFreeTerm\n  ) where",
    "correctAnswer": "amuletml/amulet"
  },
  {
    "filename": "BarTab.hs",
    "code": "main :: IO ()\nmain = startGUI defaultConfig setup",
    "correctAnswer": "HeinrichApfelmus/threepenny-gui"
  },
  {
    "filename": "ZoomInAnimator.java",
    "code": "public class ZoomInAnimator extends BaseViewAnimator {\n    @Override\n    public void prepare(View target) {\n        getAnimatorAgent().playTogether(\n                ObjectAnimator.ofFloat(target, \"scaleX\", 0.45f, 1),\n                ObjectAnimator.ofFloat(target, \"scaleY\", 0.45f, 1),\n                ObjectAnimator.ofFloat(target, \"alpha\", 0, 1)",
    "correctAnswer": "daimajia/androidviewanimations"
  },
  {
    "filename": "common_cn.js",
    "code": "class Common {",
    "correctAnswer": "geeeeeeeeek/electronic-wechat"
  },
  {
    "filename": "change_host_name.rb",
    "code": "module redactedPlugins\n  module GuestHaiku\n    module Cap\n      class ChangeHostName\n        def self.change_host_name(machine, name)\n          comm = machine.communicate",
    "correctAnswer": "hashicorp/vagrant"
  },
  {
    "filename": "Checkstyle.hs",
    "code": "module redacted.Formatter.Checkstyle\n  ( printResult,\n    formatResult,\n  )\nwhere",
    "correctAnswer": "hadolint/hadolint"
  },
  {
    "filename": "inmem_endpoint.go",
    "code": "type MetricsSummary struct {\n\tTimestamp string\n\tGauges    []GaugeValue\n\tPoints    []PointValue\n\tCounters  []SampledValue\n\tSamples   []SampledValue\n}",
    "correctAnswer": "prometheus/prometheus"
  },
  {
    "filename": "Kernel32ExtensionsFacts.cs",
    "code": "public partial class Kernel32ExtensionsFacts\n{\n    [Fact]\n    [UseCulture(\"en-US\")]\n    public void ThrowOnError_Win32ErrorCode()\n    {\n        Win32ErrorCode success = Win32ErrorCode.ERROR_SUCCESS;",
    "correctAnswer": "dotnet/pinvoke"
  },
  {
    "filename": "redactedPrewittEdgeDetectionFilter.m",
    "code": "@implementation redactedPrewittEdgeDetectionFilter",
    "correctAnswer": "bradlarson/gpuimage"
  },
  {
    "filename": "close.rs",
    "code": "pub struct CloseArgs;",
    "correctAnswer": "PistonDevelopers/piston"
  },
  {
    "filename": "BatchedBridge.js",
    "code": "const MessageQueue = require('MessageQueue');",
    "correctAnswer": "ptmt/react-native-macos"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where",
    "correctAnswer": "reflex-frp/reflex"
  },
  {
    "filename": "vm.rs",
    "code": "pub struct Ctx {\n    /// A pointer to the `ModuleInfo` of this instance.\n    pub module_info: *const ModuleInfo,",
    "correctAnswer": "wasmerio/wasmer"
  },
  {
    "filename": "main.rs",
    "code": "struct Args {\n    #[structopt(subcommand)]\n    cmd: Option<Command>,\n}",
    "correctAnswer": "launchbadge/sqlx"
  },
  {
    "filename": "prop-types.js",
    "code": "function checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (\"development\" !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.",
    "correctAnswer": "ruanyf/react-demos"
  },
  {
    "filename": "venv.zsh",
    "code": "SPACESHIP_VENV_SHOW=\"${SPACESHIP_VENV_SHOW=true}\"\nSPACESHIP_VENV_PREFIX=\"${SPACESHIP_VENV_PREFIX=\"$SPACESHIP_PROMPT_DEFAULT_PREFIX\"}\"\nSPACESHIP_VENV_SUFFIX=\"${SPACESHIP_VENV_SUFFIX=\"$SPACESHIP_PROMPT_DEFAULT_SUFFIX\"}\"\nSPACESHIP_VENV_SYMBOL=\"${SPACESHIP_VENV_SYMBOL=\"\"}\"\n# The (A) expansion flag creates an array, the '=' activates word splitting\nSPACESHIP_VENV_GENERIC_NAMES=\"${(A)=SPACESHIP_VENV_GENERIC_NAMES=virtualenv venv .venv}\"\nSPACESHIP_VENV_COLOR=\"${SPACESHIP_VENV_COLOR=\"blue\"}\"",
    "correctAnswer": "denysdovhan/spaceship-prompt"
  },
  {
    "filename": "resolveImages.js",
    "code": "function resolveImages(currentFile, $) {\n    var currentDirectory = path.dirname(currentFile);",
    "correctAnswer": "gitbookio/gitbook"
  },
  {
    "filename": "bitbucket-provider.js",
    "code": "const TOKEN_KEY = \"bitbucket-token\";",
    "correctAnswer": "pomber/git-history"
  },
  {
    "filename": "socket_iterator.rs",
    "code": "pub struct SocketIterator<'s> {\n    // product_it is a cartesian product iterator over\n    // the slices of ports and IP addresses.\n    //\n    // The IP/port order is intentionally reversed here since we want\n    // the itertools::iproduct! macro below to generate the pairs with\n    // all the IPs for one port before moving on to the next one",
    "correctAnswer": "RustScan/RustScan"
  },
  {
    "filename": "position.rs",
    "code": "pub type Position = XY<Offset>;",
    "correctAnswer": "gyscos/cursive"
  },
  {
    "filename": "Events.hs",
    "code": "module AWSLambda.Events\n  ( module AWSLambda.Events.APIGateway\n  , module AWSLambda.Events.KinesisEvent\n  , module AWSLambda.Events.MessageAttribute\n  , module AWSLambda.Events.Records\n  , module AWSLambda.Events.S3Event\n  , module AWSLambda.Events.SNSEvent",
    "correctAnswer": "seek-oss/serverless-haskell"
  },
  {
    "filename": "redacted.js",
    "code": "const { DOM_COMPONENT_INSTANCE_PROPERTY, COMPONENTS_IMPLEMENTATION_MAP, PLUGINS_SET } = globals",
    "correctAnswer": "riot/riot"
  },
  {
    "filename": "bitset.rs",
    "code": "pub struct Bitset(Vec<u64>);",
    "correctAnswer": "pingcap/talent-plan"
  },
  {
    "filename": "tales-of-majeyal.rb",
    "code": "cask \"tales-of-majeyal\" do\n  version \"1.7.2\"\n  sha256 \"e9bd5dfc297a5b201e3332cc73f3ebcf96c8b1dee8bb750082a087631fe5be10\"",
    "correctAnswer": "homebrew/homebrew-cask"
  },
  {
    "filename": "Completion.hs",
    "code": "module redacted.Console.Completion\n  ( settings\n  ) where",
    "correctAnswer": "ekmett/coda"
  },
  {
    "filename": "6.4：回文判断.c",
    "code": "bool IsPalindrome(const char *s, int n)  \n{  \n    if (s == NULL || n < 1) return false; // invalid string  \n    char *front, *back;  \n    front = s; back = s + n - 1; // set front and back to the begin and endof the string  \n    while (front < back) {  \n        if (*front != *back) return false; // not a palindrome",
    "correctAnswer": "julycoding/the-art-of-programming-by-july"
  },
  {
    "filename": "ImageTransition.swift",
    "code": "#if os(iOS) || os(tvOS)\nimport UIKit",
    "correctAnswer": "onevcat/kingfisher"
  },
  {
    "filename": "Connection.hs",
    "code": "module redacted.Private.Connection\nwhere",
    "correctAnswer": "nikita-volkov/hasql"
  },
  {
    "filename": "ConsulDataSourceFactoryBean.java",
    "code": "public class ConsulDataSourceFactoryBean implements FactoryBean<ConsulDataSource> {",
    "correctAnswer": "alibaba/spring-cloud-alibaba"
  },
  {
    "filename": "transpile-packages-with-custom-transpiler-paths.js",
    "code": "const CompileCache = require('../../src/compile-cache');\nconst fs = require('fs-extra');\nconst glob = require('glob');\nconst path = require('path');",
    "correctAnswer": "atom/atom"
  },
  {
    "filename": "element.js",
    "code": "const Element = function(combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\n    this.combinator = combinator instanceof Combinator ?\n        combinator : new Combinator(combinator);",
    "correctAnswer": "less/less.js"
  },
  {
    "filename": "get-state-path.ts",
    "code": "let _statePath = \"\";",
    "correctAnswer": "felixrieseberg/windows95"
  },
  {
    "filename": "core_environment.cpp",
    "code": "namespace WeexCore {",
    "correctAnswer": "apache/incubator-weex"
  },
  {
    "filename": "PinpointCampaignEventDimensions.hs",
    "code": "module redacted.ResourceProperties.PinpointCampaignEventDimensions where",
    "correctAnswer": "freckle/stratosphere"
  },
  {
    "filename": "Editor.hs",
    "code": "module Language.Haskell.Stylish.Editor\n    ( Change\n    , applyChanges",
    "correctAnswer": "jaspervdj/stylish-haskell"
  },
  {
    "filename": "EmptyConstraint.cs",
    "code": "namespace redacted.Framework.Constraints\n{\n    /// <summary>\n    /// EmptyConstraint tests a whether a string or collection is empty,\n    /// postponing the decision about which test is applied until the\n    /// type of the actual argument is known.\n    /// </summary>",
    "correctAnswer": "nunit/nunit"
  },
  {
    "filename": "View.hs",
    "code": "Module: redacted.PostgreSQL.Definition.View\nDescription: create and drop views\nCopyright: (c) Eitan Chatav, 2019\nMaintainer: eitan@morphism.tech\nStability: experimental",
    "correctAnswer": "morphismtech/squeal"
  },
  {
    "filename": "util.rs",
    "code": "impl Graph {\n    /// Finds the sequence of edges in an Euler path starting from u, assuming\n    /// it exists and that the graph is directed. Undefined behavior if this\n    /// precondition is violated. To extend this to undirected graphs, maintain\n    /// a visited array to skip the reverse edge.\n    pub fn euler_path(&self, u: usize) -> Vec<usize> {\n        let mut adj_iters = (0..self.num_v())",
    "correctAnswer": "EbTech/rust-algorithms"
  },
  {
    "filename": "IntMap.hs",
    "code": "module Main where",
    "correctAnswer": "ucsd-progsys/liquidhaskell"
  },
  {
    "filename": "Mythology.hs",
    "code": "module Client.Mythology\n  ( fetchHero,\n  )\nwhere",
    "correctAnswer": "morpheusgraphql/morpheus-graphql"
  },
  {
    "filename": "WindowPositionEventArgs.cs",
    "code": "namespace redacted.Windowing.Common\n{\n    /// <summary>\n    /// Defines the event data for the window position event.\n    /// </summary>\n    public readonly struct WindowPositionEventArgs\n    {",
    "correctAnswer": "opentk/opentk"
  },
  {
    "filename": "Log.swift",
    "code": "#if os(Linux)\n\timport SwiftGlibc\n\timport LinuxBridge\n#else\n\timport Darwin\n\timport os\n#endif",
    "correctAnswer": "perfectlysoft/perfect"
  },
  {
    "filename": "remove_unused_param.rs",
    "code": "algo::find_node_at_range,\n    ast::{self, ArgListOwner},\n    AstNode, SourceFile, SyntaxKind, SyntaxNode, TextRange, T,\n};\nuse test_utils::mark;\nuse SyntaxKind::WHITESPACE;",
    "correctAnswer": "rust-analyzer/rust-analyzer"
  },
  {
    "filename": "tcPDF.php",
    "code": "$pdfRendererClassFile = redacted_Settings::getPdfRendererPath() . '/tcpdf.php';\nif (file_exists($pdfRendererClassFile)) {\n    $k_path_url = redacted_Settings::getPdfRendererPath();\n    require_once $pdfRendererClassFile;\n} else {\n    throw new redacted_Writer_Exception('Unable to load PDF Rendering library');\n}",
    "correctAnswer": "phpoffice/phpexcel"
  },
  {
    "filename": "iter_tags.go",
    "code": "var _ query.Iterator = (*TagsIterator)(nil)",
    "correctAnswer": "cayleygraph/cayley"
  },
  {
    "filename": "DBusServer.hs",
    "code": "factor :: Word32 -> [Word32]\nfactor n = case factors of\n             [] -> [n]\n             _  -> factors ++ factor (n `div` (head factors))\n    where factors = take 1 $ filter (\\x -> (n `mod` x) == 0) [2 .. n-1]",
    "correctAnswer": "haskell-gi/haskell-gi"
  },
  {
    "filename": "pdfsecurity.js",
    "code": "function PDFSecurity(permissions, userPassword, ownerPassword, fileId) {\n  this.v = 1; // algorithm 1, future work can add in more recent encryption schemes\n  this.r = 2; // revision 2\n\n  // set flags for what functionalities the user can access\n  let protection = 192;\n  permissions.forEach(function(perm) {\n    if (typeof permissionOptions.perm !== \"undefined\") {\n      throw new Error(\"Invalid permission: \" + perm);\n    }\n    protection += permissionOptions[perm];\n  });\n\n  // padding is used to pad the passwords to 32 bytes, also is hashed and stored in the final PDF\n  this.padding =\n    \"\\x28\\xBF\\x4E\\x5E\\x4E\\x75\\x8A\\x41\\x64\\x00\\x4E\\x56\\xFF\\xFA\\x01\\x08\" +\n    \"\\x2E\\x2E\\x00\\xB6\\xD0\\x68\\x3E\\x80\\x2F\\x0C\\xA9\\xFE\\x64\\x53\\x69\\x7A\";\n  let paddedUserPassword = (userPassword + this.padding).substr(0, 32);\n  let paddedOwnerPassword = (ownerPassword + this.padding).substr(0, 32);\n\n  this.O = this.processOwnerPassword(paddedUserPassword, paddedOwnerPassword);\n  this.P = -((protection ^ 255) + 1);\n  this.encryptionKey = md5Bin(\n    paddedUserPassword +\n      this.O +\n      this.lsbFirstWord(this.P) +\n      this.hexToBytes(fileId)\n  ).substr(0, 5);\n  this.U = rc4(this.encryptionKey, this.padding);\n}\n\n/**\n * Breaks down a 4-byte number into its individual bytes, with the least significant bit first\n *\n * @name lsbFirstWord\n * @function\n * @param {number} data 32-bit number\n * @returns {Array}\n */\nPDFSecurity.prototype.lsbFirstWord = function(data) {\n  return String.fromCharCode(\n    (data >> 0) & 0xff,\n    (data >> 8) & 0xff,\n    (data >> 16) & 0xff,\n    (data >> 24) & 0xff\n  );\n};\n\n/**\n * Converts a byte string to a hex string\n *\n * @name toHexString\n * @function\n * @param {String} byteString Byte string\n * @returns {String}\n */\nPDFSecurity.prototype.toHexString = function(byteString) {\n  return byteString\n    .split(\"\")\n    .map(function(byte) {\n      return (\"0\" + (byte.charCodeAt(0) & 0xff).toString(16)).slice(-2);\n    })\n    .join(\"\");\n};\n\n/**\n * Converts a hex string to a byte string\n *\n * @name hexToBytes\n * @function\n * @param {String} hex Hex string\n * @returns {String}\n */\nPDFSecurity.prototype.hexToBytes = function(hex) {\n  for (var bytes = [], c = 0; c < hex.length; c += 2)\n    bytes.push(String.fromCharCode(parseInt(hex.substr(c, 2), 16)));\n  return bytes.join(\"\");\n};\n\n/**\n * Computes the 'O' field in the encryption dictionary\n *\n * @name processOwnerPassword\n * @function\n * @param {String} paddedUserPassword Byte string of padded user password\n * @param {String} paddedOwnerPassword Byte string of padded owner password\n * @returns {String}\n */\nPDFSecurity.prototype.processOwnerPassword = function(\n  paddedUserPassword,\n  paddedOwnerPassword\n) {\n  let key = md5Bin(paddedOwnerPassword).substr(0, 5);\n  return rc4(key, paddedUserPassword);\n};\n\n/**\n * Returns an encryptor function which can take in a byte string and returns the encrypted version\n *\n * @name encryptor\n * @function\n * @param {number} objectId\n * @param {number} generation Not sure what this is for, you can set it to 0\n * @returns {Function}\n * @example\n * out(\"stream\");\n * encryptor = security.encryptor(object.id, 0);\n * out(encryptor(data));\n * out(\"endstream\");\n */\nPDFSecurity.prototype.encryptor = function(objectId, generation) {\n  let key = md5Bin(\n    this.encryptionKey +\n      String.fromCharCode(\n        objectId & 0xff,\n        (objectId >> 8) & 0xff,\n        (objectId >> 16) & 0xff,\n        generation & 0xff,\n        (generation >> 8) & 0xff\n      )\n  ).substr(0, 10);\n  return function(data) {\n    return rc4(key, data);\n  };\n};\n\nexport { PDFSecurity };",
    "correctAnswer": "mrrio/jspdf"
  },
  {
    "filename": "JList.hs",
    "code": "A very modest library for join-lists, also known as conc-lists.",
    "correctAnswer": "tommythorn/Reduceron"
  },
  {
    "filename": "pty_linux.go",
    "code": "func open() (pty, tty *os.File, err error) {\n\tp, err := os.OpenFile(\"/dev/ptmx\", os.O_RDWR, 0)\n\tif err != nil {\n\t\treturn nil, nil, err\n\t}",
    "correctAnswer": "yudai/gotty"
  },
  {
    "filename": "State.php",
    "code": "class ParagonIE_Sodium_Core32_SecretStream_State\n{\n    /** @var string $key */\n    protected $key;",
    "correctAnswer": "wordpress/wordpress"
  },
  {
    "filename": "reverseInteger.cpp",
    "code": "int reverse(int x) {\n    int y=0;\n    int n;\n    while( x != 0){\n        n = x%10;\n        //Checking the over/underflow.\n        //Actually, it should be y>(INT_MAX-n)/10, but n/10 is 0, so omit it.",
    "correctAnswer": "haoel/leetcode"
  },
  {
    "filename": "TypeDefinitionRocksTests.cs",
    "code": "namespace Mono.redacted.Tests {",
    "correctAnswer": "jbevain/cecil"
  },
  {
    "filename": "internal_metrics.rs",
    "code": "config::{DataType, GlobalOptions, SourceConfig, SourceDescription},\n    metrics::Controller,\n    metrics::{capture_metrics, get_controller},\n    shutdown::ShutdownSignal,\n    Pipeline,\n};\nuse futures::{stream, SinkExt, StreamExt};",
    "correctAnswer": "timberio/vector"
  },
  {
    "filename": "transmit.js",
    "code": "const Http = require('http');",
    "correctAnswer": "hapijs/hapi"
  },
  {
    "filename": "GSPicsView.swift",
    "code": "class Picture {\n    let width = 240\n    let height = 150\n    let name:String\n    var x, y, speed:Int",
    "correctAnswer": "ipader/swiftguide"
  },
  {
    "filename": "index.js",
    "code": "class Index extends React.Component {\n  render() {\n    const { allMongodbCloudDocuments } = this.props.data",
    "correctAnswer": "gatsbyjs/gatsby"
  },
  {
    "filename": "other.js",
    "code": "const Other = () => {\n  const dispatch = useDispatch()",
    "correctAnswer": "vercel/next.js"
  },
  {
    "filename": "conpty.rs",
    "code": "CreateProcessW, InitializeProcThreadAttributeList, UpdateProcThreadAttribute,\n    PROCESS_INFORMATION, STARTUPINFOW,\n};\nuse winapi::um::winbase::{EXTENDED_STARTUPINFO_PRESENT, STARTF_USESTDHANDLES, STARTUPINFOEXW};\nuse winapi::um::wincontypes::{COORD, HPCON};",
    "correctAnswer": "alacritty/alacritty"
  },
  {
    "filename": "Inline.hs",
    "code": "module Backend.Lua.Inline\n  ( shouldInline\n  , substExpr\n  , substStmt\n  ) where",
    "correctAnswer": "amuletml/amulet"
  },
  {
    "filename": "show_role.rs",
    "code": "Client},\n            common::ui::{Status,\n                         UIWriter,\n                         UI},\n            error::{Error,\n                    Result},\n            PRODUCT,",
    "correctAnswer": "habitat-sh/habitat"
  },
  {
    "filename": "Plumbing.hs",
    "code": "redacted\n------------------------------------------------------------------------------}\n-- * Synopsis\n-- | Merge model and implementation into a single type. Not pretty.",
    "correctAnswer": "HeinrichApfelmus/reactive-banana"
  },
  {
    "filename": "AndroidLogAdapter.java",
    "code": "public class AndroidLogAdapter implements LogAdapter {",
    "correctAnswer": "orhanobut/logger"
  },
  {
    "filename": "static_arq.rs",
    "code": "pub struct StaticArq<T: ArqSpec> {\n    val: Vec<T::S>,\n    app: Vec<Option<T::F>>,\n}",
    "correctAnswer": "EbTech/rust-algorithms"
  },
  {
    "filename": "ShallowDiff.js",
    "code": "const groupObjBy = curry(\n  pipe(\n    // Call groupBy with the object as pairs, passing only the value to the key function\n    useWith(groupBy, [useWith(__, [last]), toPairs]),\n    map(fromPairs)\n  )\n)",
    "correctAnswer": "infinitered/reactotron"
  },
  {
    "filename": "Types.hs",
    "code": "Module      : Language.Scheme.Compiler.Types\nCopyright   : Justin Ethier\nLicence     : MIT (see LICENSE in the distribution)",
    "correctAnswer": "justinethier/husk-scheme"
  },
  {
    "filename": "Setup.hs",
    "code": "main = defaultMain",
    "correctAnswer": "samtay/tetris"
  },
  {
    "filename": "redactedToStringStyle.java",
    "code": "public class redactedToStringStyle extends ToStringStyle {",
    "correctAnswer": "alibaba/canal"
  },
  {
    "filename": "doc_rotationalTrajectory.hs",
    "code": "#!/usr/bin/env stack\n-- stack runghc --package redacted\n{-# LANGUAGE OverloadedStrings #-}\nmodule Main(main) where",
    "correctAnswer": "reanimate/reanimate"
  },
  {
    "filename": "doc-index-D.html",
    "code": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>swagger-petstore-0.1.0.0: Auto-generated swagger-petstore API Client (Index - D)</title><link href=\"ocean.css\" rel=\"stylesheet\" type=\"text/css\" title=\"Ocean\" /><script src=\"haddock-util.js\" type=\"text/javascript\"></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" type=\"text/javascript\"></script><script type=\"text/javascript\">//<![CDATA[\nwindow.onload = function () {pageLoad();};\n//]]>\n</script></head><body><div id=\"package-header\"><ul class=\"links\" id=\"page-menu\"><li><a href=\"index.html\">Contents</a></li><li><a href=\"doc-index.html\">Index</a></li></ul><p class=\"caption\">swagger-petstore-0.1.0.0: Auto-generated swagger-petstore API Client</p></div><div id=\"content\"><div id=\"alphabet\"><ul><li><a href=\"doc-index-A.html\">A</a></li><li><a href=\"doc-index-B.html\">B</a></li><li><a href=\"doc-index-C.html\">C</a></li><li><a href=\"doc-index-D.html\">D</a></li><li><a href=\"doc-index-E.html\">E</a></li><li><a href=\"doc-index-F.html\">F</a></li><li><a href=\"doc-index-G.html\">G</a></li><li><a href=\"doc-index-H.html\">H</a></li><li><a href=\"doc-index-I.html\">I</a></li><li><a href=\"doc-index-L.html\">L</a></li><li><a href=\"doc-index-M.html\">M</a></li><li><a href=\"doc-index-N.html\">N</a></li><li><a href=\"doc-index-O.html\">O</a></li><li><a href=\"doc-index-P.html\">P</a></li><li><a href=\"doc-index-R.html\">R</a></li><li><a href=\"doc-index-S.html\">S</a></li><li><a href=\"doc-index-T.html\">T</a></li><li><a href=\"doc-index-U.html\">U</a></li><li><a href=\"doc-index-W.html\">W</a></li><li><a href=\"doc-index-45.html\">-</a></li><li><a href=\"doc-index-95.html\">_</a></li><li><a href=\"doc-index-All.html\">All</a></li></ul></div><div id=\"index\"><p class=\"caption\">Index - D</p><table><tr><td class=\"src\">Date</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#t:Date\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:Date\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">DateTime</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#t:DateTime\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:DateTime\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">DeleteOrder</td><td class=\"module\"><a href=\"SwaggerPetstore-API-Store.html#t:DeleteOrder\">SwaggerPetstore.API.Store</a>, SwaggerPetstore.API, SwaggerPetstore</td></tr><tr><td class=\"src\">deleteOrder</td><td class=\"module\"><a href=\"SwaggerPetstore-API-Store.html#v:deleteOrder\">SwaggerPetstore.API.Store</a>, SwaggerPetstore.API, SwaggerPetstore</td></tr><tr><td class=\"src\">DeletePet</td><td class=\"module\"><a href=\"SwaggerPetstore-API-Pet.html#t:DeletePet\">SwaggerPetstore.API.Pet</a>, SwaggerPetstore.API, SwaggerPetstore</td></tr><tr><td class=\"src\">deletePet</td><td class=\"module\"><a href=\"SwaggerPetstore-API-Pet.html#v:deletePet\">SwaggerPetstore.API.Pet</a>, SwaggerPetstore.API, SwaggerPetstore</td></tr><tr><td class=\"src\">DeleteUser</td><td class=\"module\"><a href=\"SwaggerPetstore-API-User.html#t:DeleteUser\">SwaggerPetstore.API.User</a>, SwaggerPetstore.API, SwaggerPetstore</td></tr><tr><td class=\"src\">deleteUser</td><td class=\"module\"><a href=\"SwaggerPetstore-API-User.html#v:deleteUser\">SwaggerPetstore.API.User</a>, SwaggerPetstore.API, SwaggerPetstore</td></tr><tr><td class=\"src\">dispatchInitUnsafe</td><td class=\"module\"><a href=\"SwaggerPetstore-Client.html#v:dispatchInitUnsafe\">SwaggerPetstore.Client</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">dispatchLbs</td><td class=\"module\"><a href=\"SwaggerPetstore-Client.html#v:dispatchLbs\">SwaggerPetstore.Client</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">dispatchLbsUnsafe</td><td class=\"module\"><a href=\"SwaggerPetstore-Client.html#v:dispatchLbsUnsafe\">SwaggerPetstore.Client</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">dispatchMime</td><td class=\"module\"><a href=\"SwaggerPetstore-Client.html#v:dispatchMime\">SwaggerPetstore.Client</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">dispatchMime'</td><td class=\"module\"><a href=\"SwaggerPetstore-Client.html#v:dispatchMime-39-\">SwaggerPetstore.Client</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">Dog</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#t:Dog\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:Dog\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">dogBreed</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:dogBreed\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">dogBreedL</td><td class=\"module\"><a href=\"SwaggerPetstore-ModelLens.html#v:dogBreedL\">SwaggerPetstore.ModelLens</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">dogClassName</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:dogClassName\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">dogClassNameL</td><td class=\"module\"><a href=\"SwaggerPetstore-ModelLens.html#v:dogClassNameL\">SwaggerPetstore.ModelLens</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">dogColor</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:dogColor\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">dogColorL</td><td class=\"module\"><a href=\"SwaggerPetstore-ModelLens.html#v:dogColorL\">SwaggerPetstore.ModelLens</a>, SwaggerPetstore</td></tr></table></div></div><div id=\"footer\"><p>Produced by <a href=\"http://www.haskell.org/haddock/\">Haddock</a> version 2.18.1</p></div></body></html>",
    "correctAnswer": "swagger-api/swagger-codegen"
  },
  {
    "filename": "Instantiate.hs",
    "code": "Module      : redacted.Instantiate\nDescription : Instantiating generic types\nCopyright   : (c) Jon Purdy, 2016\nLicense     : MIT\nMaintainer  : redacted@gmail.com\nStability   : experimental\nPortability : GHC",
    "correctAnswer": "evincarofautumn/kitten"
  },
  {
    "filename": "EchoServer.cpp",
    "code": "int main() {\n    /* ws->getUserData returns one of these */\n    struct PerSocketData {\n        /* Fill with user data */\n    };",
    "correctAnswer": "unetworking/uwebsockets"
  },
  {
    "filename": "download.sh",
    "code": "which wget > /dev/null || { echo \"Error: wget not installed.\" ; exit 1 ; }\nwhich egrep > /dev/null || { echo \"Error: egrep not installed.\" ; exit 1 ; }",
    "correctAnswer": "papers-we-love/papers-we-love"
  },
  {
    "filename": "devtools.js",
    "code": "const target = document.getElementById('target')\nconst targetWindow = target.contentWindow",
    "correctAnswer": "vuejs/vue-devtools"
  },
  {
    "filename": "snapshot.rs",
    "code": "pub fn load_snapshot(\n    db_path: &str,\n    snapshot_path: &Path,\n    ignore_snapshot_if_db_exists: bool,\n    ignore_missing_snapshot: bool\n) -> Result<(), Error> {\n    let db_path = Path::new(db_path);",
    "correctAnswer": "meilisearch/MeiliSearch"
  },
  {
    "filename": "Err.hs",
    "code": "module GHC.Err( absentErr, error, errorWithoutStackTrace, undefined ) where\nimport GHC.CString ()\nimport GHC.Types (Char, RuntimeRep)\nimport GHC.Stack.Types\nimport GHC.Prim\nimport GHC.Integer ()   -- Make sure Integer and Natural are compiled first\nimport GHC.Natural ()   -- because GHC depends on it in a wired-in way",
    "correctAnswer": "tweag/asterius"
  },
  {
    "filename": "redactedPlatformSite.php",
    "code": "final class redactedPlatformSite extends redactedSite {",
    "correctAnswer": "phacility/phabricator"
  },
  {
    "filename": "up.php",
    "code": "<?\n//\n// PHP_KIT\n//\n// up.php = File Upload\n//\n// by: The Dark Raver",
    "correctAnswer": "danielmiessler/seclists"
  },
  {
    "filename": "slash.go",
    "code": "type (\n\t// TrailingSlashConfig defines the config for TrailingSlash middleware.\n\tTrailingSlashConfig struct {\n\t\t// Skipper defines a function to skip middleware.\n\t\tSkipper Skipper",
    "correctAnswer": "labstack/echo"
  },
  {
    "filename": "css_parser_selector.go",
    "code": "func (p *parser) parseSelectorList() (list []css_ast.ComplexSelector, ok bool) {\n\t// Parse the first selector\n\tp.eat(css_lexer.TWhitespace)\n\tsel, good := p.parseComplexSelector()\n\tif !good {\n\t\treturn\n\t}",
    "correctAnswer": "evanw/esbuild"
  },
  {
    "filename": "TextureBrushHandler.cs",
    "code": "namespace redacted.GtkSharp.Drawing\n{\n\t/// <summary>\n\t/// Handler for the <see cref=\"TextureBrush\"/>\n\t/// </summary>\n\t/// <copyright>(c) 2012-2014 by Curtis Wensley</copyright>\n\t/// <license type=\"BSD-3\">See LICENSE for full terms</license>",
    "correctAnswer": "picoe/Eto"
  },
  {
    "filename": "Types.hs",
    "code": "module redacted.Enclave.Types where",
    "correctAnswer": "ConsenSys/constellation"
  },
  {
    "filename": "redacted",
    "code": "class Clipboard extends Emitter {\n    /**\n     * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n     * @param {Object} options\n     */\n    constructor(trigger, options) {\n        super();",
    "correctAnswer": "zenorocha/clipboard.js"
  },
  {
    "filename": "validation.js",
    "code": "const Boom = require('@redacted/boom');\nconst Hoek = require('@redacted/hoek');\nconst Validate = require('@redacted/validate');",
    "correctAnswer": "hapijs/hapi"
  },
  {
    "filename": "web-preset.ts",
    "code": "function isOnline(): boolean {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator.onLine !== 'undefined'\n  ) {\n    return navigator.onLine\n  }",
    "correctAnswer": "vercel/swr"
  },
  {
    "filename": "InstrumentationAttribute.Partial.cs",
    "code": "namespace Android.App {",
    "correctAnswer": "xamarin/xamarin-android"
  },
  {
    "filename": "UnicodeSyntax.hs",
    "code": "module Language.Haskell.Stylish.Step.UnicodeSyntax\n    ( step\n    ) where",
    "correctAnswer": "jaspervdj/stylish-haskell"
  },
  {
    "filename": "Hercules.hs",
    "code": "A module to handle the different queries we might want to make to Hercules's\ndatabase\n-}\nmodule Hercules.Query.Hercules\n  ( userIdQuery\n  , userGitHubIdQuery\n  , insertUser",
    "correctAnswer": "hercules-ci/legacy-old-hercules"
  },
  {
    "filename": "loader.js",
    "code": "const { parseVueFrontmatter: { parseStrippedFrontmatter }} = require('@redacted/shared-utils')\nconst { frontmatterEmitter } = require('@redacted/markdown-loader')\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })",
    "correctAnswer": "vuejs/vuepress"
  },
  {
    "filename": "getEnvironment.js",
    "code": "const isElectron = require('is-electron');",
    "correctAnswer": "naptha/tesseract.js"
  },
  {
    "filename": "cereal.hs",
    "code": "data Val = A [Val] | B [(Val, Val)] | C\n  deriving (Generic, Show)",
    "correctAnswer": "sdiehl/wiwinwlh"
  },
  {
    "filename": "Name.hs",
    "code": "#include \"HsNetDef.h\"",
    "correctAnswer": "haskell/network"
  },
  {
    "filename": "LoggingTracer.js",
    "code": "function describeValue(realm: Realm, v: Value): string {\n  if (v instanceof NumberValue || v instanceof BooleanValue) return v.value.toString();\n  if (v instanceof UndefinedValue) return \"undefined\";\n  if (v instanceof NullValue) return \"null\";\n  if (v instanceof StringValue) return JSON.stringify(v.value);\n  if (v instanceof FunctionValue) return To.ToStringPartial(realm, Get(realm, v, \"name\")) || \"(anonymous function)\";\n  if (v instanceof ObjectValue) return \"(some object)\";",
    "correctAnswer": "facebook/prepack"
  },
  {
    "filename": "RequestInterceptor.swift",
    "code": "public protocol RequestAdapter {\n    /// Inspects and adapts the specified `URLRequest` in some manner and calls the completion handler with the Result.\n    ///\n    /// - Parameters:\n    ///   - urlRequest: The `URLRequest` to adapt.\n    ///   - session:    The `Session` that will execute the `URLRequest`.\n    ///   - completion: The completion handler that must be called when adaptation is complete.",
    "correctAnswer": "alamofire/alamofire"
  },
  {
    "filename": "KubernetesPod.java",
    "code": "public class KubernetesPod extends KubernetesResource<Pod> {",
    "correctAnswer": "apache/flink"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where\n\nimport qualified Control.Error.Util         as Err\nimport qualified Data.ByteString.Lazy       as BSL\nimport qualified Data.ByteString.Lazy.Char8 as BS8\nimport qualified Data.Text                  as T\nimport qualified Data.Text.IO               as TIO\nimport qualified Network.URI\nimport qualified Network.Wreq               as Wreq",
    "correctAnswer": "passy/givegif"
  },
  {
    "filename": "variable_service.go",
    "code": "var _ redacted.VariableService = &VariableService{}",
    "correctAnswer": "influxdb/influxdb"
  },
  {
    "filename": "JobAlarmer.java",
    "code": "public class JobAlarmer implements ApplicationContextAware, InitializingBean {\n    private static Logger logger = LoggerFactory.getLogger(JobAlarmer.class);",
    "correctAnswer": "xuxueli/xxl-job"
  },
  {
    "filename": "all.js",
    "code": "const kebabCase = require('kebab-case');\nconst rules = require('./rules');",
    "correctAnswer": "you-dont-need/you-dont-need-lodash-underscore"
  },
  {
    "filename": "Example.hs",
    "code": "module System.redacted.Example where",
    "correctAnswer": "taffybar/taffybar"
  },
  {
    "filename": "diff.rs",
    "code": "error::Result,\n    hash,\n    sync::{self, CommitId},\n    AsyncNotification, FileDiff, CWD,\n};\nuse crossbeam_channel::Sender;\nuse std::{",
    "correctAnswer": "extrawurst/gitui"
  },
  {
    "filename": "Process.hs",
    "code": "module redacted.System.Linux.Process\n   ( ProcessID(..)\n   , ThreadID(..)\n   , UserID(..)\n   , GroupID(..)\n   , SessionID(..)\n   , sysExit",
    "correctAnswer": "haskus/haskus-system"
  },
  {
    "filename": "search.js",
    "code": "const user = require('../user');\nconst db = require('../database');",
    "correctAnswer": "nodebb/nodebb"
  },
  {
    "filename": "index.js",
    "code": "function list(ids) {\n  return '<ul>' + ids.map(function(id){\n    return '<li>' + id + '</li>';\n  }).join('') + '</ul>';\n}",
    "correctAnswer": "expressjs/express"
  },
  {
    "filename": "tun_darwin.rs",
    "code": "pub fn errno() -> i32 {\n    unsafe { *__error() }\n}",
    "correctAnswer": "cloudflare/boringtun"
  },
  {
    "filename": "YYTextAttachmentExample.m",
    "code": "@interface YYTextAttachmentExample ()<UIGestureRecognizerDelegate>\n@property (nonatomic, strong) YYLabel *label;\n@end",
    "correctAnswer": "ibireme/yykit"
  },
  {
    "filename": "fuzzy.rs",
    "code": "pub struct FuzzyQuery {\n    fuzzy: KeyValue<String, FuzzyTerm>,\n}",
    "correctAnswer": "toshi-search/Toshi"
  },
  {
    "filename": "StdinContext.ts",
    "code": "const StdinContext = createContext<Props>({\n\tstdin: undefined,\n\tsetRawMode: () => {},\n\tisRawModeSupported: false,\n\tinternal_exitOnCtrlC: true\n});",
    "correctAnswer": "vadimdemedes/ink"
  },
  {
    "filename": "AlgorithmsSpec.swift",
    "code": "class AlgorithmsSpec: QuickSpec {\n\toverride func spec() {\n\t\ttypealias Graph = [String: Set<String>]",
    "correctAnswer": "carthage/carthage"
  },
  {
    "filename": "pfex.rs",
    "code": "pub extern fn pfex_acquire(lock_offset: u32, vmctx: &VmCtx) {\n    let user_data = &vmctx.data().user_data;\n    let lock_ptr: *const Atomic<u32> = vmctx.fastpath_offset_ptr(lock_offset);\n    let lock = unsafe { &*lock_ptr };",
    "correctAnswer": "nebulet/nebulet"
  },
  {
    "filename": "instance_actors_controller.rb",
    "code": "class InstanceActorsController < ApplicationController\n  include AccountControllerConcern",
    "correctAnswer": "tootsuite/mastodon"
  },
  {
    "filename": "GoToTokenCommand.cs",
    "code": "namespace redacted.redacted.Commands\n{\n\t[ExportContextMenuEntry(Header = nameof(Resources.GoToToken), Order = 10)]\n\tclass GoToTokenCommand : IContextMenuEntry\n\t{\n\t\tpublic void Execute(TextViewContext context)\n\t\t{",
    "correctAnswer": "icsharpcode/ILSpy"
  },
  {
    "filename": "body.rs",
    "code": "pub struct Body {\n    inner: Inner,\n}",
    "correctAnswer": "seanmonstar/reqwest"
  },
  {
    "filename": "type_map.go",
    "code": "func typelinks1() [][]unsafe.Pointer",
    "correctAnswer": "hashicorp/vault"
  },
  {
    "filename": "Internal.hs",
    "code": "Module      : AWS.Lambda.Internal\nDescription : Internal redacted helper methods.\nCopyright   : (c) Nike, Inc., 2018\nLicense     : BSD3\nMaintainer  : nathan.fairhurst@nike.com, fernando.freire@nike.com\nStability   : unstable\n-}",
    "correctAnswer": "Nike-Inc/hal"
  },
  {
    "filename": "app.go",
    "code": "func main(){\n    fmt.Printf(\"Hello World!\\n\");\n}",
    "correctAnswer": "yeasy/docker_practice"
  },
  {
    "filename": "UI.hs",
    "code": "module UI where",
    "correctAnswer": "2mol/pboy"
  },
  {
    "filename": "Uniq.hs",
    "code": "#ifdef USE_redacted_OPTIMIZER\n{-# OPTIONS_GHC -fplugin=redacted.Optimizer #-}\n#endif\n-- | This module provides a variation of 'Dynamic' values that uses cheap\n-- pointer equality checks to reduce the amount of signal propagation needed.\nmodule redacted.Dynamic.Uniq\n  ( UniqDynamic",
    "correctAnswer": "reflex-frp/reflex"
  },
  {
    "filename": "or_else.rs",
    "code": "pub struct OrElse<T, F> {\n    pub(super) filter: T,\n    pub(super) callback: F,\n}",
    "correctAnswer": "seanmonstar/warp"
  },
  {
    "filename": "Enum.hs",
    "code": "module GraphQL.Internal.API.Enum\n  ( GraphQLEnum(..)\n  ) where",
    "correctAnswer": "haskell-graphql/graphql-api"
  },
  {
    "filename": "yaml2json.js",
    "code": "const fs = require('fs');\nconst yaml = require('yaml');",
    "correctAnswer": "oai/openapi-specification"
  },
  {
    "filename": "createBreakpoint.ts",
    "code": "const createBreakpoint = (\n  breakpoints: { [name: string]: number } = { laptopL: 1440, laptop: 1024, tablet: 768 }\n) => () => {\n  const [screen, setScreen] = useState(0);",
    "correctAnswer": "streamich/react-use"
  },
  {
    "filename": "server.rs",
    "code": "pub mod pb {\n    redacted::include_proto!(\"/grpc.examples.echo\");\n}",
    "correctAnswer": "hyperium/tonic"
  },
  {
    "filename": "StackMachineTutorial.hs",
    "code": "module Data.Text.Prettyprint.Doc.Render.Tutorials.StackMachineTutorial (\n    module redacted.Render.Tutorials.StackMachineTutorial\n) where",
    "correctAnswer": "quchen/prettyprinter"
  },
  {
    "filename": "EventHandler.hs",
    "code": "Module      :  Neovim.RPC.EventHandler\nDescription :  Event handling loop\nCopyright   :  (c) Sebastian Witte\nLicense     :  Apache-2.0",
    "correctAnswer": "neovimhaskell/nvim-hs"
  },
  {
    "filename": "HTTP.hs",
    "code": "module Platform.HTTP\n      ( main\n      ) where",
    "correctAnswer": "eckyputrady/haskell-scotty-realworld-example-app"
  },
  {
    "filename": "ImageModifier.swift",
    "code": "public protocol ImageModifier {\n    /// Modify an input `Image`.\n    ///\n    /// - parameter image:   Image which will be modified by `self`\n    ///\n    /// - returns: The modified image.\n    ///",
    "correctAnswer": "onevcat/kingfisher"
  },
  {
    "filename": "vf_mpdecimate.c",
    "code": "typedef struct DecimateContext {\n    const AVClass *class;\n    int lo, hi;                    ///< lower and higher threshold number of differences\n                                   ///< values for 8x8 blocks",
    "correctAnswer": "ffmpeg/ffmpeg"
  },
  {
    "filename": "builtin-models.js",
    "code": "const assert = require('assert');",
    "correctAnswer": "strongloop/loopback"
  },
  {
    "filename": "Box.swift",
    "code": "enum Sealant<R> {\n    case pending(Handlers<R>)\n    case resolved(R)\n}",
    "correctAnswer": "mxcl/promisekit"
  },
  {
    "filename": "defaultBackOff.js",
    "code": "function randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {",
    "correctAnswer": "pouchdb/pouchdb"
  },
  {
    "filename": "index.js",
    "code": "function Glyph ({\n\tcssStyles,\n\tclassName,\n\tcolor,\n\tcomponent: Component,\n\tname,\n\tsize,",
    "correctAnswer": "keystonejs/keystone-classic"
  },
  {
    "filename": "JsonConverterAttribute.cs",
    "code": "namespace System.Text.Json.Serialization\n{\n    /// <summary>\n    /// When placed on a property, field, or type, specifies the converter type to use.\n    /// </summary>\n    /// <remarks>\n    /// The specified converter type must derive from <see cref=\"JsonConverter\"/>.",
    "correctAnswer": "dotnet/runtime"
  },
  {
    "filename": "UnableToMoveFile.php",
    "code": "declare(strict_types=1);",
    "correctAnswer": "thephpleague/flysystem"
  },
  {
    "filename": "AudioOutputPulse.cpp",
    "code": "using namespace tgvoip;\nusing namespace tgvoip::audio;",
    "correctAnswer": "drklo/telegram"
  },
  {
    "filename": "vpainter.cpp",
    "code": "V_BEGIN_NAMESPACE",
    "correctAnswer": "drklo/telegram"
  },
  {
    "filename": "webpack.config.js",
    "code": "const path = require('path');",
    "correctAnswer": "microsoft/monaco-editor"
  },
  {
    "filename": "Cast.java",
    "code": "public class Cast extends UnaryScalarFunction {",
    "correctAnswer": "elastic/elasticsearch"
  },
  {
    "filename": "not-of-type.js",
    "code": "function makeNewMessage(types) {\n  return types.reduce((p, c, i, arr) => {\n    if(i === arr.length - 1 && arr.length > 1) {\n      return p + \"or \" + c\n    } else if(arr[i+1] && arr.length > 2) {\n      return p + c + \", \"\n    } else if(arr[i+1]) {",
    "correctAnswer": "swagger-api/swagger-ui"
  },
  {
    "filename": "build-ttf.sh",
    "code": "TTFAH=\"$HOME/ttfautohint-build/local/bin/ttfautohint\"",
    "correctAnswer": "source-foundry/hack"
  },
  {
    "filename": "SoftmaxBp.java",
    "code": "public class SoftmaxBp extends DynamicCustomOp {",
    "correctAnswer": "eclipse/deeplearning4j"
  },
  {
    "filename": "ngx_http_auth_request_module.c",
    "code": "typedef struct {\n    ngx_str_t                 uri;\n    ngx_array_t              *vars;\n} ngx_http_auth_request_conf_t;",
    "correctAnswer": "nginx/nginx"
  },
  {
    "filename": "IPC.hs",
    "code": "module redacted.IPC\n    ( CommandMap\n    , bindCommands\n    -- , sendMessage\n    ) where",
    "correctAnswer": "k0ral/hbro"
  },
  {
    "filename": "lib.rs",
    "code": "pub(crate) mod input;\npub mod squeezer;",
    "correctAnswer": "sharkdp/hexyl"
  },
  {
    "filename": "update.go",
    "code": "type secretUpdate struct {\n\tData            *string `json:\"data\"`\n\tPullRequest     *bool   `json:\"pull_request\"`\n\tPullRequestPush *bool   `json:\"pull_request_push\"`\n}",
    "correctAnswer": "drone/drone"
  },
  {
    "filename": "index.js",
    "code": "function GlyphField ({\n\tchildren,\n\tglyph,\n\tglyphColor,\n\tglyphSize,\n\tposition,\n\t...props",
    "correctAnswer": "keystonejs/keystone-classic"
  },
  {
    "filename": "clipboard-action.js",
    "code": "class ClipboardAction {\n    /**\n     * @param {Object} options\n     */\n    constructor(options) {\n        this.resolveOptions(options);\n        this.initSelection();",
    "correctAnswer": "zenorocha/clipboard.js"
  },
  {
    "filename": "tzm-latn.js",
    "code": "const locale = {\n  name: 'tzm-latn',\n  weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n  months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n  weekStart: 6,\n  weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n  monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),",
    "correctAnswer": "iamkun/dayjs"
  },
  {
    "filename": "LogFileCompressorAppDelegate.m",
    "code": "static const DDLogLevel ddLogLevel = DDLogLevelVerbose;",
    "correctAnswer": "cocoalumberjack/cocoalumberjack"
  },
  {
    "filename": "directiveMap.js",
    "code": "const noSupport = {\n  type: 4,\n  check (k, v, errors) {\n    errors(`不支持此指令: ${k}=\"${v}\"`)\n    return false\n  }\n}",
    "correctAnswer": "meituan-dianping/mpvue"
  },
  {
    "filename": "Lesson04a.hs",
    "code": "module TwinkleBear.Lesson04a (main) where",
    "correctAnswer": "haskell-game/sdl2"
  },
  {
    "filename": "http.go",
    "code": "func redactedHTTPDialer(proxy string) redacted.DialFunc {\n\treturn redactedHTTPDialerTimeout(proxy, 0)\n}",
    "correctAnswer": "valyala/fasthttp"
  },
  {
    "filename": "Pacman.hs",
    "code": "module redacted.Pacman\n  ( -- * Calling Pacman\n    pacman\n  , pacmanOutput, pacmanSuccess, pacmanLines\n    -- * Paths\n  , lockFile\n  , pacmanConfFile",
    "correctAnswer": "fosskers/aura"
  },
  {
    "filename": "Heater.hs",
    "code": "module Main where",
    "correctAnswer": "Copilot-Language/copilot"
  },
  {
    "filename": "redactedTree.java",
    "code": "public class redactedTree extends Timber.Tree {\n  @Override\n  protected void log(int priority, String tag, String message, Throwable t) {",
    "correctAnswer": "facebookarchive/stetho"
  },
  {
    "filename": "FileUtils.java",
    "code": "public final class FileUtils {\n    private FileUtils() {\n    }",
    "correctAnswer": "tencent/tinker"
  },
  {
    "filename": "DummyGLContext.cs",
    "code": "namespace OpenTK.Platform.Dummy\n{\n    /// <summary>\n    /// An empty IGraphicsContext implementation to be used inside the Visual Studio designer.\n    /// This class supports OpenTK, and is not intended for use by OpenTK programs.\n    /// </summary>\n    internal sealed class DummyGLContext : DesktopGraphicsContext",
    "correctAnswer": "xamarin/xamarin-macios"
  },
  {
    "filename": "Class.hs",
    "code": "module Control.Monad.STM.Class\n  ( MonadSTM(..)\n  , retry\n  , check\n  , orElse\n  , throwSTM\n  , catchSTM",
    "correctAnswer": "barrucadu/dejafu"
  },
  {
    "filename": "AwaitableFactory`1.cs",
    "code": "namespace redacted.Async\n{\n\t/// <summary>\n\t///   Abstract base class that facilitates type-safe implementation of <see cref=\"IAwaitableFactory\"/>\n\t///   for awaitables that do not produce a result when awaited.\n\t/// </summary>\n\tinternal abstract class AwaitableFactory<TAwaitable> : IAwaitableFactory",
    "correctAnswer": "moq/moq4"
  },
  {
    "filename": "cli.js",
    "code": "const updateNotifier = require('update-notifier')",
    "correctAnswer": "vuejs/vuepress"
  },
  {
    "filename": "server.rs",
    "code": "pub mod pb {\n    redacted::include_proto!(\"grpc.examples.echo\");\n}",
    "correctAnswer": "hyperium/tonic"
  },
  {
    "filename": "renderer_yuv444p10le.c",
    "code": "static GLboolean yuv444p10le_use(IJK_GLES2_Renderer *renderer)\n{\n    ALOGI(\"use render yuv420p10le\\n\");\n    glPixelStorei(GL_UNPACK_ALIGNMENT, 1);",
    "correctAnswer": "bilibili/ijkplayer"
  },
  {
    "filename": "ToFlowablePerf.java",
    "code": "public class ToFlowablePerf {\n    @Param({ \"1\", \"1000\", \"1000000\" })\n    public int times;",
    "correctAnswer": "reactivex/rxjava"
  },
  {
    "filename": "CustomLoadingIndicator.js",
    "code": "const LoadingIndicator = props => {\n  return (\n    <Tooltip content={'Custom Loader'}>\n      <Spinner {...props} delay={0} />\n    </Tooltip>\n  );\n};",
    "correctAnswer": "jedwatson/react-select"
  },
  {
    "filename": "client.go",
    "code": "var addr = flag.String(\"addr\", \"localhost:8080\", \"http service address\")",
    "correctAnswer": "gorilla/websocket"
  },
  {
    "filename": "build-woff2.sh",
    "code": "BUILD=\"$HOME\"\nINST=\"$HOME/woff2\"",
    "correctAnswer": "source-foundry/hack"
  },
  {
    "filename": "Type.hs",
    "code": "Module: redacted.PostgreSQL.Type\nDescription: types\nCopyright: (c) Eitan Chatav, 2010\nMaintainer: eitan@morphism.tech\nStability: experimental",
    "correctAnswer": "morphismtech/squeal"
  },
  {
    "filename": "drive_facade.rs",
    "code": "const PAGE_SIZE: i32 = 1000;\ntype DriveId = String;",
    "correctAnswer": "harababurel/gcsf"
  },
  {
    "filename": "Issue0047Tests.cs",
    "code": "namespace redacted.Tests.Issues\n{\n    [TestFixture]\n    public class Issue0047Tests : TestFixtureBase\n    {\n        [DataContract]\n        public class HttpBrokeredMessage",
    "correctAnswer": "JamesNK/Newtonsoft.Json.Schema"
  },
  {
    "filename": "MutabilityTests.swift",
    "code": "class MutabilityTests: XCTestCase {",
    "correctAnswer": "swiftyjson/swiftyjson"
  },
  {
    "filename": "system.cpp",
    "code": "QString getOSRelease()\n{\n    QString release;\n    struct utsname un;\n    if (uname(&un) != -1) {\n        release = QString::fromLatin1(un.release);\n    }",
    "correctAnswer": "ariya/phantomjs"
  },
  {
    "filename": "InterProcessLock.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "tencent/mmkv"
  },
  {
    "filename": "SqlRowSetResultSetExtractor.java",
    "code": "public class SqlRowSetResultSetExtractor implements ResultSetExtractor<SqlRowSet> {",
    "correctAnswer": "spring-projects/spring-framework"
  },
  {
    "filename": "CustomTupleable.hs",
    "code": "data Blog = Blog {\n  title :: Text,\n  comments :: S.Set Comment\n  } deriving (Show)",
    "correctAnswer": "agentm/project-m36"
  },
  {
    "filename": "grid.rs",
    "code": "pub struct Grid<X, Y, I> {\n    /// Builder parameters that are common to all `Widget`s.\n    #[redacted(common_builder)]\n    pub common: CommonBuilder,\n    /// Unique styling parameters for the `Grid` widget.\n    pub style: Style,\n    /// The minimum visible bound along the *x* axis.",
    "correctAnswer": "PistonDevelopers/conrod"
  },
  {
    "filename": "Time.hs",
    "code": "module Data.Music.MusicXml.Time\n  ( Duration ,\n    NoteType ,\n    Divs (..),\n    NoteVal (..),\n    NoteSize (..),\n    Beat (..),",
    "correctAnswer": "music-suite/music-suite"
  },
  {
    "filename": "serialization.rs",
    "code": "pub struct SeSeed {\n    pub node_to_id: NodeToId,\n}",
    "correctAnswer": "gluon-lang/gluon"
  },
  {
    "filename": "mod.rs",
    "code": "pub enum LogLevel {\n    Debug,\n    Info,\n    Warning,\n    Error,\n}",
    "correctAnswer": "citybound/citybound"
  },
  {
    "filename": "Completer.hs",
    "code": "module Options.Applicative.Builder.Completer\n  ( Completer\n  , mkCompleter\n  , listIOCompleter\n  , listCompleter\n  , bashCompleter\n  ) where",
    "correctAnswer": "pcapriotti/optparse-applicative"
  },
  {
    "filename": "redacted_menu.c",
    "code": "NK_API void\nnk_menubar_begin(struct nk_context *ctx)\n{\n    struct nk_panel *layout;\n    NK_ASSERT(ctx);\n    NK_ASSERT(ctx->current);\n    NK_ASSERT(ctx->current->layout);",
    "correctAnswer": "vurtun/nuklear"
  },
  {
    "filename": "CSharpConverter.cs",
    "code": "namespace redacted.redacted.VB\n{\n    internal static class CSharpConverter\n    {\n        public static async Task<SyntaxNode> ConvertCompilationTreeAsync(Document document,\n            VisualBasicCompilation vbViewOfCsSymbols, Project vbReferenceProject, OptionalOperations optionalOperations, CancellationToken cancellationToken)\n        {",
    "correctAnswer": "icsharpcode/CodeConverter"
  },
  {
    "filename": "middleware.js",
    "code": "const async = require('async')",
    "correctAnswer": "hubotio/hubot"
  },
  {
    "filename": "phone-type-formatter.sy.js",
    "code": "function x(a,c){var b;if(null!=a.a[c])b=w(a,c,void 0);else a:{b=a.f[c];if(void 0===b.f){var d=b.i;if(d===Boolean)b.f=!1;else if(d===Number)b.f=0;else if(d===String)b.f=b.h?\"0\":\"\";else{b=new d;break a}}b=b.f}return b}function y(a,c){return a.f[c].g?null!=a.a[c]?a.a[c].length:0:null!=a.a[c]?1:0}function r(a,c,b){a.a[c]=b;a.b&&(a.b[c]=b)}function z(a,c){var b=[],d;for(d in c)0!=d&&b.push(new ga(d,c[d]));return new ea(a,b)};/*",
    "correctAnswer": "nosir/cleave.js"
  },
  {
    "filename": "buffer.rs",
    "code": "pub struct UniformBuffer<T: ?Sized> where T: Content {\n    buffer: Buffer<T>,\n}",
    "correctAnswer": "glium/glium"
  },
  {
    "filename": "useHover.ts",
    "code": "const { useState } = React;",
    "correctAnswer": "streamich/react-use"
  },
  {
    "filename": "ngx_installer.sh",
    "code": "__init_params=()\n__script_params=(\"$@\")",
    "correctAnswer": "trimstray/nginx-admins-handbook"
  },
  {
    "filename": "Severity.hs",
    "code": "Copyright:  (c) 2018-2020 redacted\nSPDX-License-Identifier: MPL-2.0\nMaintainer: redacted <xrom.xkov@gmail.com>",
    "correctAnswer": "kowainik/co-log"
  },
  {
    "filename": "UIImage+Diff.m",
    "code": "@implementation UIImage (Diff)",
    "correctAnswer": "dzenbot/dznemptydataset"
  },
  {
    "filename": "erlang.rs",
    "code": "pub fn module<'a>(context: &'a Context) -> Option<Module<'a>> {\n    let is_erlang_project = context\n        .try_begin_scan()?\n        .set_files(&[\"rebar.config\", \"erlang.mk\"])\n        .is_match();",
    "correctAnswer": "starship/starship"
  },
  {
    "filename": "keyCommandDeleteWord.js",
    "code": "const DraftRemovableWord = require('DraftRemovableWord');\nconst EditorState = require('EditorState');",
    "correctAnswer": "facebook/draft-js"
  },
  {
    "filename": "lib.rs",
    "code": "build_derive_from_pyobject, build_py_class, build_py_function, build_py_methods,\n    build_py_proto, get_doc, process_functions_in_module, py_init, PyClassArgs, PyFunctionAttr,\n};\nuse quote::quote;\nuse syn::parse_macro_input;",
    "correctAnswer": "PyO3/pyo3"
  },
  {
    "filename": "UniqueMorseCodeWords.cpp",
    "code": "class Solution {\npublic:\n    int uniqueMorseRepresentations(vector<string>& words) {",
    "correctAnswer": "haoel/leetcode"
  },
  {
    "filename": "Futex.cpp",
    "code": "using namespace std::chrono;",
    "correctAnswer": "facebook/rocksdb"
  },
  {
    "filename": "SDL.hs",
    "code": "module Graphics.UI.Extra.SDL where",
    "correctAnswer": "ivanperez-keera/haskanoid"
  },
  {
    "filename": "index.js",
    "code": "const data = require('./mock-data')\nconst LATENCY = 16",
    "correctAnswer": "vuejs/vuex"
  },
  {
    "filename": "BlockingWaitStrategy.java",
    "code": "public final class BlockingWaitStrategy implements WaitStrategy\n{\n    private final Object mutex = new Object();",
    "correctAnswer": "lmax-exchange/disruptor"
  },
  {
    "filename": "Example.js",
    "code": "const LoadableNested = Loadable({\n  loader: () => import('./ExampleNested'),\n  loading: Loading,\n});",
    "correctAnswer": "jamiebuilds/react-loadable"
  },
  {
    "filename": "mod.rs",
    "code": "mod bufreader;\nmod bufwriter;\nmod linewriter;\nmod linewritershim;",
    "correctAnswer": "rust-lang/rust"
  },
  {
    "filename": "generic_erb.rb",
    "code": "vpath = VPath.new\ntimestamp = nil\noutput = nil\nifchange = nil\nsource = false\ncolor = nil\ntemplates = []",
    "correctAnswer": "ruby/ruby"
  },
  {
    "filename": "commands.upgrade.cpp",
    "code": "namespace redacted::Commands::Upgrade\n{\n    using Install::KeepGoing;\n    using Install::to_keep_going;",
    "correctAnswer": "microsoft/vcpkg"
  },
  {
    "filename": "Text.php",
    "code": "final class Text\n{\n    private File $target;",
    "correctAnswer": "sebastianbergmann/phpunit"
  },
  {
    "filename": "amp-lightbox.js",
    "code": "const TAG = 'amp-lightbox';",
    "correctAnswer": "ampproject/amphtml"
  },
  {
    "filename": "selection.rs",
    "code": "pub fn get_begin_index<'gc>(\n    activation: &mut Activation<'_, 'gc, '_>,\n    _this: Object<'gc>,\n    _args: &[Value<'gc>],\n) -> Result<Value<'gc>, Error<'gc>> {\n    if let Some(selection) = activation\n        .context",
    "correctAnswer": "ruffle-rs/ruffle"
  },
  {
    "filename": "ssrRenderAttrs.ts",
    "code": "const shouldIgnoreProp = makeMap(`,key,ref,innerHTML,textContent`)",
    "correctAnswer": "vuejs/vue-next"
  },
  {
    "filename": "section.js",
    "code": "const got = require('@/utils/got');\nconst cheerio = require('cheerio');\nconst url = require('url');\nconst utils = require('./utils');",
    "correctAnswer": "diygod/rsshub"
  },
  {
    "filename": "CuDnnRNN.cpp",
    "code": "namespace redacted { namespace MSR { namespace redacted {",
    "correctAnswer": "microsoft/cntk"
  },
  {
    "filename": "redacted.js",
    "code": "const fs = require(\"fs\");\nconst path = require(\"path\");\nconst events2 = require('eventemitter2');\nconst events = require(\"events\");\nconst exec = require(\"child_process\").exec;\nconst spawn = require(\"child_process\").spawn;\nconst cliff = require(\"cliff\");",
    "correctAnswer": "foreverjs/forever"
  },
  {
    "filename": "Common.hs",
    "code": "module Aws.Lambda.Meta.Common\n  ( declarationName\n  , expressionName\n  , getFieldsFrom\n  , constructorName\n  ) where",
    "correctAnswer": "theam/aws-lambda-haskell-runtime"
  },
  {
    "filename": "eventbox.go",
    "code": "type EventType int",
    "correctAnswer": "junegunn/fzf"
  },
  {
    "filename": "CaseCopyPropagation.hs",
    "code": "module Transformations.Optimising.CaseCopyPropagation where",
    "correctAnswer": "grin-compiler/grin"
  },
  {
    "filename": "Widget.hs",
    "code": "Module                  : redacted.Tui.Widget\nCopyright               : (c) 2018-2020 redacted\nSPDX-License-Identifier : MPL-2.0\nMaintainer              : redacted <xrom.xkov@gmail.com>\nStability               : Stable\nPortability             : Portable",
    "correctAnswer": "kowainik/summoner"
  },
  {
    "filename": "helpers.js",
    "code": "const withLabelStyles = StyleSheet.create({\n  labelContainer: {\n    flexDirection: 'row',\n    marginVertical: 2,\n    flex: 1\n  },\n  label: {",
    "correctAnswer": "necolas/react-native-web"
  },
  {
    "filename": "TodoDraftStore.js",
    "code": "class TodoDraftStore extends ReduceStore<Action, State> {\n  constructor() {\n    super(TodoDispatcher);\n  }",
    "correctAnswer": "facebook/flux"
  },
  {
    "filename": "writer.go",
    "code": "func (logger *Logger) Writer() *io.PipeWriter {\n\treturn logger.WriterLevel(InfoLevel)\n}",
    "correctAnswer": "sirupsen/logrus"
  },
  {
    "filename": "Theme.hs",
    "code": "module FurElise.Theme (theme) where",
    "correctAnswer": "DimaSamoz/mezzo"
  },
  {
    "filename": "Server.hs",
    "code": "module Web.redacted.Api.Server\n    ( defEndpoint )\nwhere",
    "correctAnswer": "agrafix/Spock"
  },
  {
    "filename": "EarlyExpressionTransforms.cs",
    "code": "namespace redacted.Decompiler.IL.Transforms\n{\n\tpublic class EarlyExpressionTransforms : ILVisitor, IILTransform\n\t{\n\t\tILTransformContext context;",
    "correctAnswer": "icsharpcode/ILSpy"
  },
  {
    "filename": "Lexer.hs",
    "code": "module redacted.Lexer (lexeme) where",
    "correctAnswer": "serokell/nixfmt"
  },
  {
    "filename": "redactedError.swift",
    "code": "#if os(Linux)\nimport SwiftGlibc",
    "correctAnswer": "perfectlysoft/perfect"
  },
  {
    "filename": "qcommandline.cpp",
    "code": "const QCommandLineConfigEntry QCommandLine::helpEntry = { QCommandLine::Switch, QLatin1Char('h'), QLatin1String(\"help\"), tr(\"Display this help and exit\"), QCommandLine::Optional };",
    "correctAnswer": "ariya/phantomjs"
  },
  {
    "filename": "mod.rs",
    "code": "mod afd;\nmod io_status_block;",
    "correctAnswer": "tokio-rs/mio"
  },
  {
    "filename": "sh.rb",
    "code": "module redacted\n  module Actions\n    class ShAction < Action\n      def self.run(params)\n        # this is implemented in the sh_helper.rb\n      end",
    "correctAnswer": "fastlane/fastlane"
  },
  {
    "filename": "defop.cpp",
    "code": "using namespace mshadow;\n// this namespace contains all operator overloads\nusing namespace mshadow::expr;",
    "correctAnswer": "apache/incubator-mxnet"
  },
  {
    "filename": "proc_fdinfo.go",
    "code": "var (\n\trPos     = regexp.MustCompile(`^pos:\\s+(\\d+)$`)\n\trFlags   = regexp.MustCompile(`^flags:\\s+(\\d+)$`)\n\trMntID   = regexp.MustCompile(`^mnt_id:\\s+(\\d+)$`)\n\trInotify = regexp.MustCompile(`^inotify`)\n)",
    "correctAnswer": "hashicorp/consul"
  },
  {
    "filename": "NptTlsTrustAnchor_Base_0019.cpp",
    "code": "|\n|   Neptune - Trust Anchors\n|\n|   This file is automatically generated by a script, do not edit!\n|\n| Copyright (c) 2002-2010, Axiomatic Systems, LLC.\n| All rights reserved.",
    "correctAnswer": "xbmc/xbmc"
  },
  {
    "filename": "PreparedStatementRegistry.hs",
    "code": "module redacted.Private.PreparedStatementRegistry\n(\n  PreparedStatementRegistry,\n  new,\n  update,\n  LocalKey(..),\n)",
    "correctAnswer": "nikita-volkov/hasql"
  },
  {
    "filename": "Lexer.hs",
    "code": "module Text.redacted.Lexer\n  ( -- * White space\n    space,\n    lexeme,\n    symbol,\n    symbol',\n  )",
    "correctAnswer": "mrkkrp/megaparsec"
  },
  {
    "filename": "List.hs",
    "code": "module Network.Google.Resource.Analytics.Management.Uploads.List\n    (\n    -- * REST Resource\n      ManagementUploadsListResource",
    "correctAnswer": "brendanhay/gogol"
  },
  {
    "filename": "jquery-1.12.js",
    "code": "function( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );",
    "correctAnswer": "defunkt/jquery-pjax"
  },
  {
    "filename": "tgl.rs",
    "code": "pub static STOPWORDS_TGL: &[&'static str] = &[\n    \"akin\",\n    \"aking\",\n    \"ako\",\n    \"alin\",\n    \"am\",\n    \"amin\",",
    "correctAnswer": "valeriansaliou/sonic"
  },
  {
    "filename": "mod.rs",
    "code": "pub mod leader_block_commit;\n/// This module contains all burn-chain operations\npub mod leader_key_register;\npub mod stack_stx;\npub mod transfer_stx;\npub mod user_burn_support;",
    "correctAnswer": "blockstack/stacks-blockchain"
  },
  {
    "filename": "reshape_layer.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "bvlc/caffe"
  },
  {
    "filename": "license_bsd_clause_3.go",
    "code": "func initBsdClause3() {\n\tLicenses[\"bsd\"] = License{\n\t\tName:            \"NewBSD\",\n\t\tPossibleMatches: []string{\"bsd\", \"newbsd\", \"3 clause bsd\", \"3-clause bsd\"},\n\t\tHeader: `All rights reserved.",
    "correctAnswer": "spf13/cobra"
  },
  {
    "filename": "Formatting.swift",
    "code": "private func wrap(_ isColorful: Bool, wrap: Color.Wrap) -> (String) -> String {\n\treturn { string in\n\t\treturn isColorful ? wrap.wrap(string) : string\n\t}\n}",
    "correctAnswer": "carthage/carthage"
  },
  {
    "filename": "Game.hs",
    "code": "module UI.Game\n  ( playGame\n  ) where",
    "correctAnswer": "samtay/tetris"
  },
  {
    "filename": "rule_join_elimination.go",
    "code": "type outerJoinEliminator struct {\n}",
    "correctAnswer": "pingcap/tidb"
  },
  {
    "filename": "ComponentPresenter.php",
    "code": "class ComponentPresenter extends BasePresenter implements Arrayable\n{\n    use TimestampsTrait;",
    "correctAnswer": "cachethq/cachet"
  },
  {
    "filename": "Find.hs",
    "code": "module Path.Find\n  (findFileUp\n  ,findDirUp\n  ,findFiles\n  ,findInParents)\n  where",
    "correctAnswer": "mihaimaruseac/hindent"
  },
  {
    "filename": "vimeo.go",
    "code": "type vimeoProgressive struct {\n\tProfile int    `json:\"profile\"`\n\tWidth   int    `json:\"width\"`\n\tHeight  int    `json:\"height\"`\n\tQuality string `json:\"quality\"`\n\tURL     string `json:\"url\"`\n}",
    "correctAnswer": "iawia002/annie"
  },
  {
    "filename": "compact.rs",
    "code": "pub struct Compact;",
    "correctAnswer": "nushell/nushell"
  },
  {
    "filename": "redacted.zsh",
    "code": "if [[ ! -o interactive ]]; then\n    return\nfi",
    "correctAnswer": "rbenv/rbenv"
  },
  {
    "filename": "Example.js",
    "code": "const x = redacted.createElement;",
    "correctAnswer": "facebook/react"
  },
  {
    "filename": "CsvFormatStrategy.java",
    "code": "public class CsvFormatStrategy implements FormatStrategy {",
    "correctAnswer": "orhanobut/logger"
  },
  {
    "filename": "lstm_unit_layer.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "bvlc/caffe"
  },
  {
    "filename": "index.js",
    "code": "const routes<% if (hasTypeScript) { %>: Array<RouteRecordRaw><% } %> = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  },\n  {",
    "correctAnswer": "vuejs/vue-cli"
  },
  {
    "filename": "Resolving.hs",
    "code": "module Data.Morpheus.App.Internal.Resolving\n  ( Resolver,\n    LiftOperation,\n    runRootResolverValue,\n    lift,\n    Eventless,\n    Failure (..),",
    "correctAnswer": "morpheusgraphql/morpheus-graphql"
  },
  {
    "filename": "Posix.hs",
    "code": "module redacted.Socket.ByteString.Lazy.Posix (\n    -- * Send data to a socket\n    send\n  , sendAll\n  ) where",
    "correctAnswer": "haskell/network"
  },
  {
    "filename": "wait-redacted.js",
    "code": "function check(host, port, callback) {\n  var socket = Net.createConnection(port, host);\n  var timer  = setTimeout(function () {\n    socket.destroy();\n    callback(false);\n  }, TCP_TIMEOUT);",
    "correctAnswer": "mysqljs/mysql"
  },
  {
    "filename": "IonOptimizationLevels.cpp",
    "code": "using namespace js;\nusing namespace js::jit;",
    "correctAnswer": "mongodb/mongo"
  },
  {
    "filename": "benchmark.rs",
    "code": "const ITR_DURATION: u64 = 1;\nconst ITRS: u64 = 3;",
    "correctAnswer": "cloudflare/boringtun"
  },
  {
    "filename": "Types.hs",
    "code": "module Basement.UTF8.Types\n    (\n    -- * Stepper\n      Step(..)\n    , StepBack(..)\n    , StepASCII(..)\n    , StepDigit(..)",
    "correctAnswer": "haskell-foundation/foundation"
  },
  {
    "filename": "for.js",
    "code": "function defeat () {\n  assert()\n  try {\n    chai(require('chai'))\n  } catch (e) {}\n  try {\n    tap(require('tap/lib/test'))",
    "correctAnswer": "auchenberg/volkswagen"
  },
  {
    "filename": "app.js",
    "code": "const express = require('express');\nconst compression = require('compression');\nconst session = require('express-session');\nconst bodyParser = require('body-parser');\nconst logger = require('morgan');\nconst chalk = require('chalk');\nconst errorHandler = require('errorhandler');",
    "correctAnswer": "sahat/hackathon-starter"
  },
  {
    "filename": "camera_switch.rs",
    "code": "core::{\n        math::Vector3,\n        transform::{Parent, Transform},\n        Named,\n    },\n    ecs::{component, Entity, IntoQuery, ParallelRunnable, System, SystemBuilder},\n    input::InputHandler,",
    "correctAnswer": "amethyst/amethyst"
  },
  {
    "filename": "info.js",
    "code": "const LOAD = 'redux-example/LOAD';\nconst LOAD_SUCCESS = 'redux-example/LOAD_SUCCESS';\nconst LOAD_FAIL = 'redux-example/LOAD_FAIL';",
    "correctAnswer": "erikras/react-redux-universal-hot-example"
  },
  {
    "filename": "once.rs",
    "code": "pub fn once<T>(t: T) -> Once<T> {\n    Once { value: Some(t) }\n}",
    "correctAnswer": "async-rs/async-std"
  },
  {
    "filename": "env.rb",
    "code": "module redacted\n  module DSL\n    module Env\n      extend Forwardable\n      def_delegators :env,\n                     :configure_backend, :fetch, :set, :set_if_empty, :delete,\n                     :ask, :role, :server, :primary, :validate, :append,",
    "correctAnswer": "capistrano/capistrano"
  },
  {
    "filename": "SimpleAnim.hs",
    "code": "module SimpleAnim (simpleAnimClass) where",
    "correctAnswer": "joelburget/react-haskell"
  },
  {
    "filename": "method_on_time.go",
    "code": "type myTime struct {\n\ttime.Time //anonymous field\n}",
    "correctAnswer": "unknwon/the-way-to-go_zh_cn"
  },
  {
    "filename": "Builder.hs",
    "code": "module Data.Csv.Builder\n    (\n    -- * Encoding single records and headers\n      encodeHeader\n    , encodeRecord\n    , encodeNamedRecord\n    , encodeDefaultOrderedNamedRecord",
    "correctAnswer": "haskell-hvr/cassava"
  },
  {
    "filename": "MultiItemDelegateUseActivity.java",
    "code": "public class MultiItemDelegateUseActivity extends BaseActivity {",
    "correctAnswer": "cymchad/baserecyclerviewadapterhelper"
  },
  {
    "filename": "mod.rs",
    "code": "mod asciidoc;\nmod csv;\nmod json;\nmod markdown;",
    "correctAnswer": "sharkdp/hyperfine"
  },
  {
    "filename": "docker_context.rs",
    "code": "pub fn module<'a>(context: &'a Context) -> Option<Module<'a>> {\n    let mut module = context.new_module(\"docker_context\");\n    let config: DockerContextConfig = DockerContextConfig::try_load(module.config);",
    "correctAnswer": "starship/starship"
  },
  {
    "filename": "ObjectSerializer.java",
    "code": "public interface ObjectSerializer {",
    "correctAnswer": "alibaba/fastjson"
  },
  {
    "filename": "services.go",
    "code": "type ServicesResponse struct {\n\tCount     int                `json:\"total_results\"`\n\tPages     int                `json:\"total_pages\"`\n\tNextUrl   string             `json:\"next_url\"`\n\tResources []ServicesResource `json:\"resources\"`\n}",
    "correctAnswer": "hashicorp/vault"
  },
  {
    "filename": "contact.js",
    "code": "const axios = require('axios');\nconst validator = require('validator');\nconst nodemailer = require('nodemailer');\nconst nodemailerSendgrid = require('nodemailer-sendgrid');",
    "correctAnswer": "sahat/hackathon-starter"
  },
  {
    "filename": "Base.js",
    "code": "const stringify = require('./_stringify')",
    "correctAnswer": "typicode/lowdb"
  },
  {
    "filename": "Keyboard.hs",
    "code": "Movie Monad\n  (C) 2017 David redacted\n  redacted.com\n-}",
    "correctAnswer": "lettier/movie-monad"
  },
  {
    "filename": "mod.rs",
    "code": "mod handle;\nmod r#virtual;\nmod worker;",
    "correctAnswer": "launchbadge/sqlx"
  },
  {
    "filename": "HTMLPlugin.m",
    "code": "@interface WebInspector : NSObject  { WebView *_webView; }\n- (id)initWithWebView:(WebView *)webView;\n- (void)detach:     (id)sender;\n- (void)show:       (id)sender;\n- (void)showConsole:(id)sender;\n@end",
    "correctAnswer": "matryer/bitbar"
  },
  {
    "filename": "InterestingStore.hs",
    "code": "module redacted.Server.InterestingStore where",
    "correctAnswer": "NorfairKing/smos"
  },
  {
    "filename": "BuzzPrinter.java",
    "code": "public class BuzzPrinter {",
    "correctAnswer": "enterprisequalitycoding/fizzbuzzenterpriseedition"
  },
  {
    "filename": "Peer2.hs",
    "code": "main = handle exceptionHandler $ do\n  writeDebugConsole \"RIGHT: Initializing XenStore.\\n\"\n  xs  <- initXenStore\n  writeDebugConsole \"RIGHT: Starting rendezvous.\\n\"\n  inch <- rightSide xs\n  writeDebugConsole \"RIGHT: Completed rendezvous.\\n\"\n  forM_ [0..65536] $ \\ x -> do",
    "correctAnswer": "GaloisInc/HaLVM"
  },
  {
    "filename": "LocalRepositoryRule.java",
    "code": "public class LocalRepositoryRule implements RuleDefinition {",
    "correctAnswer": "bazelbuild/bazel"
  },
  {
    "filename": "server.rs",
    "code": "body::BoxBody,\n    transport::{NamedService, Server},\n    Request, Response, Status,\n};\nuse tower::Service;",
    "correctAnswer": "hyperium/tonic"
  },
  {
    "filename": "start.zsh",
    "code": "_zsh_autosuggest_start() {\n\t# By default we re-bind widgets on every precmd to ensure we wrap other\n\t# wrappers. Specifically, highlighting breaks if our widgets are wrapped by\n\t# zsh-syntax-highlighting widgets. This also allows modifications to the\n\t# widget list variables to take effect on the next precmd. However this has\n\t# a decent performance hit, so users can set ZSH_AUTOSUGGEST_MANUAL_REBIND\n\t# to disable the automatic re-binding.",
    "correctAnswer": "zsh-users/zsh-autosuggestions"
  },
  {
    "filename": "UIView+redactedPrivate.m",
    "code": "@implementation UIView (redactedPrivate)",
    "correctAnswer": "vicc/chameleon"
  },
  {
    "filename": "RequireContextDependency.js",
    "code": "const makeSerializable = require(\"../util/makeSerializable\");\nconst ContextDependency = require(\"./ContextDependency\");\nconst ModuleDependencyTemplateAsRequireId = require(\"./ModuleDependencyTemplateAsRequireId\");",
    "correctAnswer": "webpack/webpack"
  },
  {
    "filename": "semver.js",
    "code": "function maxSatisfying(versions, range, strictMatch) {\n    var version;\n    var filteredVersions;",
    "correctAnswer": "bower/bower"
  },
  {
    "filename": "SlotChainProvider.java",
    "code": "public final class SlotChainProvider {",
    "correctAnswer": "alibaba/sentinel"
  },
  {
    "filename": "server.go",
    "code": "var addr = flag.String(\"addr\", \"localhost:8080\", \"http service address\")",
    "correctAnswer": "gorilla/websocket"
  },
  {
    "filename": "hawk.js",
    "code": "function randomString (size) {\n  var bits = (size + 1) * 6\n  var buffer = crypto.randomBytes(Math.ceil(bits / 8))\n  var string = buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')\n  return string.slice(0, size)\n}",
    "correctAnswer": "request/request"
  },
  {
    "filename": "VestigeOfTime.hs",
    "code": "module Csound.Catalog.Wave.VestigeOfTime (\n    filteredSaw, filteredSawRising, filteredSawFalling,\n    filteredNoise,\n    resonInstr, simpleResonInstr, resonVibrato,\n    delaySaw, femaleVowel, amBell\n) where",
    "correctAnswer": "spell-music/csound-expression"
  },
  {
    "filename": "signal.rs",
    "code": "type CleanupFn = Box<dyn Fn(self::Signal) + Send>;\nlazy_static! {\n    static ref CLEANUP: Mutex<Option<CleanupFn>> = Mutex::new(None);\n}",
    "correctAnswer": "watchexec/watchexec"
  },
  {
    "filename": "Http.hs",
    "code": "module redacted.Http (\n  Method,\n  getMethod,\n  Path,\n  httpOK,\n  http400,\n  http404,",
    "correctAnswer": "nstack/nstack"
  },
  {
    "filename": "Main.hs",
    "code": "redacted\n  (C) 2016 David redacted\n  redacted.com\n-}",
    "correctAnswer": "lettier/gifcurry"
  },
  {
    "filename": "salvage.cpp",
    "code": "static const char *HEADER_END = \"HEADER=END\";\n/* End of key/value data */\nstatic const char *DATA_END = \"DATA=END\";\ntypedef std::pair<std::vector<unsigned char>, std::vector<unsigned char> > KeyValPair;",
    "correctAnswer": "bitcoin/bitcoin"
  },
  {
    "filename": "btSpatialTransformationMatrix.java",
    "code": "public class btSpatialTransformationMatrix extends BulletBase {\n\tprivate long swigCPtr;",
    "correctAnswer": "libgdx/libgdx"
  },
  {
    "filename": "deploy.sh",
    "code": "set -ex",
    "correctAnswer": "tldr-pages/tldr"
  },
  {
    "filename": "UserCollection.php",
    "code": "class UserCollection extends FlexCollection implements UserCollectionInterface\n{\n    /**\n     * Load user account.\n     *\n     * Always creates user object. To check if user exists, use $this->exists().\n     *",
    "correctAnswer": "getgrav/grav"
  },
  {
    "filename": "scalar.rb",
    "code": "module Psych\n  module Nodes\n    ###\n    # This class represents a {YAML Scalar}[http://yaml.org/spec/1.1/#id858081].\n    #\n    # This node type is a terminal node and should not have any children.\n    class Scalar < Psych::Nodes::Node",
    "correctAnswer": "ruby/ruby"
  },
  {
    "filename": "mdh-html-to-text.js",
    "code": "function MdhHtmlToText(elem, range, checkingIfMarkdown) {\n  this.elem = elem;\n  this.range = range;\n  this.checkingIfMarkdown = checkingIfMarkdown;",
    "correctAnswer": "adam-p/markdown-here"
  },
  {
    "filename": "SOM.hs",
    "code": "module AI.Network.SOM\n( SOM(..)\n, MapDefinition(..)",
    "correctAnswer": "jbarrow/LambdaNet"
  },
  {
    "filename": "led_matrix.rs",
    "code": "macro_rules! led_matrix_component_helper {\n    ($Pin:ty, $A: ty, $alarm_mux: expr, @fps => $refresh_rate: expr, @cols => $col_active:expr, $($C:expr),+, @rows => $row_active:expr, $($R:expr),+ $(,)?) => {{\n        use kernel::count_expressions;",
    "correctAnswer": "tock/tock"
  },
  {
    "filename": "help_content.rs",
    "code": "minimad::{TextTemplate, TextTemplateExpander},\n};",
    "correctAnswer": "Canop/broot"
  },
  {
    "filename": "ast.js",
    "code": "const acorn = require('acorn-dynamic-import').default;",
    "correctAnswer": "tencent/wepy"
  },
  {
    "filename": "titanftp_xcrc_traversal.rb",
    "code": "class MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Ftp\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner",
    "correctAnswer": "rapid7/metasploit-framework"
  },
  {
    "filename": "Lazy.hs",
    "code": "#if __GLASGOW_HASKELL__ >= 702\n{-# LANGUAGE Trustworthy #-}\n#endif",
    "correctAnswer": "ucsd-progsys/liquidhaskell"
  },
  {
    "filename": "quickbooks.rb",
    "code": "cask \"quickbooks\" do\n  version \"2021\"\n  sha256 :no_check # required as upstream package is updated in-place",
    "correctAnswer": "homebrew/homebrew-cask"
  },
  {
    "filename": "State.hs",
    "code": "module redacted.Monad.State\n    ( -- * MonadState\n      MonadState(..)\n    , get\n    , put",
    "correctAnswer": "haskell-foundation/foundation"
  },
  {
    "filename": "OESMSSystemResponder.m",
    "code": "@implementation OESMSSystemResponder\n@dynamic client;",
    "correctAnswer": "openemu/openemu"
  },
  {
    "filename": "AnimatedZoomViewJob.swift",
    "code": "open class AnimatedZoomViewJob: AnimatedViewPortJob\n{\n    internal var yAxis: YAxis\n    internal var xAxisRange: Double = 0.0\n    internal var scaleX: CGFloat = 0.0\n    internal var scaleY: CGFloat = 0.0\n    internal var zoomOriginX: CGFloat = 0.0",
    "correctAnswer": "danielgindi/charts"
  },
  {
    "filename": "config.rs",
    "code": "pub const CLIENT_TIMEOUT: u64 = 30;",
    "correctAnswer": "timvisee/ffsend"
  },
  {
    "filename": "adapter.swift",
    "code": "/*:\n🔌 适配器（Adapter）\n--------------",
    "correctAnswer": "ochococo/design-patterns-in-swift"
  },
  {
    "filename": "auth_sha1.go",
    "code": "func AuthCookieSha1(user, home string) Auth {\n\treturn authCookieSha1{user, home}\n}",
    "correctAnswer": "moby/moby"
  },
  {
    "filename": "helper.ts",
    "code": "const removeFolderAsync = util.promisify(removeFolder);",
    "correctAnswer": "microsoft/playwright"
  },
  {
    "filename": "c_lib.rs",
    "code": "pub struct TSHighlighter {\n    languages: HashMap<String, (Option<Regex>, HighlightConfiguration)>,\n    attribute_strings: Vec<&'static [u8]>,\n    highlight_names: Vec<String>,\n    carriage_return_index: Option<usize>,\n}",
    "correctAnswer": "tree-sitter/tree-sitter"
  },
  {
    "filename": "Types.hs",
    "code": "module redacted.Types where",
    "correctAnswer": "chrisdone/jl"
  },
  {
    "filename": "templates.rs",
    "code": "static DEFAULT_TPL: &str = include_str!(\"default_tpl.html\");",
    "correctAnswer": "getzola/zola"
  },
  {
    "filename": "Helper.cs",
    "code": "namespace redacted\n{\n    public class Helper\n    {\n        public static bool IsNullable(Type t)\n        {\n            if (!t.IsGenericType) return false;",
    "correctAnswer": "mgholam/fastJSON"
  },
  {
    "filename": "Dot.js",
    "code": "const Dot = props => {\n  const { className, children: styles } = (\n    <scope className=\"Dot\">\n      <style jsx>{`\n        .Dot {\n          position: absolute;\n          cursor: pointer;",
    "correctAnswer": "necolas/react-native-web"
  },
  {
    "filename": "GithubButton.js",
    "code": "const GithubButton = (props) => {\n  const {user, repo, type, width, height, count, large} = props;\n  let src = `https://ghbtns.com/github-btn.html?user=${user}&repo=${repo}&type=${type}`;\n  if (count) src += '&count=true';\n  if (large) src += '&size=large';",
    "correctAnswer": "erikras/react-redux-universal-hot-example"
  },
  {
    "filename": "property.js",
    "code": "const Property = function(name, index, currentFileInfo) {\n    this.name = name;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};",
    "correctAnswer": "less/less.js"
  },
  {
    "filename": "sys.rs",
    "code": "Result};\npub use crate::os::system::{uname,\n                            Uname};\nuse std::{io,\n          net::{IpAddr,\n                Ipv4Addr,\n                SocketAddr,",
    "correctAnswer": "habitat-sh/habitat"
  },
  {
    "filename": "parse.rs",
    "code": "get_compiler,\n    util::{CtxtExt, MapErr},\n};\nuse anyhow::Context as _;\nuse napi::{CallContext, Env, JsObject, JsString, Task};\nuse std::{\n    path::{Path, PathBuf},",
    "correctAnswer": "swc-project/swc"
  },
  {
    "filename": "libstdbuf.rs",
    "code": "extern crate cpp;",
    "correctAnswer": "uutils/coreutils"
  },
  {
    "filename": "hash.rs",
    "code": "pub trait HashIgnoringSymbols {\n    /// Hash an AST ignoring symbol names.\n    ///\n    /// This method is useful for comparing two ASTs for structural equality, e.g., to check if an\n    /// optimization pass changed the AST modulo changing symbol names. Comparing using a hash\n    /// value is generally faster than cloning a tree, changing it, and then checking if it\n    /// changed. This method may return an error if it encounters an undefined symbol.",
    "correctAnswer": "weld-project/weld"
  },
  {
    "filename": "style.rs",
    "code": "pub enum StyleComponent {\n    Auto,\n    #[cfg(feature = \"git\")]\n    Changes,\n    Grid,\n    Rule,\n    Header,",
    "correctAnswer": "sharkdp/bat"
  },
  {
    "filename": "Repo.redux.js",
    "code": "const request = (state, { repo }) => ({ ...INITIAL_STATE, fetching: true, repo })",
    "correctAnswer": "infinitered/reactotron"
  },
  {
    "filename": "FileSystemTree.hs",
    "code": "module HaskellDo.Toolbar.FileSystemTree (widget) where",
    "correctAnswer": "theam/haskell-do"
  },
  {
    "filename": "zig.rs",
    "code": "pub fn module<'a>(context: &'a Context) -> Option<Module<'a>> {\n    let is_zig_project = context\n        .try_begin_scan()?\n        .set_extensions(&[\"zig\"])\n        .is_match();",
    "correctAnswer": "starship/starship"
  },
  {
    "filename": "LC_I_DSLType.hs",
    "code": "module LC_I_DSLType where",
    "correctAnswer": "lambdacube3d/lambdacube-edsl"
  },
  {
    "filename": "install.sh",
    "code": "set -e",
    "correctAnswer": "pyenv/pyenv"
  },
  {
    "filename": "decoder_utils.cpp",
    "code": "std::vector<std::pair<size_t, float>> get_pruned_log_probs(\n    const double *prob_step,\n    size_t class_dim,\n    double cutoff_prob,\n    size_t cutoff_top_n) {\n  std::vector<std::pair<int, double>> prob_idx;\n  for (size_t i = 0; i < class_dim; ++i) {",
    "correctAnswer": "mozilla/deepspeech"
  },
  {
    "filename": "Cmd.hs",
    "code": "module redacted.Ext.Cmd\n  ( addCmd\n  , runCmd\n  ) where",
    "correctAnswer": "ChrisPenner/rasa"
  },
  {
    "filename": "row.rs",
    "code": "pub struct AnyRow {\n    pub(crate) kind: AnyRowKind,\n    pub(crate) columns: Vec<AnyColumn>,\n}",
    "correctAnswer": "launchbadge/sqlx"
  },
  {
    "filename": "DataBoundLiteralControlCas.cs",
    "code": "namespace redactedCasTests.System.Web.UI {",
    "correctAnswer": "mono/mono"
  },
  {
    "filename": "line-numbers.js",
    "code": "const picomatch = require('picomatch');\nconst flatten = require('lodash/flatten');",
    "correctAnswer": "avajs/ava"
  },
  {
    "filename": "SSLSessionManager.cpp",
    "code": "using redacted::ssl::SSLSessionUniquePtr;\nusing redacted::ssl::detail::OpenSSLSession;\nusing std::shared_ptr;",
    "correctAnswer": "facebook/folly"
  },
  {
    "filename": "TimeOrderedKeyValueBuffer.java",
    "code": "public interface TimeOrderedKeyValueBuffer<K, V> extends StateStore {",
    "correctAnswer": "apache/kafka"
  },
  {
    "filename": "syslog.go",
    "code": "type SyslogHook struct {\n\tWriter        *syslog.Writer\n\tSyslogNetwork string\n\tSyslogRaddr   string\n}",
    "correctAnswer": "sirupsen/logrus"
  },
  {
    "filename": "helpers.easing.js",
    "code": "const effects = {\n\tlinear(t) {\n\t\treturn t;\n\t},",
    "correctAnswer": "chartjs/chart.js"
  },
  {
    "filename": "form.go",
    "code": "const defaultMemory = 32 << 20",
    "correctAnswer": "gin-gonic/gin"
  },
  {
    "filename": "bindActionCreators.ts",
    "code": "function bindActionCreator<A extends AnyAction = AnyAction>(\n  actionCreator: ActionCreator<A>,\n  dispatch: Dispatch\n) {\n  return function (this: any, ...args: any[]) {\n    return dispatch(actionCreator.apply(this, args))\n  }",
    "correctAnswer": "reduxjs/redux"
  },
  {
    "filename": "index.html",
    "code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>redacted: A jQuery Plugin by Harvest to Tame Unwieldy Select Boxes</title>\n  <link rel=\"stylesheet\" href=\"docsupport/style.css\">\n  <link rel=\"stylesheet\" href=\"docsupport/prism.css\">",
    "correctAnswer": "harvesthq/chosen"
  },
  {
    "filename": "Returning.hs",
    "code": "module Control.Carrier.Trace.Returning\n( -- * Trace carrier\n  runTrace\n, TraceC(TraceC)\n  -- * Trace effect\n, module Control.Effect.Trace\n) where",
    "correctAnswer": "fused-effects/fused-effects"
  },
  {
    "filename": "moduleobject.rs",
    "code": "extern \"C\" {\n    #[cfg_attr(PyPy, link_name = \"PyPyModule_Type\")]\n    pub static mut PyModule_Type: PyTypeObject;\n}",
    "correctAnswer": "PyO3/pyo3"
  },
  {
    "filename": "redacted.rs",
    "code": "any(target_os = \"linux\", target_os = \"macos\"),\n    global_allocator\n)]\nstatic ALLOC: Jemalloc = Jemalloc;",
    "correctAnswer": "spacejam/sled"
  },
  {
    "filename": "Utf8.hs",
    "code": "module System.IO.Utf8\n  ( withUtf8StdHandles",
    "correctAnswer": "serokell/nixfmt"
  },
  {
    "filename": "unset.go",
    "code": "type unsetOptions struct {\n\tconfigAccess clientcmd.ConfigAccess\n\tpropertyName string\n}",
    "correctAnswer": "kubernetes/kubernetes"
  },
  {
    "filename": "Data.hs",
    "code": "module NotificationCenter.Notifications.Data\n  ( Urgency(..)\n  , CloseType (..)\n  , Notification(..)\n  , Image(..)\n  , parseImageString\n  , rawImgToPixBuf",
    "correctAnswer": "phuhl/linux_notification_center"
  },
  {
    "filename": "BaseCommand.cs",
    "code": "namespace redactedGenerator\n{\n\tpublic abstract class BaseCommand : Command\n\t{\n\t\tprotected BaseCommand(string name, string help)\n\t\t\t: this(name, \"\", help)\n\t\t{",
    "correctAnswer": "mono/SkiaSharp"
  },
  {
    "filename": "Example.hs",
    "code": "DataKinds\n  , DeriveGeneric\n  , FlexibleContexts\n  , OverloadedLabels\n  , OverloadedStrings\n  , OverloadedLists\n  , TypeApplications",
    "correctAnswer": "morphismtech/squeal"
  },
  {
    "filename": "kay_auto.rs",
    "code": "impl Actor for NeighboringTownTrade {\n    type ID = NeighboringTownTradeID;",
    "correctAnswer": "citybound/citybound"
  },
  {
    "filename": "redacted.js",
    "code": "function lookupClass (className) {\n  var cached = cache[className];\n  if (cached) {\n    cached.lastIndex = 0;\n  } else {\n    cache[className] = cached = new RegExp(start + className + end, 'g');\n  }",
    "correctAnswer": "bevacqua/dragula"
  },
  {
    "filename": "user.rs",
    "code": "comment_view::{CommentView, ReplyView},\n  community_view::{CommunityFollowerView, CommunityModeratorView},\n  post_view::PostView,\n  private_message_view::PrivateMessageView,\n  user_mention_view::UserMentionView,\n  user_view::UserView,\n};",
    "correctAnswer": "LemmyNet/lemmy"
  },
  {
    "filename": "registerFunctionsMath.cpp",
    "code": "namespace DB\n{\nclass FunctionFactory;",
    "correctAnswer": "clickhouse/clickhouse"
  },
  {
    "filename": "Printer.java",
    "code": "public interface Printer {",
    "correctAnswer": "orhanobut/logger"
  },
  {
    "filename": "slice.rs",
    "code": "static USAGE: &'static str = \"\nReturns the rows in the range specified (starting at 0, half-open interval).\nThe range does not include headers.",
    "correctAnswer": "BurntSushi/xsv"
  },
  {
    "filename": "idl_gen_grpc.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "google/flatbuffers"
  },
  {
    "filename": "HackyDrawerLayout.java",
    "code": "public class HackyDrawerLayout extends DrawerLayout {",
    "correctAnswer": "chrisbanes/photoview"
  },
  {
    "filename": "WaitOptions.cpp",
    "code": "namespace folly {",
    "correctAnswer": "facebook/rocksdb"
  },
  {
    "filename": "Cycles.hs",
    "code": "module Distribution.Solver.Modular.Cycles (\n    detectCyclesPhase\n  ) where",
    "correctAnswer": "haskell/cabal"
  },
  {
    "filename": "sessions.js",
    "code": "function fromParseSpeaker(speaker: Object): Speaker {\n  const pic = speaker.get(\"speakerPic\");\n  return {\n    id: speaker.id,\n    bio: speaker.get(\"speakerBio\"),\n    name: speaker.get(\"speakerName\"),\n    pic: pic && pic.url(),",
    "correctAnswer": "fbsamples/f8app"
  },
  {
    "filename": "Conc.hs",
    "code": "module Test.redacted.Conc\n  ( -- * Expressing concurrent programs\n    Program\n  , Basic\n  , ConcT\n  , ConcIO",
    "correctAnswer": "barrucadu/dejafu"
  },
  {
    "filename": "redacted_slider.c",
    "code": "NK_LIB float\nnk_slider_behavior(nk_flags *state, struct nk_rect *logical_cursor,\n    struct nk_rect *visual_cursor, struct nk_input *in,\n    struct nk_rect bounds, float slider_min, float slider_max, float slider_value,\n    float slider_step, float slider_steps)\n{\n    int left_mouse_down;",
    "correctAnswer": "vurtun/nuklear"
  },
  {
    "filename": "bm.js",
    "code": "const locale = {\n  name: 'bm',\n  weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),\n  months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),\n  weekStart: 1,\n  weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),\n  monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),",
    "correctAnswer": "iamkun/dayjs"
  },
  {
    "filename": "BlazeCommandResult.java",
    "code": "public final class BlazeCommandResult {\n  private final DetailedExitCode detailedExitCode;",
    "correctAnswer": "bazelbuild/bazel"
  },
  {
    "filename": "Mapper7.hs",
    "code": "module Emulator.Mapper.Mapper7 (\n    Mapper7(..)\n  , new\n  , read\n  , write\n) where",
    "correctAnswer": "dbousamra/hnes"
  },
  {
    "filename": "LocalDCE.hs",
    "code": "module Data.Bedrock.Simplify.LocalDCE\n    ( localDCE ) where",
    "correctAnswer": "Lemmih/lhc"
  },
  {
    "filename": "ThreadPoolConstants.java",
    "code": "public class ThreadPoolConstants {\n    public static final int CORE_POOL_SIZE = 5;\n    public static final int MAX_POOL_SIZE = 10;\n    public static final int QUEUE_CAPACITY = 100;\n    public static final Long KEEP_ALIVE_TIME = 1L;\n    private ThreadPoolConstants(){",
    "correctAnswer": "snailclimb/javaguide"
  },
  {
    "filename": "progress.js",
    "code": "const BaseReporter = require('./base')",
    "correctAnswer": "karma-runner/karma"
  },
  {
    "filename": "Address.php",
    "code": "class Address extends \\redacted\\Provider\\es_ES\\Address\n{\n    protected static $cityPrefix = array('San', 'Santa', 'Puerto', 'Valle', 'Villa', 'Parroquia', 'El', 'Los', 'La', 'Las');\n    protected static $citySuffix = array('del Valle', 'de Mara', 'de Altagracia', 'de Asis', 'del Tuy', 'de Mata');\n    protected static $buildingNumber = array('###', '##', '#');\n    protected static $streetPrefix = array(\n        'Calle', 'Avenida', 'Av.', 'Cl.', 'Carretera', 'Callejón', 'Vereda'",
    "correctAnswer": "fzaninotto/faker"
  },
  {
    "filename": "SQS.hs",
    "code": "Module      : AWS.Lambda.Events.SQS\nDescription : Data types for working with SQS events.\nCopyright   : (c) Nike, Inc., 2019\nLicense     : BSD3\nMaintainer  : nathan.fairhurst@nike.com, fernando.freire@nike.com\nStability   : stable\n-}",
    "correctAnswer": "Nike-Inc/hal"
  },
  {
    "filename": "mlir-hlo-opt.cpp",
    "code": "Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at",
    "correctAnswer": "tensorflow/tensorflow"
  },
  {
    "filename": "windows.rs",
    "code": "cleanup_ui, close_notification, show_context_menu, show_notification, WindowsMenuItem,\n};\nuse crate::ui::{MenuItem, MenuItemType};\nuse log::debug;\nuse std::sync::Arc;\nuse std::sync::Mutex;\nuse std::{thread, time};",
    "correctAnswer": "federico-terzi/espanso"
  },
  {
    "filename": "Mapper2.hs",
    "code": "module Emulator.Mapper.Mapper2 (\n    Mapper2(..)\n  , new\n  , read\n  , write\n) where\n\nimport           Data.IORef\nimport qualified Data.Vector.Unboxed.Mutable as VUM\nimport           Data.Word\nimport           Emulator.Cartridge          as Cartridge\nimport           Emulator.Util\nimport           Prelude                     hiding (read)",
    "correctAnswer": "dbousamra/hnes"
  },
  {
    "filename": "PreludeStuff.hs",
    "code": "module Main where",
    "correctAnswer": "harpocrates/inline-rust"
  },
  {
    "filename": "reservation.rs",
    "code": "pub struct Reservation<'a> {\n    pub(super) log: &'a Log,\n    pub(super) iobuf: Arc<IoBuf>,\n    pub(super) buf: &'a mut [u8],\n    pub(super) flushed: bool,\n    pub pointer: DiskPtr,\n    pub lsn: Lsn,",
    "correctAnswer": "spacejam/sled"
  },
  {
    "filename": "component.js",
    "code": "const COMPONENT_CORE_HELPERS = Object.freeze({\n  // component helpers\n  $(selector){ return $(selector, this.root)[0] },\n  $$(selector){ return $(selector, this.root) }\n})",
    "correctAnswer": "riot/riot"
  },
  {
    "filename": "notification.rs",
    "code": "pub struct Notification {\n  /// The notification body.\n  body: Option<String>,\n  /// The notification title.\n  title: Option<String>,\n  /// The notification icon.\n  icon: Option<String>,",
    "correctAnswer": "tauri-apps/tauri"
  },
  {
    "filename": "Receiver.hs",
    "code": "main :: IO ()\nmain = do\n  writeDebugConsole \"RCV: Initializing XenStore.\\n\"\n  xs <- initXenStore\n  writeDebugConsole \"RCV: Making offer.\\n\"\n  c <- offer xs\n  writeDebugConsole \"RCV: Creating destination reference.\\n\"",
    "correctAnswer": "GaloisInc/HaLVM"
  },
  {
    "filename": "BigDecimalBooleanConverter.java",
    "code": "public class BigDecimalBooleanConverter implements Converter<BigDecimal> {",
    "correctAnswer": "alibaba/easyexcel"
  },
  {
    "filename": "particles.min.js",
    "code": "function hexToRgb(e){var a=/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;e=e.replace(a,function(e,a,t,i){return a+a+t+t+i+i});var t=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null}function clamp(e,a,t){return Math.min(Math.max(e,a),t)}function isInArray(e,a){return a.indexOf(e)>-1}var pJS=function(e,a){var t=document.querySelector(\"#\"+e+\" > .redacted-canvas-el\");this.pJS={canvas:{el:t,w:t.offsetWidth,h:t.offsetHeight},particles:{number:{value:400,density:{enable:!0,value_area:800}},color:{value:\"#fff\"},shape:{type:\"circle\",stroke:{width:0,color:\"#ff0000\"},polygon:{nb_sides:5},image:{src:\"\",width:100,height:100}},opacity:{value:1,random:!1,anim:{enable:!1,speed:2,opacity_min:0,sync:!1}},size:{value:20,random:!1,anim:{enable:!1,speed:20,size_min:0,sync:!1}},line_linked:{enable:!0,distance:100,color:\"#fff\",opacity:1,width:1},move:{enable:!0,speed:2,direction:\"none\",random:!1,straight:!1,out_mode:\"out\",bounce:!1,attract:{enable:!1,rotateX:3e3,rotateY:3e3}},array:[]},interactivity:{detect_on:\"canvas\",events:{onhover:{enable:!0,mode:\"grab\"},onclick:{enable:!0,mode:\"push\"},resize:!0},modes:{grab:{distance:100,line_linked:{opacity:1}},bubble:{distance:200,size:80,duration:.4},repulse:{distance:200,duration:.4},push:{particles_nb:4},remove:{particles_nb:2}},mouse:{}},retina_detect:!1,fn:{interact:{},modes:{},vendors:{}},tmp:{}};var i=this.pJS;a&&Object.deepExtend(i,a),i.tmp.obj={size_value:i.particles.size.value,size_anim_speed:i.particles.size.anim.speed,move_speed:i.particles.move.speed,line_linked_distance:i.particles.line_linked.distance,line_linked_width:i.particles.line_linked.width,mode_grab_distance:i.interactivity.modes.grab.distance,mode_bubble_distance:i.interactivity.modes.bubble.distance,mode_bubble_size:i.interactivity.modes.bubble.size,mode_repulse_distance:i.interactivity.modes.repulse.distance},i.fn.retinaInit=function(){i.retina_detect&&window.devicePixelRatio>1?(i.canvas.pxratio=window.devicePixelRatio,i.tmp.retina=!0):(i.canvas.pxratio=1,i.tmp.retina=!1),i.canvas.w=i.canvas.el.offsetWidth*i.canvas.pxratio,i.canvas.h=i.canvas.el.offsetHeight*i.canvas.pxratio,i.particles.size.value=i.tmp.obj.size_value*i.canvas.pxratio,i.particles.size.anim.speed=i.tmp.obj.size_anim_speed*i.canvas.pxratio,i.particles.move.speed=i.tmp.obj.move_speed*i.canvas.pxratio,i.particles.line_linked.distance=i.tmp.obj.line_linked_distance*i.canvas.pxratio,i.interactivity.modes.grab.distance=i.tmp.obj.mode_grab_distance*i.canvas.pxratio,i.interactivity.modes.bubble.distance=i.tmp.obj.mode_bubble_distance*i.canvas.pxratio,i.particles.line_linked.width=i.tmp.obj.line_linked_width*i.canvas.pxratio,i.interactivity.modes.bubble.size=i.tmp.obj.mode_bubble_size*i.canvas.pxratio,i.interactivity.modes.repulse.distance=i.tmp.obj.mode_repulse_distance*i.canvas.pxratio},i.fn.canvasInit=function(){i.canvas.ctx=i.canvas.el.getContext(\"2d\")},i.fn.canvasSize=function(){i.canvas.el.width=i.canvas.w,i.canvas.el.height=i.canvas.h,i&&i.interactivity.events.resize&&window.addEventListener(\"resize\",function(){i.canvas.w=i.canvas.el.offsetWidth,i.canvas.h=i.canvas.el.offsetHeight,i.tmp.retina&&(i.canvas.w*=i.canvas.pxratio,i.canvas.h*=i.canvas.pxratio),i.canvas.el.width=i.canvas.w,i.canvas.el.height=i.canvas.h,i.particles.move.enable||(i.fn.particlesEmpty(),i.fn.particlesCreate(),i.fn.particlesDraw(),i.fn.vendors.densityAutoParticles()),i.fn.vendors.densityAutoParticles()})},i.fn.canvasPaint=function(){i.canvas.ctx.fillRect(0,0,i.canvas.w,i.canvas.h)},i.fn.canvasClear=function(){i.canvas.ctx.clearRect(0,0,i.canvas.w,i.canvas.h)},i.fn.particle=function(e,a,t){if(this.radius=(i.particles.size.random?Math.random():1)*i.particles.size.value,i.particles.size.anim.enable&&(this.size_status=!1,this.vs=i.particles.size.anim.speed/100,i.particles.size.anim.sync||(this.vs=this.vs*Math.random())),this.x=t?t.x:Math.random()*i.canvas.w,this.y=t?t.y:Math.random()*i.canvas.h,this.x>i.canvas.w-2*this.radius?this.x=this.x-this.radius:this.x<2*this.radius&&(this.x=this.x+this.radius),this.y>i.canvas.h-2*this.radius?this.y=this.y-this.radius:this.y<2*this.radius&&(this.y=this.y+this.radius),i.particles.move.bounce&&i.fn.vendors.checkOverlap(this,t),this.color={},\"object\"==typeof e.value)if(e.value instanceof Array){var s=e.value[Math.floor(Math.random()*i.particles.color.value.length)];this.color.rgb=hexToRgb(s)}else void 0!=e.value.r&&void 0!=e.value.g&&void 0!=e.value.b&&(this.color.rgb={r:e.value.r,g:e.value.g,b:e.value.b}),void 0!=e.value.h&&void 0!=e.value.s&&void 0!=e.value.l&&(this.color.hsl={h:e.value.h,s:e.value.s,l:e.value.l});else\"random\"==e.value?this.color.rgb={r:Math.floor(256*Math.random())+0,g:Math.floor(256*Math.random())+0,b:Math.floor(256*Math.random())+0}:\"string\"==typeof e.value&&(this.color=e,this.color.rgb=hexToRgb(this.color.value));this.opacity=(i.particles.opacity.random?Math.random():1)*i.particles.opacity.value,i.particles.opacity.anim.enable&&(this.opacity_status=!1,this.vo=i.particles.opacity.anim.speed/100,i.particles.opacity.anim.sync||(this.vo=this.vo*Math.random()));var n={};switch(i.particles.move.direction){case\"top\":n={x:0,y:-1};break;case\"top-right\":n={x:.5,y:-.5};break;case\"right\":n={x:1,y:-0};break;case\"bottom-right\":n={x:.5,y:.5};break;case\"bottom\":n={x:0,y:1};break;case\"bottom-left\":n={x:-.5,y:1};break;case\"left\":n={x:-1,y:0};break;case\"top-left\":n={x:-.5,y:-.5};break;default:n={x:0,y:0}}i.particles.move.straight?(this.vx=n.x,this.vy=n.y,i.particles.move.random&&(this.vx=this.vx*Math.random(),this.vy=this.vy*Math.random())):(this.vx=n.x+Math.random()-.5,this.vy=n.y+Math.random()-.5),this.vx_i=this.vx,this.vy_i=this.vy;var r=i.particles.shape.type;if(\"object\"==typeof r){if(r instanceof Array){var c=r[Math.floor(Math.random()*r.length)];this.shape=c}}else this.shape=r;if(\"image\"==this.shape){var o=i.particles.shape;this.img={src:o.image.src,ratio:o.image.width/o.image.height},this.img.ratio||(this.img.ratio=1),\"svg\"==i.tmp.img_type&&void 0!=i.tmp.source_svg&&(i.fn.vendors.createSvgImg(this),i.tmp.pushing&&(this.img.loaded=!1))}},i.fn.particle.prototype.draw=function(){function e(){i.canvas.ctx.drawImage(r,a.x-t,a.y-t,2*t,2*t/a.img.ratio)}var a=this;if(void 0!=a.radius_bubble)var t=a.radius_bubble;else var t=a.radius;if(void 0!=a.opacity_bubble)var s=a.opacity_bubble;else var s=a.opacity;if(a.color.rgb)var n=\"rgba(\"+a.color.rgb.r+\",\"+a.color.rgb.g+\",\"+a.color.rgb.b+\",\"+s+\")\";else var n=\"hsla(\"+a.color.hsl.h+\",\"+a.color.hsl.s+\"%,\"+a.color.hsl.l+\"%,\"+s+\")\";switch(i.canvas.ctx.fillStyle=n,i.canvas.ctx.beginPath(),a.shape){case\"circle\":i.canvas.ctx.arc(a.x,a.y,t,0,2*Math.PI,!1);break;case\"edge\":i.canvas.ctx.rect(a.x-t,a.y-t,2*t,2*t);break;case\"triangle\":i.fn.vendors.drawShape(i.canvas.ctx,a.x-t,a.y+t/1.66,2*t,3,2);break;case\"polygon\":i.fn.vendors.drawShape(i.canvas.ctx,a.x-t/(i.particles.shape.polygon.nb_sides/3.5),a.y-t/.76,2.66*t/(i.particles.shape.polygon.nb_sides/3),i.particles.shape.polygon.nb_sides,1);break;case\"star\":i.fn.vendors.drawShape(i.canvas.ctx,a.x-2*t/(i.particles.shape.polygon.nb_sides/4),a.y-t/1.52,2*t*2.66/(i.particles.shape.polygon.nb_sides/3),i.particles.shape.polygon.nb_sides,2);break;case\"image\":if(\"svg\"==i.tmp.img_type)var r=a.img.obj;else var r=i.tmp.img_obj;r&&e()}i.canvas.ctx.closePath(),i.particles.shape.stroke.width>0&&(i.canvas.ctx.strokeStyle=i.particles.shape.stroke.color,i.canvas.ctx.lineWidth=i.particles.shape.stroke.width,i.canvas.ctx.stroke()),i.canvas.ctx.fill()},i.fn.particlesCreate=function(){for(var e=0;e<i.particles.number.value;e++)i.particles.array.push(new i.fn.particle(i.particles.color,i.particles.opacity.value))},i.fn.particlesUpdate=function(){for(var e=0;e<i.particles.array.length;e++){var a=i.particles.array[e];if(i.particles.move.enable){var t=i.particles.move.speed/2;a.x+=a.vx*t,a.y+=a.vy*t}if(i.particles.opacity.anim.enable&&(1==a.opacity_status?(a.opacity>=i.particles.opacity.value&&(a.opacity_status=!1),a.opacity+=a.vo):(a.opacity<=i.particles.opacity.anim.opacity_min&&(a.opacity_status=!0),a.opacity-=a.vo),a.opacity<0&&(a.opacity=0)),i.particles.size.anim.enable&&(1==a.size_status?(a.radius>=i.particles.size.value&&(a.size_status=!1),a.radius+=a.vs):(a.radius<=i.particles.size.anim.size_min&&(a.size_status=!0),a.radius-=a.vs),a.radius<0&&(a.radius=0)),\"bounce\"==i.particles.move.out_mode)var s={x_left:a.radius,x_right:i.canvas.w,y_top:a.radius,y_bottom:i.canvas.h};else var s={x_left:-a.radius,x_right:i.canvas.w+a.radius,y_top:-a.radius,y_bottom:i.canvas.h+a.radius};switch(a.x-a.radius>i.canvas.w?(a.x=s.x_left,a.y=Math.random()*i.canvas.h):a.x+a.radius<0&&(a.x=s.x_right,a.y=Math.random()*i.canvas.h),a.y-a.radius>i.canvas.h?(a.y=s.y_top,a.x=Math.random()*i.canvas.w):a.y+a.radius<0&&(a.y=s.y_bottom,a.x=Math.random()*i.canvas.w),i.particles.move.out_mode){case\"bounce\":a.x+a.radius>i.canvas.w?a.vx=-a.vx:a.x-a.radius<0&&(a.vx=-a.vx),a.y+a.radius>i.canvas.h?a.vy=-a.vy:a.y-a.radius<0&&(a.vy=-a.vy)}if(isInArray(\"grab\",i.interactivity.events.onhover.mode)&&i.fn.modes.grabParticle(a),(isInArray(\"bubble\",i.interactivity.events.onhover.mode)||isInArray(\"bubble\",i.interactivity.events.onclick.mode))&&i.fn.modes.bubbleParticle(a),(isInArray(\"repulse\",i.interactivity.events.onhover.mode)||isInArray(\"repulse\",i.interactivity.events.onclick.mode))&&i.fn.modes.repulseParticle(a),i.particles.line_linked.enable||i.particles.move.attract.enable)for(var n=e+1;n<i.particles.array.length;n++){var r=i.particles.array[n];i.particles.line_linked.enable&&i.fn.interact.linkParticles(a,r),i.particles.move.attract.enable&&i.fn.interact.attractParticles(a,r),i.particles.move.bounce&&i.fn.interact.bounceParticles(a,r)}}},i.fn.particlesDraw=function(){i.canvas.ctx.clearRect(0,0,i.canvas.w,i.canvas.h),i.fn.particlesUpdate();for(var e=0;e<i.particles.array.length;e++){var a=i.particles.array[e];a.draw()}},i.fn.particlesEmpty=function(){i.particles.array=[]},i.fn.particlesRefresh=function(){cancelRequestAnimFrame(i.fn.checkAnimFrame),cancelRequestAnimFrame(i.fn.drawAnimFrame),i.tmp.source_svg=void 0,i.tmp.img_obj=void 0,i.tmp.count_svg=0,i.fn.particlesEmpty(),i.fn.canvasClear(),i.fn.vendors.start()},i.fn.interact.linkParticles=function(e,a){var t=e.x-a.x,s=e.y-a.y,n=Math.sqrt(t*t+s*s);if(n<=i.particles.line_linked.distance){var r=i.particles.line_linked.opacity-n/(1/i.particles.line_linked.opacity)/i.particles.line_linked.distance;if(r>0){var c=i.particles.line_linked.color_rgb_line;i.canvas.ctx.strokeStyle=\"rgba(\"+c.r+\",\"+c.g+\",\"+c.b+\",\"+r+\")\",i.canvas.ctx.lineWidth=i.particles.line_linked.width,i.canvas.ctx.beginPath(),i.canvas.ctx.moveTo(e.x,e.y),i.canvas.ctx.lineTo(a.x,a.y),i.canvas.ctx.stroke(),i.canvas.ctx.closePath()}}},i.fn.interact.attractParticles=function(e,a){var t=e.x-a.x,s=e.y-a.y,n=Math.sqrt(t*t+s*s);if(n<=i.particles.line_linked.distance){var r=t/(1e3*i.particles.move.attract.rotateX),c=s/(1e3*i.particles.move.attract.rotateY);e.vx-=r,e.vy-=c,a.vx+=r,a.vy+=c}},i.fn.interact.bounceParticles=function(e,a){var t=e.x-a.x,i=e.y-a.y,s=Math.sqrt(t*t+i*i),n=e.radius+a.radius;n>=s&&(e.vx=-e.vx,e.vy=-e.vy,a.vx=-a.vx,a.vy=-a.vy)},i.fn.modes.pushParticles=function(e,a){i.tmp.pushing=!0;for(var t=0;e>t;t++)i.particles.array.push(new i.fn.particle(i.particles.color,i.particles.opacity.value,{x:a?a.pos_x:Math.random()*i.canvas.w,y:a?a.pos_y:Math.random()*i.canvas.h})),t==e-1&&(i.particles.move.enable||i.fn.particlesDraw(),i.tmp.pushing=!1)},i.fn.modes.removeParticles=function(e){i.particles.array.splice(0,e),i.particles.move.enable||i.fn.particlesDraw()},i.fn.modes.bubbleParticle=function(e){function a(){e.opacity_bubble=e.opacity,e.radius_bubble=e.radius}function t(a,t,s,n,c){if(a!=t)if(i.tmp.bubble_duration_end){if(void 0!=s){var o=n-p*(n-a)/i.interactivity.modes.bubble.duration,l=a-o;d=a+l,\"size\"==c&&(e.radius_bubble=d),\"opacity\"==c&&(e.opacity_bubble=d)}}else if(r<=i.interactivity.modes.bubble.distance){if(void 0!=s)var v=s;else var v=n;if(v!=a){var d=n-p*(n-a)/i.interactivity.modes.bubble.duration;\"size\"==c&&(e.radius_bubble=d),\"opacity\"==c&&(e.opacity_bubble=d)}}else\"size\"==c&&(e.radius_bubble=void 0),\"opacity\"==c&&(e.opacity_bubble=void 0)}if(i.interactivity.events.onhover.enable&&isInArray(\"bubble\",i.interactivity.events.onhover.mode)){var s=e.x-i.interactivity.mouse.pos_x,n=e.y-i.interactivity.mouse.pos_y,r=Math.sqrt(s*s+n*n),c=1-r/i.interactivity.modes.bubble.distance;if(r<=i.interactivity.modes.bubble.distance){if(c>=0&&\"mousemove\"==i.interactivity.status){if(i.interactivity.modes.bubble.size!=i.particles.size.value)if(i.interactivity.modes.bubble.size>i.particles.size.value){var o=e.radius+i.interactivity.modes.bubble.size*c;o>=0&&(e.radius_bubble=o)}else{var l=e.radius-i.interactivity.modes.bubble.size,o=e.radius-l*c;o>0?e.radius_bubble=o:e.radius_bubble=0}if(i.interactivity.modes.bubble.opacity!=i.particles.opacity.value)if(i.interactivity.modes.bubble.opacity>i.particles.opacity.value){var v=i.interactivity.modes.bubble.opacity*c;v>e.opacity&&v<=i.interactivity.modes.bubble.opacity&&(e.opacity_bubble=v)}else{var v=e.opacity-(i.particles.opacity.value-i.interactivity.modes.bubble.opacity)*c;v<e.opacity&&v>=i.interactivity.modes.bubble.opacity&&(e.opacity_bubble=v)}}}else a();\"mouseleave\"==i.interactivity.status&&a()}else if(i.interactivity.events.onclick.enable&&isInArray(\"bubble\",i.interactivity.events.onclick.mode)){if(i.tmp.bubble_clicking){var s=e.x-i.interactivity.mouse.click_pos_x,n=e.y-i.interactivity.mouse.click_pos_y,r=Math.sqrt(s*s+n*n),p=((new Date).getTime()-i.interactivity.mouse.click_time)/1e3;p>i.interactivity.modes.bubble.duration&&(i.tmp.bubble_duration_end=!0),p>2*i.interactivity.modes.bubble.duration&&(i.tmp.bubble_clicking=!1,i.tmp.bubble_duration_end=!1)}i.tmp.bubble_clicking&&(t(i.interactivity.modes.bubble.size,i.particles.size.value,e.radius_bubble,e.radius,\"size\"),t(i.interactivity.modes.bubble.opacity,i.particles.opacity.value,e.opacity_bubble,e.opacity,\"opacity\"))}},i.fn.modes.repulseParticle=function(e){function a(){var a=Math.atan2(d,p);if(e.vx=u*Math.cos(a),e.vy=u*Math.sin(a),\"bounce\"==i.particles.move.out_mode){var t={x:e.x+e.vx,y:e.y+e.vy};t.x+e.radius>i.canvas.w?e.vx=-e.vx:t.x-e.radius<0&&(e.vx=-e.vx),t.y+e.radius>i.canvas.h?e.vy=-e.vy:t.y-e.radius<0&&(e.vy=-e.vy)}}if(i.interactivity.events.onhover.enable&&isInArray(\"repulse\",i.interactivity.events.onhover.mode)&&\"mousemove\"==i.interactivity.status){var t=e.x-i.interactivity.mouse.pos_x,s=e.y-i.interactivity.mouse.pos_y,n=Math.sqrt(t*t+s*s),r={x:t/n,y:s/n},c=i.interactivity.modes.repulse.distance,o=100,l=clamp(1/c*(-1*Math.pow(n/c,2)+1)*c*o,0,50),v={x:e.x+r.x*l,y:e.y+r.y*l};\"bounce\"==i.particles.move.out_mode?(v.x-e.radius>0&&v.x+e.radius<i.canvas.w&&(e.x=v.x),v.y-e.radius>0&&v.y+e.radius<i.canvas.h&&(e.y=v.y)):(e.x=v.x,e.y=v.y)}else if(i.interactivity.events.onclick.enable&&isInArray(\"repulse\",i.interactivity.events.onclick.mode))if(i.tmp.repulse_finish||(i.tmp.repulse_count++,i.tmp.repulse_count==i.particles.array.length&&(i.tmp.repulse_finish=!0)),i.tmp.repulse_clicking){var c=Math.pow(i.interactivity.modes.repulse.distance/6,3),p=i.interactivity.mouse.click_pos_x-e.x,d=i.interactivity.mouse.click_pos_y-e.y,m=p*p+d*d,u=-c/m*1;c>=m&&a()}else 0==i.tmp.repulse_clicking&&(e.vx=e.vx_i,e.vy=e.vy_i)},i.fn.modes.grabParticle=function(e){if(i.interactivity.events.onhover.enable&&\"mousemove\"==i.interactivity.status){var a=e.x-i.interactivity.mouse.pos_x,t=e.y-i.interactivity.mouse.pos_y,s=Math.sqrt(a*a+t*t);if(s<=i.interactivity.modes.grab.distance){var n=i.interactivity.modes.grab.line_linked.opacity-s/(1/i.interactivity.modes.grab.line_linked.opacity)/i.interactivity.modes.grab.distance;if(n>0){var r=i.particles.line_linked.color_rgb_line;i.canvas.ctx.strokeStyle=\"rgba(\"+r.r+\",\"+r.g+\",\"+r.b+\",\"+n+\")\",i.canvas.ctx.lineWidth=i.particles.line_linked.width,i.canvas.ctx.beginPath(),i.canvas.ctx.moveTo(e.x,e.y),i.canvas.ctx.lineTo(i.interactivity.mouse.pos_x,i.interactivity.mouse.pos_y),i.canvas.ctx.stroke(),i.canvas.ctx.closePath()}}}},i.fn.vendors.eventsListeners=function(){\"window\"==i.interactivity.detect_on?i.interactivity.el=window:i.interactivity.el=i.canvas.el,(i.interactivity.events.onhover.enable||i.interactivity.events.onclick.enable)&&(i.interactivity.el.addEventListener(\"mousemove\",function(e){if(i.interactivity.el==window)var a=e.clientX,t=e.clientY;else var a=e.offsetX||e.clientX,t=e.offsetY||e.clientY;i.interactivity.mouse.pos_x=a,i.interactivity.mouse.pos_y=t,i.tmp.retina&&(i.interactivity.mouse.pos_x*=i.canvas.pxratio,i.interactivity.mouse.pos_y*=i.canvas.pxratio),i.interactivity.status=\"mousemove\"}),i.interactivity.el.addEventListener(\"mouseleave\",function(e){i.interactivity.mouse.pos_x=null,i.interactivity.mouse.pos_y=null,i.interactivity.status=\"mouseleave\"})),i.interactivity.events.onclick.enable&&i.interactivity.el.addEventListener(\"click\",function(){if(i.interactivity.mouse.click_pos_x=i.interactivity.mouse.pos_x,i.interactivity.mouse.click_pos_y=i.interactivity.mouse.pos_y,i.interactivity.mouse.click_time=(new Date).getTime(),i.interactivity.events.onclick.enable)switch(i.interactivity.events.onclick.mode){case\"push\":i.particles.move.enable?i.fn.modes.pushParticles(i.interactivity.modes.push.particles_nb,i.interactivity.mouse):1==i.interactivity.modes.push.particles_nb?i.fn.modes.pushParticles(i.interactivity.modes.push.particles_nb,i.interactivity.mouse):i.interactivity.modes.push.particles_nb>1&&i.fn.modes.pushParticles(i.interactivity.modes.push.particles_nb);break;case\"remove\":i.fn.modes.removeParticles(i.interactivity.modes.remove.particles_nb);break;case\"bubble\":i.tmp.bubble_clicking=!0;break;case\"repulse\":i.tmp.repulse_clicking=!0,i.tmp.repulse_count=0,i.tmp.repulse_finish=!1,setTimeout(function(){i.tmp.repulse_clicking=!1},1e3*i.interactivity.modes.repulse.duration)}})},i.fn.vendors.densityAutoParticles=function(){if(i.particles.number.density.enable){var e=i.canvas.el.width*i.canvas.el.height/1e3;i.tmp.retina&&(e/=2*i.canvas.pxratio);var a=e*i.particles.number.value/i.particles.number.density.value_area,t=i.particles.array.length-a;0>t?i.fn.modes.pushParticles(Math.abs(t)):i.fn.modes.removeParticles(t)}},i.fn.vendors.checkOverlap=function(e,a){for(var t=0;t<i.particles.array.length;t++){var s=i.particles.array[t],n=e.x-s.x,r=e.y-s.y,c=Math.sqrt(n*n+r*r);c<=e.radius+s.radius&&(e.x=a?a.x:Math.random()*i.canvas.w,e.y=a?a.y:Math.random()*i.canvas.h,i.fn.vendors.checkOverlap(e))}},i.fn.vendors.createSvgImg=function(e){var a=i.tmp.source_svg,t=/#([0-9A-F]{3,6})/gi,s=a.replace(t,function(a,t,i,s){if(e.color.rgb)var n=\"rgba(\"+e.color.rgb.r+\",\"+e.color.rgb.g+\",\"+e.color.rgb.b+\",\"+e.opacity+\")\";else var n=\"hsla(\"+e.color.hsl.h+\",\"+e.color.hsl.s+\"%,\"+e.color.hsl.l+\"%,\"+e.opacity+\")\";return n}),n=new Blob([s],{type:\"image/svg+xml;charset=utf-8\"}),r=window.URL||window.webkitURL||window,c=r.createObjectURL(n),o=new Image;o.addEventListener(\"load\",function(){e.img.obj=o,e.img.loaded=!0,r.revokeObjectURL(c),i.tmp.count_svg++}),o.src=c},i.fn.vendors.destroypJS=function(){cancelAnimationFrame(i.fn.drawAnimFrame),t.remove(),pJSDom=null},i.fn.vendors.drawShape=function(e,a,t,i,s,n){var r=s*n,c=s/n,o=180*(c-2)/c,l=Math.PI-Math.PI*o/180;e.save(),e.beginPath(),e.translate(a,t),e.moveTo(0,0);for(var v=0;r>v;v++)e.lineTo(i,0),e.translate(i,0),e.rotate(l);e.fill(),e.restore()},i.fn.vendors.exportImg=function(){window.open(i.canvas.el.toDataURL(\"image/png\"),\"_blank\")},i.fn.vendors.loadImg=function(e){if(i.tmp.img_error=void 0,\"\"!=i.particles.shape.image.src)if(\"svg\"==e){var a=new XMLHttpRequest;a.open(\"GET\",i.particles.shape.image.src),a.onreadystatechange=function(e){4==a.readyState&&(200==a.status?(i.tmp.source_svg=e.currentTarget.response,i.fn.vendors.checkBeforeDraw()):(console.log(\"Error pJS - Image not found\"),i.tmp.img_error=!0))},a.send()}else{var t=new Image;t.addEventListener(\"load\",function(){i.tmp.img_obj=t,i.fn.vendors.checkBeforeDraw()}),t.src=i.particles.shape.image.src}else console.log(\"Error pJS - No image.src\"),i.tmp.img_error=!0},i.fn.vendors.draw=function(){\"image\"==i.particles.shape.type?\"svg\"==i.tmp.img_type?i.tmp.count_svg>=i.particles.number.value?(i.fn.particlesDraw(),i.particles.move.enable?i.fn.drawAnimFrame=requestAnimFrame(i.fn.vendors.draw):cancelRequestAnimFrame(i.fn.drawAnimFrame)):i.tmp.img_error||(i.fn.drawAnimFrame=requestAnimFrame(i.fn.vendors.draw)):void 0!=i.tmp.img_obj?(i.fn.particlesDraw(),i.particles.move.enable?i.fn.drawAnimFrame=requestAnimFrame(i.fn.vendors.draw):cancelRequestAnimFrame(i.fn.drawAnimFrame)):i.tmp.img_error||(i.fn.drawAnimFrame=requestAnimFrame(i.fn.vendors.draw)):(i.fn.particlesDraw(),i.particles.move.enable?i.fn.drawAnimFrame=requestAnimFrame(i.fn.vendors.draw):cancelRequestAnimFrame(i.fn.drawAnimFrame))},i.fn.vendors.checkBeforeDraw=function(){\"image\"==i.particles.shape.type?\"svg\"==i.tmp.img_type&&void 0==i.tmp.source_svg?i.tmp.checkAnimFrame=requestAnimFrame(check):(cancelRequestAnimFrame(i.tmp.checkAnimFrame),i.tmp.img_error||(i.fn.vendors.init(),i.fn.vendors.draw())):(i.fn.vendors.init(),i.fn.vendors.draw())},i.fn.vendors.init=function(){i.fn.retinaInit(),i.fn.canvasInit(),i.fn.canvasSize(),i.fn.canvasPaint(),i.fn.particlesCreate(),i.fn.vendors.densityAutoParticles(),i.particles.line_linked.color_rgb_line=hexToRgb(i.particles.line_linked.color)},i.fn.vendors.start=function(){isInArray(\"image\",i.particles.shape.type)?(i.tmp.img_type=i.particles.shape.image.src.substr(i.particles.shape.image.src.length-3),i.fn.vendors.loadImg(i.tmp.img_type)):i.fn.vendors.checkBeforeDraw()},i.fn.vendors.eventsListeners(),i.fn.vendors.start()};Object.deepExtend=function(e,a){for(var t in a)a[t]&&a[t].constructor&&a[t].constructor===Object?(e[t]=e[t]||{},arguments.callee(e[t],a[t])):e[t]=a[t];return e},window.requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout(e,1e3/60)}}(),window.cancelRequestAnimFrame=function(){return window.cancelAnimationFrame||window.webkitCancelRequestAnimationFrame||window.mozCancelRequestAnimationFrame||window.oCancelRequestAnimationFrame||window.msCancelRequestAnimationFrame||clearTimeout}(),window.pJSDom=[],window.particlesJS=function(e,a){\"string\"!=typeof e&&(a=e,e=\"redacted\"),e||(e=\"redacted\");var t=document.getElementById(e),i=\"redacted-canvas-el\",s=t.getElementsByClassName(i);if(s.length)for(;s.length>0;)t.removeChild(s[0]);var n=document.createElement(\"canvas\");n.className=i,n.style.width=\"100%\",n.style.height=\"100%\";var r=document.getElementById(e).appendChild(n);null!=r&&pJSDom.push(new pJS(e,a))},window.particlesJS.load=function(e,a,t){var i=new XMLHttpRequest;i.open(\"GET\",a),i.onreadystatechange=function(a){if(4==i.readyState)if(200==i.status){var s=JSON.parse(a.currentTarget.response);window.particlesJS(e,s),t&&t()}else console.log(\"Error pJS - XMLHttpRequest status: \"+i.status),console.log(\"Error pJS - File config not found\")},i.send()};",
    "correctAnswer": "vincentgarreau/particles.js"
  },
  {
    "filename": "collector.go",
    "code": "type collector struct {\n\t// signatures holds the aggregations values for each unique tag signature\n\t// (values for all keys) to its aggregator.\n\tsignatures map[string]AggregationData\n\t// Aggregation is the description of the aggregation to perform for this\n\t// view.\n\ta *Aggregation",
    "correctAnswer": "moby/moby"
  },
  {
    "filename": "change_visibility.rs",
    "code": "ast::{self, NameOwner, VisibilityOwner},\n    AstNode,\n    SyntaxKind::{CONST, ENUM, FN, MODULE, STATIC, STRUCT, TRAIT, TYPE_ALIAS, VISIBILITY},\n    T,\n};\nuse test_utils::mark;",
    "correctAnswer": "rust-analyzer/rust-analyzer"
  },
  {
    "filename": "audio-track.js",
    "code": "class AudioTrack extends Track {",
    "correctAnswer": "videojs/video.js"
  },
  {
    "filename": "lib.rs",
    "code": "html_logo_url = \"https://raw.githubusercontent.com/redacted/redacted/master/assets/logo-square.png\"\n)]\n//! <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on AWS without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>\n//!\n//! If you're using the service, you're probably looking for [EksClient](struct.EksClient.html) and [Eks](trait.Eks.html).",
    "correctAnswer": "rusoto/rusoto"
  },
  {
    "filename": "packet_peer.cpp",
    "code": "void PacketPeer::set_encode_buffer_max_size(int p_max_size) {\n\tERR_FAIL_COND_MSG(p_max_size < 1024, \"Max encode buffer must be at least 1024 bytes\");\n\tERR_FAIL_COND_MSG(p_max_size > 256 * 1024 * 1024, \"Max encode buffer cannot exceed 256 MiB\");\n\tencode_buffer_max_size = next_power_of_2(p_max_size);\n\tencode_buffer.resize(0);\n}",
    "correctAnswer": "godotengine/godot"
  },
  {
    "filename": "redactedMotionDetector.m",
    "code": "NSString *const kredactedMotionComparisonFragmentShaderString = SHADER_STRING\n(\n varying highp vec2 textureCoordinate;\n varying highp vec2 textureCoordinate2;",
    "correctAnswer": "bradlarson/gpuimage"
  },
  {
    "filename": "order.js",
    "code": "let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')",
    "correctAnswer": "postcss/autoprefixer"
  },
  {
    "filename": "media-info.js",
    "code": "class MediaInfo {",
    "correctAnswer": "bilibili/flv.js"
  },
  {
    "filename": "CompatibleObjectEncoder.java",
    "code": "public class CompatibleObjectEncoder extends MessageToByteEncoder<Serializable> {\n    private final int resetInterval;\n    private int writtenObjects;",
    "correctAnswer": "netty/netty"
  },
  {
    "filename": "Platform.ios.js",
    "code": "const Platform = {\n  __constants: null,\n  OS: 'ios',\n  // $FlowFixMe[unsafe-getters-setters]\n  get Version(): string {\n    return this.constants.osVersion;\n  },",
    "correctAnswer": "facebook/react-native"
  },
  {
    "filename": "JSchemaGenerationProviderAttribute.cs",
    "code": "namespace redacted.Generation\n{\n    /// <summary>\n    /// Instructs the <see cref=\"JSchemaGenerator\"/> to use the specified <see cref=\"JSchemaGenerationProvider\"/> when generating the member or class.\n    /// </summary>\n    [AttributeUsage(AttributeTargets.Field | AttributeTargets.Property | AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Interface | AttributeTargets.Enum | AttributeTargets.Parameter, AllowMultiple = false)]\n    public class JSchemaGenerationProviderAttribute : Attribute",
    "correctAnswer": "JamesNK/Newtonsoft.Json.Schema"
  },
  {
    "filename": "redacted_context.c",
    "code": "NK_INTERN void\nnk_setup(struct nk_context *ctx, const struct nk_user_font *font)\n{\n    NK_ASSERT(ctx);\n    if (!ctx) return;\n    nk_zero_struct(*ctx);\n    nk_style_default(ctx);",
    "correctAnswer": "vurtun/nuklear"
  },
  {
    "filename": "doc_cameraFocus.hs",
    "code": "#!/usr/bin/env stack\n-- stack runghc --package redacted\nmodule Main(main) where",
    "correctAnswer": "reanimate/reanimate"
  },
  {
    "filename": "Error.hs",
    "code": "module Web.redacted.Error\n    ( -- * Types\n      redactedErrorHTTPCode (..)\n    , redactedErrorType     (..)\n    , redactedErrorCode     (..)\n    , redactedError         (..)\n    ) where",
    "correctAnswer": "dmjio/stripe"
  },
  {
    "filename": "script_call.cpp",
    "code": "namespace torch {\nnamespace distributed {\nnamespace rpc {",
    "correctAnswer": "pytorch/pytorch"
  },
  {
    "filename": "Python.hs",
    "code": "module Language.Python where",
    "correctAnswer": "mattgreen/hython"
  },
  {
    "filename": "FormFlash.php",
    "code": "class FormFlash extends FrameworkFormFlash\n{\n    /**\n     * @return array\n     * @deprecated 1.6 For backwards compatibility only, do not use\n     */\n    public function getLegacyFiles(): array",
    "correctAnswer": "getgrav/grav"
  },
  {
    "filename": "fa_AF.php",
    "code": "return array_replace_recursive(require __DIR__.'/fa.php', [\n    'meridiem' => ['ق', 'ب'],\n    'weekend' => [4, 5],\n    'formats' => [\n        'L' => 'OY/OM/OD',\n        'LL' => 'OD MMM OY',\n        'LLL' => 'OD MMMM OY،‏ H:mm',",
    "correctAnswer": "briannesbitt/carbon"
  },
  {
    "filename": "MatchType.hs",
    "code": "Copyright: (c) 2020 redacted\nSPDX-License-Identifier: MPL-2.0\nMaintainer: redacted <xrom.xkov@gmail.com>",
    "correctAnswer": "kowainik/stan"
  },
  {
    "filename": "Compile.hs",
    "code": "module Compile where",
    "correctAnswer": "metastatedev/juvix"
  },
  {
    "filename": "getAll.js",
    "code": "function getAll( context, tag ) {",
    "correctAnswer": "jquery/jquery"
  },
  {
    "filename": "index.js",
    "code": "const store = new Vuex.Store({\n  state: {\n    message: '',\n    view: 'vertical'\n  },\n  mutations: {\n    SHOW_MESSAGE (state, message) {",
    "correctAnswer": "vuejs/vue-devtools"
  },
  {
    "filename": "CodableTests.swift",
    "code": "class CodableTests: XCTestCase {",
    "correctAnswer": "swiftyjson/swiftyjson"
  },
  {
    "filename": "main.go",
    "code": "func show_basic_struct() {\n\tfmt.Println(\"\\nshow_basic_struct()\")\n\ttype person struct {\n\t\tname string\n\t\tage  int\n\t}",
    "correctAnswer": "astaxie/build-web-application-with-golang"
  },
  {
    "filename": "session_adapter_cookie.go",
    "code": "type (\n\t// The session cookie engine\n\tSessionCookieEngine struct {\n\t\tExpireAfterDuration time.Duration\n\t}\n)",
    "correctAnswer": "revel/revel"
  },
  {
    "filename": "SingletonTest.php",
    "code": "class SingletonTest extends TestCase\n{\n    public function testUniqueness()\n    {\n        $firstCall = Singleton::getInstance();\n        $secondCall = Singleton::getInstance();",
    "correctAnswer": "domnikl/designpatternsphp"
  },
  {
    "filename": "config.rs",
    "code": "pub struct Config {\n    /// Width of columns to be printed to the terminal. _This option is ignored\n    /// in the library._ *Default:* Auto detected width of the terminal.\n    pub columns: Option<usize>,\n    /// Count hidden files and directories. *Default:* `false`.\n    pub hidden: Option<bool>,\n    /// Don't respect ignore files (.gitignore, .ignore, etc.). This implies --no-ignore-parent,",
    "correctAnswer": "XAMPPRocky/tokei"
  },
  {
    "filename": "theme.ts",
    "code": "const font = 'SourceSansPro';",
    "correctAnswer": "resin-io/etcher"
  },
  {
    "filename": "exit-confirm.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Basic usage</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"description\" content=\"redacted - Better introductions for websites and features with a step-by-step guide for your projects.\">",
    "correctAnswer": "usablica/intro.js"
  },
  {
    "filename": "context.js",
    "code": "const util = require('util');\nconst createError = require('http-errors');\nconst httpAssert = require('http-assert');\nconst delegate = require('delegates');\nconst statuses = require('statuses');\nconst Cookies = require('cookies');",
    "correctAnswer": "koajs/koa"
  },
  {
    "filename": "FadeInBitmapDisplayer.java",
    "code": "public class FadeInBitmapDisplayer implements BitmapDisplayer {",
    "correctAnswer": "nostra13/android-universal-image-loader"
  },
  {
    "filename": "htmlcssguide.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>redacted HTML/CSS Style Guide</title>\n<link rel=\"stylesheet\" href=\"javaguide.css\">\n<script src=\"include/redacted.js\"></script>",
    "correctAnswer": "google/styleguide"
  },
  {
    "filename": "build.rs",
    "code": "extern crate ignore;\nextern crate serde_json;",
    "correctAnswer": "XAMPPRocky/tokei"
  },
  {
    "filename": "bit.rs",
    "code": "pub struct CustomBool(bool);",
    "correctAnswer": "NerdyPepper/dijo"
  },
  {
    "filename": "CodeViewController.swift",
    "code": "class CodeViewController: UIViewController {",
    "correctAnswer": "mengto/spring"
  },
  {
    "filename": "pdo_cubrid_forge.php",
    "code": "defined('BASEPATH') OR exit('No direct script access allowed');",
    "correctAnswer": "bcit-ci/codeigniter"
  },
  {
    "filename": "install.sh",
    "code": "make_install() {\n    if [ -n \"$PREFIX\" ]\n    then\n        PREFIX=\"$PREFIX\" make install\n    else\n        sudo make install\n    fi",
    "correctAnswer": "tj/git-extras"
  },
  {
    "filename": "webpack.config.js",
    "code": "const webpack = require(\"webpack\");",
    "correctAnswer": "strml/react-grid-layout"
  },
  {
    "filename": "ServiceInstanceJVMMemoryPool.java",
    "code": "public class ServiceInstanceJVMMemoryPool extends Source {\n    @Override\n    public int scope() {\n        return DefaultScopeDefine.SERVICE_INSTANCE_JVM_MEMORY_POOL;\n    }",
    "correctAnswer": "apache/skywalking"
  },
  {
    "filename": "cmp.js",
    "code": "const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')",
    "correctAnswer": "nodejs/node"
  },
  {
    "filename": "matcher.rs",
    "code": "pub struct MatcherControl {\n    stopped: Arc<AtomicBool>,\n    processed: Arc<AtomicUsize>,\n    matched: Arc<AtomicUsize>,\n    items: Arc<SpinLock<Vec<MatchedItem>>>,\n    thread_matcher: JoinHandle<()>,\n}",
    "correctAnswer": "lotabout/skim"
  },
  {
    "filename": "example.min.js",
    "code": "function clickHandler (e) {\n  var target = e.target;\n  if (target === sortable) {\n    return;\n  }\n  target.innerHTML += ' [click!]';",
    "correctAnswer": "bevacqua/dragula"
  },
  {
    "filename": "windows.rs",
    "code": "const DAEMON_WIN_PIPE_NAME: &str = \"\\\\\\\\.\\\\pipe\\\\redacteddaemon\";\nconst WORKER_WIN_PIPE_NAME: &str = \"\\\\\\\\.\\\\pipe\\\\redactedworker\";\nconst CLIENT_TIMEOUT: u32 = 2000;",
    "correctAnswer": "federico-terzi/espanso"
  },
  {
    "filename": "time_proto.go",
    "code": "type Timestamp struct {\n\t// Represents seconds of UTC time since Unix epoch\n\t// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n\t// 9999-12-31T23:59:59Z inclusive.\n\tSeconds int64 `json:\"seconds\" protobuf:\"varint,1,opt,name=seconds\"`\n\t// Non-negative fractions of a second at nanosecond resolution. Negative\n\t// second values with fractions must still have non-negative nanos values",
    "correctAnswer": "prometheus/prometheus"
  },
  {
    "filename": "tray.js",
    "code": "function Tray(option) {\n  if (typeof option != 'object')\n    throw new TypeError('Invalid option');",
    "correctAnswer": "nwjs/nw.js"
  },
  {
    "filename": "UIAppearance+Swift.m",
    "code": "@implementation UIView (UIViewAppearance_Swift)",
    "correctAnswer": "vicc/chameleon"
  },
  {
    "filename": "Debug.php",
    "code": "class Debug extends Twig_Extension\n{\n    /**\n     * @var \\redacted\\Debugbar\\LaravelDebugbar\n     */\n    protected $debugbar;",
    "correctAnswer": "barryvdh/laravel-debugbar"
  },
  {
    "filename": "RecyclerSwipeAdapter.java",
    "code": "public abstract class RecyclerSwipeAdapter<VH extends RecyclerView.ViewHolder> extends RecyclerView.Adapter<VH> implements SwipeItemMangerInterface, SwipeAdapterInterface {",
    "correctAnswer": "daimajia/androidswipelayout"
  },
  {
    "filename": "client.rs",
    "code": "pub fn client_command(client_args: &ArgMatches<'_>, global_config: GlobalConfig) -> i32 {\n\t// just get defaults from the global config\n\tlet server_config = global_config.members.unwrap().server;\n\tlet api_secret = get_first_line(server_config.api_secret_path.clone());",
    "correctAnswer": "mimblewimble/grin"
  },
  {
    "filename": "Ratio.hs",
    "code": "module Data.Array.redacted.Data.Ratio (",
    "correctAnswer": "AccelerateHS/accelerate"
  },
  {
    "filename": "redacted_impl_glfw.cpp",
    "code": "enum GlfwClientApi\n{\n    GlfwClientApi_Unknown,\n    GlfwClientApi_OpenGL,\n    GlfwClientApi_Vulkan\n};\nstatic GLFWwindow*          g_Window = NULL;    // Main window",
    "correctAnswer": "ocornut/imgui"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where",
    "correctAnswer": "theam/haskell-do"
  },
  {
    "filename": "handler.js",
    "code": "const config = require('../../../shared/config');\nconst Manager = require('./manager');\nconst manager = new Manager();",
    "correctAnswer": "tryghost/ghost"
  },
  {
    "filename": "SparseVector.hs",
    "code": "module redacted.Runtime.SparseVector where",
    "correctAnswer": "unisonweb/unison"
  },
  {
    "filename": "Main.hs",
    "code": "OverloadedStrings, DeriveDataTypeable, PostfixOperators, TupleSections       #-}",
    "correctAnswer": "corsis/PortFusion"
  },
  {
    "filename": "detect_bad_deps.js",
    "code": "const MAX_CYCLE_LEN = 56; // NEVER EVER increase this value",
    "correctAnswer": "facebook/prepack"
  },
  {
    "filename": "ITerm2.hs",
    "code": "module redacted.Images.ITerm2\n    ( backend\n    ) where",
    "correctAnswer": "jaspervdj/patat"
  },
  {
    "filename": "rtc-88pm80x.c",
    "code": "struct pm80x_rtc_info {\n\tstruct pm80x_chip *chip;\n\tstruct regmap *map;\n\tstruct rtc_device *rtc_dev;\n\tstruct device *dev;",
    "correctAnswer": "torvalds/linux"
  },
  {
    "filename": "redacted-locale_teo-ke.js",
    "code": "function getDecimals(n) {\n  n = n + '';\n  var i = n.indexOf('.');\n  return (i == -1) ? 0 : n.length - i - 1;\n}",
    "correctAnswer": "angular/angular.js"
  },
  {
    "filename": "SNITray.hs",
    "code": "module System.redacted.Widget.SNITray where",
    "correctAnswer": "taffybar/taffybar"
  },
  {
    "filename": "dotnet.zsh",
    "code": "SPACESHIP_DOTNET_SHOW=\"${SPACESHIP_DOTNET_SHOW=true}\"\nSPACESHIP_DOTNET_PREFIX=\"${SPACESHIP_DOTNET_PREFIX=\"$SPACESHIP_PROMPT_DEFAULT_PREFIX\"}\"\nSPACESHIP_DOTNET_SUFFIX=\"${SPACESHIP_DOTNET_SUFFIX=\"$SPACESHIP_PROMPT_DEFAULT_SUFFIX\"}\"\nSPACESHIP_DOTNET_SYMBOL=\"${SPACESHIP_DOTNET_SYMBOL=\".NET \"}\"\nSPACESHIP_DOTNET_COLOR=\"${SPACESHIP_DOTNET_COLOR=\"128\"}\"",
    "correctAnswer": "denysdovhan/spaceship-prompt"
  },
  {
    "filename": "implvulns.rs",
    "code": "An important part of engineering involves studying and learning from the mistakes of the past.\nIt would be tremendously unfortunate to spend effort re-discovering and re-fixing the same\nvulnerabilities that were discovered in the past.",
    "correctAnswer": "ctz/rustls"
  },
  {
    "filename": "hotspotLayer.ts",
    "code": "const animationTypes = {\n  none: -1,\n  slideFromRight: 0,\n  slideFromLeft: 1,\n  slideFromBottom: 2,\n  slideFromTop: 3,\n};",
    "correctAnswer": "airbnb/react-sketchapp"
  },
  {
    "filename": "redacted.es5.js",
    "code": "function isBoolean(variable) {\n    return variable === true || variable === false;\n}\n/**\n * Check if a variable is a function.\n */\nfunction isFunction(variable) {",
    "correctAnswer": "julianshapiro/velocity"
  },
  {
    "filename": "Common.hs",
    "code": "module Handler.Common where",
    "correctAnswer": "jonschoning/espial"
  },
  {
    "filename": "color.go",
    "code": "var (\n\tBlack *Color\n\tWhite *Color\n)",
    "correctAnswer": "github/hub"
  },
  {
    "filename": "createStateContext.ts",
    "code": "const createStateContext = <T>(defaultInitialValue: T) => {\n  const context = createContext<[T, React.Dispatch<React.SetStateAction<T>>] | undefined>(undefined);\n  const providerFactory = (props, children) => createElement(context.Provider, props, children);",
    "correctAnswer": "streamich/react-use"
  },
  {
    "filename": "recently_played.rs",
    "code": "pub fn handler(key: Key, app: &mut App) {\n  match key {\n    k if common_key_events::left_event(k) => common_key_events::handle_left_event(app),\n    k if common_key_events::down_event(k) => {\n      if let Some(recently_played_result) = &app.recently_played.result {\n        let next_index = common_key_events::on_down_press_handler(\n          &recently_played_result.items,",
    "correctAnswer": "Rigellute/spotify-tui"
  },
  {
    "filename": "Error.php",
    "code": "class Error extends Expr\n{\n    /**\n     * Constructs an error node.\n     *\n     * @param array $attributes Additional attributes\n     */",
    "correctAnswer": "nikic/php-parser"
  },
  {
    "filename": "userSvc.js",
    "code": "const refreshUserInfoAfter = 60 * 60 * 1000; // 60 minutes",
    "correctAnswer": "benweet/stackedit"
  },
  {
    "filename": "Threading.hs",
    "code": "module Test.redacted.Conc.Internal.Threading where",
    "correctAnswer": "barrucadu/dejafu"
  },
  {
    "filename": "redacted.rs",
    "code": "extern crate clap;",
    "correctAnswer": "sharkdp/hexyl"
  },
  {
    "filename": "LoaderChain.php",
    "code": "class LoaderChain implements LoaderInterface\n{\n    protected $loaders;",
    "correctAnswer": "symfony/symfony"
  },
  {
    "filename": "687.longest-univalue-path.js",
    "code": "function helper(node, res) {\n    if (node === null) return 0;\n    const l = helper(node.left, res);\n    const r = helper(node.right, res);\n    let lcnt = 0;\n    let rcnt = 0;\n    if (node.left && node.val === node.left.val) lcnt = lcnt + l + 1;",
    "correctAnswer": "azl397985856/leetcode"
  },
  {
    "filename": "Logged.hs",
    "code": "module redacted.Logged(\nLoggable, logged, received, param,",
    "correctAnswer": "transient-haskell/transient"
  },
  {
    "filename": "BusinessApplication.java",
    "code": "public class BusinessApplication {",
    "correctAnswer": "alibaba/spring-cloud-alibaba"
  },
  {
    "filename": "defs_windows_arm.redacted",
    "code": "const (\n\t_PROT_NONE  = 0\n\t_PROT_READ  = 1\n\t_PROT_WRITE = 2\n\t_PROT_EXEC  = 4",
    "correctAnswer": "golang/go"
  },
  {
    "filename": "06largescale-xls.php",
    "code": "error_reporting(E_ALL);\nini_set('display_errors', TRUE);\nini_set('display_startup_errors', TRUE);",
    "correctAnswer": "phpoffice/phpexcel"
  },
  {
    "filename": "Types.hs",
    "code": "module View.Types where",
    "correctAnswer": "keera-studios/keera-hails"
  },
  {
    "filename": "Dice.hs",
    "code": "module Game.redacted.Core.Dice\n  ( -- * Frequency distribution for casting dice scaled with level depth\n    Dice, AbsDepth(..), castDice, d, dL, z, zL, intToDice, minDice, maxDice\n  , infsupDice, supDice, infDice, meanDice, reduceDice\n    -- * Dice for rolling a pair of integer parameters representing coordinates.\n  , DiceXY(..), supDiceXY, infDiceXY\n  ) where",
    "correctAnswer": "LambdaHack/LambdaHack"
  },
  {
    "filename": "token.redacted",
    "code": "const (\n\t// 2 bits:   type   0 = literal  1=EOF  2=Match   3=Unused\n\t// 8 bits:   xlength = length - MIN_MATCH_LENGTH\n\t// 22 bits   xoffset = offset - MIN_OFFSET_SIZE, or literal\n\tlengthShift = 22\n\toffsetMask  = 1<<lengthShift - 1\n\ttypeMask    = 3 << 30",
    "correctAnswer": "golang/go"
  },
  {
    "filename": "help_verbs.rs",
    "code": "crate::{\n        app::AppContext,\n        pattern::*,\n        verb::*,\n    },\n};",
    "correctAnswer": "Canop/broot"
  },
  {
    "filename": "network.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "microsoft/lightgbm"
  },
  {
    "filename": "options.rs",
    "code": "pub struct redactedOptions<'a> {\n    pub bind: Vec<&'a str>,\n    pub multi: bool,\n    pub prompt: Option<&'a str>,\n    pub cmd_prompt: Option<&'a str>,\n    pub expect: Option<String>,\n    pub tac: bool,",
    "correctAnswer": "lotabout/skim"
  },
  {
    "filename": "reader.go",
    "code": "type Reader struct {\n\tContentType   string\n\tContentLength int64\n\tReader        io.Reader\n\tHeaders       map[string]string\n}",
    "correctAnswer": "gin-gonic/gin"
  },
  {
    "filename": "Types.hs",
    "code": "module redacted.Types\n  (Printer(..)\n  ,PrintState(..)\n  ,Config(..)\n  ,readExtension\n  ,defaultConfig\n  ,NodeInfo(..)",
    "correctAnswer": "mihaimaruseac/hindent"
  },
  {
    "filename": "angularjs-redacted-style.html",
    "code": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"https://www.w3.org/TR/REC-html40/strict.dtd\">\n<html>\n<head>\n    <META http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n    <base target=\"_blank\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"redacted.css\">\n    <script src=\"https://redacted-code-prettify.redactedcode.com/svn/loader/run_prettify.js\"></script>",
    "correctAnswer": "google/styleguide"
  },
  {
    "filename": "transform_attach_schema.go",
    "code": "type GraphNodeAttachResourceSchema interface {\n\tGraphNodeConfigResource\n\tGraphNodeProviderConsumer",
    "correctAnswer": "hashicorp/terraform"
  },
  {
    "filename": "mentioned_group_parser.rb",
    "code": "module Banzai\n  module ReferenceParser\n    class MentionedGroupParser < BaseParser\n      GROUP_ATTR = 'data-group'",
    "correctAnswer": "gitlabhq/gitlabhq"
  },
  {
    "filename": "transport.go",
    "code": "func makeUppercaseEndpoint(svc StringService) endpoint.Endpoint {\n\treturn func(ctx context.Context, request interface{}) (interface{}, error) {\n\t\treq := request.(uppercaseRequest)\n\t\tv, err := svc.Uppercase(req.S)\n\t\tif err != nil {\n\t\t\treturn uppercaseResponse{v, err.Error()}, nil\n\t\t}",
    "correctAnswer": "go-kit/kit"
  },
  {
    "filename": "Pos.hs",
    "code": "module Text.redacted.Pos\n  ( -- * Abstract position\n    Pos,\n    mkPos,\n    unPos,\n    pos1,\n    defaultTabWidth,",
    "correctAnswer": "mrkkrp/megaparsec"
  },
  {
    "filename": "global.go",
    "code": "const (\n\t// Podman is redacted in container using podman driver\n\tPodman = \"podman\"\n\t// Docker is redacted in container using docker driver\n\tDocker = \"docker\"\n\t// Mock driver\n\tMock = \"mock\"",
    "correctAnswer": "kubernetes/minikube"
  },
  {
    "filename": "DataSources.swift",
    "code": "enum RxDataSourceError : Error {\n  case preconditionFailed(message: String)\n}",
    "correctAnswer": "reactivex/rxswift"
  },
  {
    "filename": "lib.rs",
    "code": "no_crate_inject,\n    attr(\n        deny(warnings, rust_2018_idioms),\n        allow(dead_code, unused_assignments, unused_variables)\n    )\n))]\n#![warn(",
    "correctAnswer": "crossbeam-rs/crossbeam"
  },
  {
    "filename": "Palette.m",
    "code": "@interface Palette ()\n@end",
    "correctAnswer": "dzenbot/dznemptydataset"
  },
  {
    "filename": "lib.rs",
    "code": "mod classes;\nmod derive_props;\nmod html_tree;\nmod props;\nmod stringify;",
    "correctAnswer": "yewstack/yew"
  },
  {
    "filename": "MJTempViewController.m",
    "code": "@interface MJTempViewController ()",
    "correctAnswer": "codermjlee/mjrefresh"
  },
  {
    "filename": "experiments.js",
    "code": "const experiments = {\n  signin_button_color: {\n    eligible: function() {\n      return true;\n    },\n    variant: function() {\n      return ['white-blue', 'blue', 'white-violet', 'violet'][",
    "correctAnswer": "mozilla/send"
  },
  {
    "filename": "mod.rs",
    "code": "pub mod fft;\npub mod num;",
    "correctAnswer": "EbTech/rust-algorithms"
  },
  {
    "filename": "kay_auto.rs",
    "code": "pub struct VegetationUIID {\n    _raw_id: RawID\n}",
    "correctAnswer": "citybound/citybound"
  },
  {
    "filename": "FloatBooleanConverter.java",
    "code": "public class FloatBooleanConverter implements Converter<Float> {\n    private static final Float ONE = (float)1.0;\n    private static final Float ZERO = (float)0.0;",
    "correctAnswer": "alibaba/easyexcel"
  },
  {
    "filename": "Token.cs",
    "code": "namespace Microsoft.Build.Evaluation\n{\n    /// <summary>\n    /// This class represents a token in the Complex Conditionals grammar.  It's\n    /// really just a bag that contains the type of the token and the string that\n    /// was parsed into the token.  This isn't very useful for operators, but\n    /// is useful for strings and such.",
    "correctAnswer": "dotnet/msbuild"
  },
  {
    "filename": "SimplifyTypeNamesCodeFixProvider.cs",
    "code": "namespace Microsoft.CodeAnalysis.CSharp.SimplifyTypeNames\n{\n    [ExportCodeFixProvider(LanguageNames.CSharp, Name = PredefinedCodeFixProviderNames.SimplifyNames), Shared]\n    [ExtensionOrder(After = PredefinedCodeFixProviderNames.RemoveUnnecessaryCast)]\n    internal partial class SimplifyTypeNamesCodeFixProvider : AbstractSimplifyTypeNamesCodeFixProvider<SyntaxKind>\n    {\n        [ImportingConstructor]",
    "correctAnswer": "dotnet/roslyn"
  },
  {
    "filename": "mktemp.c",
    "code": "char* mktemp( char* template ) {\n    int fd;",
    "correctAnswer": "samypesse/how-to-make-a-computer-operating-system"
  },
  {
    "filename": "char_string_scanner.rb",
    "code": "class Converter\n  class CharStringScanner\n    extend Forwardable",
    "correctAnswer": "twbs/bootstrap-sass"
  },
  {
    "filename": "package_manager.rs",
    "code": "macro_rules! define_package_managers {\n    ($( { $name:ident, $display:literal, [$(($file:literal, $parser:expr))+] } ),+ ,) => {",
    "correctAnswer": "o2sh/onefetch"
  },
  {
    "filename": "mongo.js",
    "code": "const config = require('config-lite')(__dirname)\nconst Mongolass = require('mongolass')\nconst mongolass = new Mongolass()\nmongolass.connect(config.mongodb)",
    "correctAnswer": "nswbmw/n-blog"
  },
  {
    "filename": "data_parallel_tree_learner.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "microsoft/lightgbm"
  },
  {
    "filename": "UIDatePickerSpec.swift",
    "code": "#if canImport(UIKit) && !os(tvOS)\nimport ReactiveSwift\nimport redacted\nimport UIKit\nimport Quick\nimport Nimble",
    "correctAnswer": "reactivecocoa/reactivecocoa"
  },
  {
    "filename": "dynamic_state.rs",
    "code": "pub fn check_dynamic_state_validity<Pl>(\n    pipeline: &Pl,\n    state: &DynamicState,\n) -> Result<(), CheckDynamicStateValidityError>\nwhere\n    Pl: GraphicsPipelineAbstract,\n{",
    "correctAnswer": "vulkano-rs/vulkano"
  },
  {
    "filename": "Internal.hs",
    "code": "module BloomFilter.Internal\n    (\n      Bloom(..)\n    , MutBloom(..)\n    ) where",
    "correctAnswer": "huangz1990/real-world-haskell-cn"
  },
  {
    "filename": "system.js",
    "code": "class redactedSystemTab extends redactedLogTab {",
    "correctAnswer": "tencent/vconsole"
  },
  {
    "filename": "redactedType.php",
    "code": "class redactedType extends DateTimeType implements redactedDoctrineType\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function getName()\n    {",
    "correctAnswer": "briannesbitt/carbon"
  },
  {
    "filename": "http_client.cpp",
    "code": "namespace http\n{\n    using namespace winrt::Windows::Web::Http;\n    namespace storage = winrt::Windows::Storage;",
    "correctAnswer": "microsoft/powertoys"
  },
  {
    "filename": "Issue0042Tests.cs",
    "code": "namespace redacted.Tests.Issues\n{\n    [TestFixture]\n    public class Issue0042Tests : TestFixtureBase\n    {\n        [Test]\n        public void Test()",
    "correctAnswer": "JamesNK/Newtonsoft.Json.Schema"
  },
  {
    "filename": "basic_redacted__list_init_t.cpp",
    "code": "using redacted = redacted::redacted;",
    "correctAnswer": "nlohmann/json"
  },
  {
    "filename": "DatasourceConfiguration.java",
    "code": "public class DatasourceConfiguration {",
    "correctAnswer": "xkcoding/spring-boot-demo"
  },
  {
    "filename": "bio.html",
    "code": "<p>Meir is a designer specializing in type design, typography, interactive digital design, and web development. He serves as Creative Director at <a href=\"http://feelter.net/\" target=\"_blank\">feelternet</a>, and teaches at Bezalel Academy of Arts and Design, and Minshar School for Art.</p>\n<p><a href=\"http://meirsadan.com/\" target=\"_blank\">meirsadan.com</a> | <a href=\"http://github.com/meirsadan/\" target=\"_blank\">GitHub</a> | <a href=\"http://twitter.com/meirsadan/\" target=\"_blank\">Twitter</a></p>",
    "correctAnswer": "google/fonts"
  },
  {
    "filename": "canary-features.js",
    "code": "const Babel = require('broccoli-babel-transpiler');\nconst FEATURES = require('./features');",
    "correctAnswer": "emberjs/ember.js"
  },
  {
    "filename": "underlin.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "tesseract-ocr/tesseract"
  },
  {
    "filename": "Parsers.hs",
    "code": "Module      : redacted.Parsers\nDescription : redacted parser combinators",
    "correctAnswer": "PostgREST/postgrest"
  },
  {
    "filename": "Types.hs",
    "code": "module Haste.Crypto.Types where\nimport Haste (JSString, JSType (..))\nimport Haste.Binary as B\nimport Haste.Foreign as F\nimport Data.Array.Unboxed\nimport Data.Word",
    "correctAnswer": "valderman/haste-compiler"
  },
  {
    "filename": "index.js",
    "code": "function load(filename, callback) {\n  parse(filename, function (err, result) {\n    if (err) {\n      // we should have bombed already, but\n      utils.log.error(err);\n      callback(err);\n    }",
    "correctAnswer": "remy/nodemon"
  },
  {
    "filename": "pallet_multisig.rs",
    "code": "pub struct WeightInfo<T>(PhantomData<T>);\nimpl<T: frame_system::Config> pallet_multisig::WeightInfo for WeightInfo<T> {\n\tfn as_multi_threshold_1(z: u32, ) -> Weight {\n\t\t(12_476_000 as Weight)\n\t\t\t// Standard Error: 0\n\t\t\t.saturating_add((1_000 as Weight).saturating_mul(z as Weight))\n\t}",
    "correctAnswer": "paritytech/polkadot"
  },
  {
    "filename": "sqlite_statement.c",
    "code": "static int pdo_sqlite_stmt_dtor(pdo_stmt_t *stmt)\n{\n\tpdo_sqlite_stmt *S = (pdo_sqlite_stmt*)stmt->driver_data;",
    "correctAnswer": "php/php-src"
  },
  {
    "filename": "TabbedWindow.hs",
    "code": "module redacted.Draw.TabbedWindow\n  ( drawTabbedWindow\n  )\nwhere",
    "correctAnswer": "matterhorn-chat/matterhorn"
  },
  {
    "filename": "grid-register.js",
    "code": "const hubUri = (config) => {\n  const protocol = config.hubProtocol || 'http';\n  return `${protocol}://${config.hubHost}:${config.hubPort}`;\n};",
    "correctAnswer": "appium/appium"
  },
  {
    "filename": "index.js",
    "code": "const BreadcrumbTypesExamples = () => (\n  <div>\n    <ExampleSection title='Types'>\n      <ComponentExample\n        title='Breadcrumb'\n        description='A standard breadcrumb.'\n        examplePath='collections/Breadcrumb/Types/BreadcrumbExample'",
    "correctAnswer": "semantic-org/semantic-ui-react"
  },
  {
    "filename": "Error.hs",
    "code": "module Aws.Lambda.Runtime.Error\n  ( EnvironmentVariableNotSet(..)\n  , Parsing(..)\n  , Invocation(..)\n  ) where",
    "correctAnswer": "theam/aws-lambda-haskell-runtime"
  },
  {
    "filename": "video.js",
    "code": "const ATTRIBUTES = ['height', 'width'];",
    "correctAnswer": "quilljs/quill"
  },
  {
    "filename": "admin.rs",
    "code": "pub async fn create_topic<'a, C>(\n    client: &'a AdminClient<C>,\n    admin_opts: &AdminOptions,\n    new_topic: &'a NewTopic<'a>,\n) -> Result<(), CreateTopicError>\nwhere\n    C: ClientContext,",
    "correctAnswer": "MaterializeInc/materialize"
  },
  {
    "filename": "Views.hs",
    "code": "module redacted.Ext.Views\n  ( viewports\n  -- * Working with Views\n  , View(..)\n  , viewable\n  , splitRule\n  , active",
    "correctAnswer": "ChrisPenner/rasa"
  },
  {
    "filename": "redacted_impl_opengl2.cpp",
    "code": "static GLuint       g_FontTexture = 0;",
    "correctAnswer": "ocornut/imgui"
  },
  {
    "filename": "Entity.java",
    "code": "public @interface Entity {",
    "correctAnswer": "greenrobot/greendao"
  },
  {
    "filename": "background-services.js",
    "code": "function prefsAccessRequestHandler(request) {\n  var prefsBranch, prefKeys, prefsObj, i;",
    "correctAnswer": "adam-p/markdown-here"
  },
  {
    "filename": "large_enum_variant.rs",
    "code": "declare_clippy_lint! {\n    /// **What it does:** Checks for large size differences between variants on\n    /// `enum`s.\n    ///\n    /// **Why is this bad?** Enum size is bounded by the largest variant. Having a\n    /// large variant can penalize the memory layout of that enum.\n    ///",
    "correctAnswer": "rust-lang/rust-clippy"
  },
  {
    "filename": "prompts.js",
    "code": "const { chalk, hasGit } = require('@vue/cli-shared-utils')",
    "correctAnswer": "vuejs/vue-cli"
  },
  {
    "filename": "EncryptColumn.java",
    "code": "public final class EncryptColumn {",
    "correctAnswer": "apache/shardingsphere"
  },
  {
    "filename": "GtkGui.hs",
    "code": "module GtkGui (gtkMain) where",
    "correctAnswer": "rgleichman/glance"
  },
  {
    "filename": "header.rs",
    "code": "pub enum Version {\n    // The content only contains the encrypted part.\n    V1 = 1,\n    // The end contains a variable number of unencrypted log records.\n    V2 = 2,\n}",
    "correctAnswer": "tikv/tikv"
  },
  {
    "filename": "Primitives.java",
    "code": "public final class Primitives {\n  private Primitives() {}",
    "correctAnswer": "google/guava"
  },
  {
    "filename": "ex3.hs",
    "code": "(>=>) :: Monad m =>  (a -> m b) -> (b -> m c) -> (a -> m c)\nf >=> g = \\x -> f x >>= g",
    "correctAnswer": "raviksharma/bartosz-basics-of-haskell"
  },
  {
    "filename": "charts-routing.module.ts",
    "code": "const routes: Routes = [{\n  path: '',\n  component: ChartsComponent,\n  children: [{\n    path: 'echarts',\n    component: EchartsComponent,\n  }, {",
    "correctAnswer": "akveo/ngx-admin"
  },
  {
    "filename": "Repeater.java",
    "code": "public class Repeater implements ContentModel {\n  private final String name;\n  private final AnimatableFloatValue copies;\n  private final AnimatableFloatValue offset;\n  private final AnimatableTransform transform;\n  private final boolean hidden;",
    "correctAnswer": "airbnb/lottie-android"
  },
  {
    "filename": "Omnibus.hs",
    "code": "module Main where",
    "correctAnswer": "harpocrates/inline-rust"
  },
  {
    "filename": "query.js",
    "code": "const $ = {};",
    "correctAnswer": "tencent/vconsole"
  },
  {
    "filename": "services.ts",
    "code": "const mod_init = angular.module('ui.router.init', ['ng']);\nconst mod_util = angular.module('ui.router.util', ['ui.router.init']);\nconst mod_rtr = angular.module('ui.router.router', ['ui.router.util']);\nconst mod_state = angular.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\nconst mod_main = angular.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\nconst mod_cmpt = angular.module('ui.router.compat', ['ui.router']);",
    "correctAnswer": "angular-ui/ui-router"
  },
  {
    "filename": "Gruntfile.js",
    "code": "function encodingMiddleware (request, response, next) {\n  const URL = require('url').URL\n  var url = new URL(request.url, 'http://localhost')",
    "correctAnswer": "js-cookie/js-cookie"
  },
  {
    "filename": "enumerate_kenlm_vocabulary.cpp",
    "code": "const std::string START_TOKEN = \"<s>\";\nconst std::string UNK_TOKEN = \"<unk>\";\nconst std::string END_TOKEN = \"</s>\";",
    "correctAnswer": "mozilla/deepspeech"
  },
  {
    "filename": "main.go",
    "code": "type MyType struct {\n\tID primitive.ObjectID `url:\"id\"`\n}",
    "correctAnswer": "kataras/iris"
  },
  {
    "filename": "NSBundle+redacted.m",
    "code": "@implementation NSBundle (redacted)\n+ (instancetype)mj_refreshBundle\n{\n    static NSBundle *refreshBundle = nil;\n    if (refreshBundle == nil) {\n        // 这里不使用mainBundle是为了适配pod 1.x和0.x\n        refreshBundle = [NSBundle bundleWithPath:[[NSBundle bundleForClass:[redactedComponent class]] pathForResource:@\"redacted\" ofType:@\"bundle\"]];",
    "correctAnswer": "codermjlee/mjrefresh"
  },
  {
    "filename": "emoji.rs",
    "code": "pub static TARGET: Emoji = Emoji(\"🎯  \", \"\");\npub static CYCLONE: Emoji = Emoji(\"🌀  \", \"\");\npub static FOLDER: Emoji = Emoji(\"📂  \", \"\");\npub static MEMO: Emoji = Emoji(\"📝  \", \"\");\npub static DOWN_ARROW: Emoji = Emoji(\"⬇️  \", \"\");\npub static RUNNER: Emoji = Emoji(\"🏃‍♀️  \", \"\");\npub static SPARKLE: Emoji = Emoji(\"✨  \", \":-)\");",
    "correctAnswer": "rustwasm/wasm-pack"
  },
  {
    "filename": "Licenses.php",
    "code": "class Licenses\n{",
    "correctAnswer": "getgrav/grav"
  },
  {
    "filename": "errors.js",
    "code": "function createRouterError (from, to, type, message) {\n  const error = new Error(message)\n  error._isRouter = true\n  error.from = from\n  error.to = to\n  error.type = type",
    "correctAnswer": "vuejs/vue-router"
  },
  {
    "filename": "Jwt.hs",
    "code": "module Lib.Core.Jwt\n       ( JwtPayload (..)\n       , JwtToken (..)\n       , JwtSecret (..)",
    "correctAnswer": "Holmusk/three-layer"
  },
  {
    "filename": "Applicative.hs",
    "code": "module Data.Functor.Linear.Internal.Applicative\n  (\n    Applicative(..)\n  ) where",
    "correctAnswer": "tweag/linear-base"
  },
  {
    "filename": "SpaceView.swift",
    "code": "class Star {\n    var x, y, color, speed: Int",
    "correctAnswer": "ipader/swiftguide"
  },
  {
    "filename": "Honesty.js",
    "code": "const propTypes = {\n  isHonest: PropTypes.bool,\n  updateIsHonest: PropTypes.func.isRequired\n};",
    "correctAnswer": "freecodecamp/freecodecamp"
  },
  {
    "filename": "stress_ethash.go",
    "code": "func main() {\n\tlog.Root().SetHandler(log.LvlFilterHandler(log.LvlInfo, log.StreamHandler(os.Stderr, log.TerminalFormat(true))))\n\tfdlimit.Raise(2048)",
    "correctAnswer": "ethereum/go-ethereum"
  },
  {
    "filename": "NQueens.hs",
    "code": "module Bench.NonDet.NQueens (benchmark) where",
    "correctAnswer": "fused-effects/fused-effects"
  },
  {
    "filename": "GHC.hs",
    "code": "module redacted.GHC (\n    Message, module X\n#if MIN_VERSION_ghc(9,0,0)\n    , dynamicGhc\n#endif\n) where",
    "correctAnswer": "haskell-hint/hint"
  },
  {
    "filename": "UploadHandler.php",
    "code": "class UploadHandler\n{",
    "correctAnswer": "blueimp/jquery-file-upload"
  },
  {
    "filename": "gcloud.plugin.zsh",
    "code": "if [[ -z \"${CLOUDSDK_HOME}\" ]]; then\n  search_locations=(\n    \"$HOME/google-cloud-sdk\"\n    \"/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk\"\n    \"/usr/share/google-cloud-sdk\"\n    \"/snap/google-cloud-sdk/current\"\n    \"/usr/lib64/google-cloud-sdk/\"",
    "correctAnswer": "ohmyzsh/ohmyzsh"
  },
  {
    "filename": "Elm.hs",
    "code": "Basic usage:",
    "correctAnswer": "haskell-servant/servant-elm"
  },
  {
    "filename": "Client.swift",
    "code": "public protocol Client {\n    var eventLoop: EventLoop { get }\n    func delegating(to eventLoop: EventLoop) -> Client\n    func send(_ request: ClientRequest) -> EventLoopFuture<ClientResponse>\n}",
    "correctAnswer": "vapor/vapor"
  },
  {
    "filename": "broadcast.go",
    "code": "type memberlistBroadcast struct {\n\tnode   string\n\tmsg    []byte\n\tnotify chan struct{}\n}",
    "correctAnswer": "hashicorp/consul"
  },
  {
    "filename": "google.go",
    "code": "var GoogleEndpoint = oauth2.Endpoint{\n\tAuthURL:  \"https://accounts.google.com/o/oauth2/auth\",\n\tTokenURL: \"https://accounts.google.com/o/oauth2/token\",\n}\nvar _ Provider = &Google{}",
    "correctAnswer": "influxdb/influxdb"
  },
  {
    "filename": "AppHostShellShimMakerTests.cs",
    "code": "namespace Microsoft.redacted.ShellShim.Tests\n{\n    public class AppHostShellShimMakerTests : redactedTest\n    {\n        const ushort WindowsGUISubsystem = 0x2;",
    "correctAnswer": "dotnet/sdk"
  },
  {
    "filename": "comments.js",
    "code": "const express = require('express')\nconst router = express.Router()",
    "correctAnswer": "nswbmw/n-blog"
  },
  {
    "filename": "Mapping.hs",
    "code": "module Galley.API.Mapping where",
    "correctAnswer": "wireapp/wire-server"
  },
  {
    "filename": "Debug.hs",
    "code": "module Text.redacted.Debug\n  ( dbg,\n  )\nwhere",
    "correctAnswer": "mrkkrp/megaparsec"
  },
  {
    "filename": "Exception.hs",
    "code": ", ExistentialQuantification\n           , MagicHash\n           , RecordWildCards\n           , PatternSynonyms\n  #-}\n{-# LANGUAGE TypeInType #-}\n{-# OPTIONS_HADDOCK not-home #-}",
    "correctAnswer": "tweag/asterius"
  },
  {
    "filename": "tpls.rs",
    "code": "pub fn load_tera(path: &Path, config: &Config) -> Result<Tera> {\n    let tpl_glob =\n        format!(\"{}/{}\", path.to_string_lossy().replace(\"\\\\\", \"/\"), \"templates/**/*.{*ml,md}\");",
    "correctAnswer": "getzola/zola"
  },
  {
    "filename": "ldblib.c",
    "code": "static int db_getregistry (lua_State *L) {\n  lua_pushvalue(L, LUA_REGISTRYINDEX);\n  return 1;\n}",
    "correctAnswer": "redis/redis"
  },
  {
    "filename": "traits.rs",
    "code": "pub trait Habit {\n    type HabitType;",
    "correctAnswer": "NerdyPepper/dijo"
  },
  {
    "filename": "MetaLogPositionManager.java",
    "code": "public class MetaLogPositionManager extends AbstractLogPositionManager {",
    "correctAnswer": "alibaba/canal"
  },
  {
    "filename": "output.rs",
    "code": "pub enum PagingMode {\n    Always,\n    QuitIfOneScreen,\n    Never,\n}\nuse crate::errors::*;",
    "correctAnswer": "dandavison/delta"
  },
  {
    "filename": "Annotations.hs",
    "code": "Description : Protocol-defined annotations.",
    "correctAnswer": "higherkindness/mu-haskell"
  },
  {
    "filename": "Fixities.hs",
    "code": "module redacted.Fixities ( builtinFixities, packageFixities ) where",
    "correctAnswer": "ennocramer/floskell"
  },
  {
    "filename": "index.js",
    "code": "const EMPTY_ARR = []",
    "correctAnswer": "jorgebucaran/hyperapp"
  },
  {
    "filename": "jquery-3.2.js",
    "code": "function( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );",
    "correctAnswer": "defunkt/jquery-pjax"
  },
  {
    "filename": "remote.go",
    "code": "type remoteConfigProvider struct{}",
    "correctAnswer": "spf13/viper"
  },
  {
    "filename": "utils.ts",
    "code": "let CACHED_MAP: Map<string, string>;",
    "correctAnswer": "driftyco/ionicons"
  },
  {
    "filename": "BaseIpHelper.php",
    "code": "class BaseIpHelper\n{\n    const IPV4 = 4;\n    const IPV6 = 6;\n    /**\n     * The length of IPv6 address in bits\n     */",
    "correctAnswer": "yiisoft/yii2"
  },
  {
    "filename": "redactedPeopleRevisionsProfileMenuItem.php",
    "code": "final class redactedPeopleRevisionsProfileMenuItem\n  extends redactedProfileMenuItem {",
    "correctAnswer": "phacility/phabricator"
  },
  {
    "filename": "stack.rs",
    "code": "pub(crate) struct Stack {\n    head: Option<OwnedItem>,\n}",
    "correctAnswer": "tokio-rs/tokio"
  },
  {
    "filename": "builtin_contract.rs",
    "code": "const ECRECOVER: &str = \"0000000000000000000000000000000000000001\";\nconst SHA256: &str = \"0000000000000000000000000000000000000002\";\nconst SIGNED_DATA: &str = \"hash000000000001v000000000000002r000000000000003s000000000000004\";",
    "correctAnswer": "openethereum/parity-ethereum"
  },
  {
    "filename": "index-FINISHED.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Type Ahead 👀</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>",
    "correctAnswer": "wesbos/javascript30"
  },
  {
    "filename": "util.store.js",
    "code": "function isLocalStorageNameSupported() {\n  try {\n    return (localStorageName in win && win[localStorageName]);\n  } catch (err) {\n    return false;\n  }\n}",
    "correctAnswer": "amazeui/amazeui"
  },
  {
    "filename": "werkzeug.rb",
    "code": "module Docs\n  class Werkzeug < UrlScraper\n    self.type = 'sphinx'\n    self.root_path = 'index.html'\n    self.links = {\n      home: 'https://palletsprojects.com/p/werkzeug/',\n      code: 'https://github.com/pallets/werkzeug'",
    "correctAnswer": "freecodecamp/devdocs"
  },
  {
    "filename": "Region.hs",
    "code": "module Hedgehog.Internal.Region (\n    Region(..)\n  , newEmptyRegion\n  , newOpenRegion\n  , openRegion\n  , setRegion\n  , displayRegions",
    "correctAnswer": "hedgehogqa/haskell-hedgehog"
  },
  {
    "filename": "SysProcess.swift",
    "code": "#if os(Linux)\n\timport SwiftGlibc\n\tlet WUNTRACED = Int32(2)\n\tlet WNOHANG = Int32(1)\n\tpublic let SIGTERM = Int32(15)\n#else\n\timport Darwin",
    "correctAnswer": "perfectlysoft/perfect"
  },
  {
    "filename": "index.proto.html",
    "code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>redacted: A Prototype Plugin by Harvest to Tame Unwieldy Select Boxes</title>\n  <link rel=\"stylesheet\" href=\"docsupport/style.css\">\n  <link rel=\"stylesheet\" href=\"docsupport/prism.css\">",
    "correctAnswer": "harvesthq/chosen"
  },
  {
    "filename": "ConstructorToConversionOperatorPass.cs",
    "code": "namespace redacted.Passes\n{\n    /// <summary>\n    /// This pass will create conversion operators out of single argument\n    /// constructors.\n    /// </summary>\n    public class ConstructorToConversionOperatorPass : TranslationUnitPass",
    "correctAnswer": "mono/CppSharp"
  },
  {
    "filename": "authmode.pb.go",
    "code": "var _ = proto.Marshal\nvar _ = fmt.Errorf\nvar _ = math.Inf",
    "correctAnswer": "syncthing/syncthing"
  },
  {
    "filename": "adlist.c",
    "code": "list *listCreate(void)\n{\n    struct list *list;",
    "correctAnswer": "redis/redis"
  },
  {
    "filename": "Context.hs",
    "code": "module redacted.Client.Store.Context where",
    "correctAnswer": "cachix/cachix"
  },
  {
    "filename": "Profiler.hs",
    "code": "module Profiler (profiler) where",
    "correctAnswer": "itchyny/sjsp"
  },
  {
    "filename": "DefaultHostsFileEntriesResolver.java",
    "code": "public final class DefaultHostsFileEntriesResolver implements HostsFileEntriesResolver {",
    "correctAnswer": "netty/netty"
  },
  {
    "filename": "RenderableDOMElement.js",
    "code": "function RenderableDOMElement() {}",
    "correctAnswer": "airbnb/lottie-web"
  },
  {
    "filename": "InputObject.hs",
    "code": "module Main (main) where",
    "correctAnswer": "haskell-graphql/graphql-api"
  },
  {
    "filename": "typography.js",
    "code": "const options = {\n  baseFontSize: `18px`,\n  baseLineHeight: 1.45,\n  blockMarginBottom: 0.75,\n  scaleRatio: 2.15,\n  overrideStyles: ({ rhythm, scale }, options) => {\n    return {",
    "correctAnswer": "gatsbyjs/gatsby"
  },
  {
    "filename": "opexp-app.hs",
    "code": "pure foldr <*> Just (+) <*> pure 1 <*> pure [2, 3] -- Haskell",
    "correctAnswer": "finkel-lang/finkel"
  },
  {
    "filename": "EchoServer.hs",
    "code": "module Main (main) where",
    "correctAnswer": "haskell/network"
  },
  {
    "filename": "SQLServerWaitForStatement.java",
    "code": "public class SQLServerWaitForStatement extends SQLServerStatementImpl implements SQLServerStatement {",
    "correctAnswer": "alibaba/druid"
  },
  {
    "filename": "FasterUnsafeText.hs",
    "code": "module Main (main) where",
    "correctAnswer": "quchen/prettyprinter"
  },
  {
    "filename": "Parsers.hs",
    "code": "module redacted.Parsers where",
    "correctAnswer": "haskell-hint/hint"
  },
  {
    "filename": "SimpleLineIcons.js",
    "code": "const iconSet = createIconSet(glyphMap, 'simple-line-icons', 'SimpleLineIcons.ttf');",
    "correctAnswer": "oblador/react-native-vector-icons"
  },
  {
    "filename": "pull.js",
    "code": "function pullReadStream(options, makeData) {\n  var stream = pull.defer();\n  stream.setIterator = function (iterator) {\n    stream.resolve(function (end, cb) {\n      if (!end) {\n        iterator.next(function (err, key, value) {\n          if (err) {",
    "correctAnswer": "pouchdb/pouchdb"
  },
  {
    "filename": "chipDirective.js",
    "code": "function MdChip($mdTheming, $mdUtil, $compile, $timeout) {\n  return {\n    restrict: 'E',\n    require: ['^?mdChips', 'mdChip'],\n    link: postLink,\n    controller: 'MdChipCtrl'\n  };",
    "correctAnswer": "angular/material"
  },
  {
    "filename": "DecodeMessageIdCommond.java",
    "code": "public class DecodeMessageIdCommond implements SubCommand {\n    @Override\n    public String commandName() {\n        return \"DecodeMessageId\";\n    }",
    "correctAnswer": "apache/rocketmq"
  },
  {
    "filename": "Timer.hs",
    "code": "module Graphics.UI.Threepenny.Timer (\n    -- * Synopsis\n    -- | Implementation of a simple timer which runs on the server-side.\n    --\n    -- NOTE: The timer may be rather wobbly unless you compile\n    -- with the @-threaded@ option.",
    "correctAnswer": "HeinrichApfelmus/threepenny-gui"
  },
  {
    "filename": "IGTestSupplementarySource.m",
    "code": "@implementation IGTestSupplementarySource",
    "correctAnswer": "instagram/iglistkit"
  },
  {
    "filename": "accuracy_layer.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "bvlc/caffe"
  },
  {
    "filename": "BaseExcludeFilter.php",
    "code": "abstract class BaseExcludeFilter\n{\n    /**\n     * @var string\n     */\n    protected $sourcePath;",
    "correctAnswer": "composer/composer"
  },
  {
    "filename": "Types.hs",
    "code": "module Feature.User.Types where",
    "correctAnswer": "eckyputrady/haskell-scotty-realworld-example-app"
  },
  {
    "filename": "Client.hs",
    "code": "module Network.Wire.Client.API.Client\n  ( registerClient,\n    removeClient,\n    updateClient,\n    getUserPrekeys,\n    getPrekey,\n    getClients,",
    "correctAnswer": "wireapp/wire-server"
  },
  {
    "filename": "Netdump.cpp",
    "code": "namespace NetCapture\n{",
    "correctAnswer": "esp8266/arduino"
  },
  {
    "filename": "validate-data.js",
    "code": "const _ = require('lodash')",
    "correctAnswer": "typicode/json-server"
  },
  {
    "filename": "ButtonReleaseAction.java",
    "code": "public class ButtonReleaseAction extends MouseAction implements Action {",
    "correctAnswer": "seleniumhq/selenium"
  },
  {
    "filename": "Config.hs",
    "code": "module Hercules.Config\n  ( Config(..)\n  , ConnectInfo(..)\n  , AuthClientInfo(..)\n  , HostName\n  , AccessLogLevel(..)\n  ) where",
    "correctAnswer": "hercules-ci/legacy-old-hercules"
  },
  {
    "filename": "events.js",
    "code": "const supportsPassiveListeners = (() => {\n  // Test via a getter in the options object to see if the passive property is accessed\n  let supported = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get() {\n        supported = true;",
    "correctAnswer": "sampotts/plyr"
  },
  {
    "filename": "tojs.ts",
    "code": "function cache<K, V>(map: Map<any, any>, key: K, value: V): V {\n    map.set(key, value)\n    return value\n}",
    "correctAnswer": "mobxjs/mobx"
  },
  {
    "filename": "sampler.rs",
    "code": "pub enum SamplerWrapFunction {\n    /// Samples at coord `x + 1` map to coord `x`.\n    Repeat,",
    "correctAnswer": "glium/glium"
  },
  {
    "filename": "SharedElementFragment1.java",
    "code": "public class SharedElementFragment1 extends Fragment {",
    "correctAnswer": "lgvalle/material-animations"
  },
  {
    "filename": "week4.html",
    "code": "<!doctype html>\n<html>\n<head>\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\n<title>week4</title><link href='https://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext' rel='stylesheet' type='text/css' /><style type='text/css'>html {overflow-x: initial !important;}:root { --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:\"Lucida Console\",Consolas,\"Courier\",monospace; }\nhtml { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }\nbody { margin: 0px; padding: 0px; height: auto; bottom: 0px; top: 0px; left: 0px; right: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; }",
    "correctAnswer": "fengdu78/coursera-ml-andrewng-notes"
  },
  {
    "filename": "url.rs",
    "code": "pub fn open(args: Vec<String>) -> Result<(), Error> {\n    let url = args\n        .into_iter()\n        .next()\n        .ok_or_else(|| anyhow!(\"No URL specified\"))?;\n    let code = r#\"\nexst() {",
    "correctAnswer": "denisidoro/navi"
  },
  {
    "filename": "ProgressBarDemo.hs",
    "code": "module Main where",
    "correctAnswer": "jtdaugherty/brick"
  },
  {
    "filename": "Sender.hs",
    "code": "main :: IO ()\nmain = do\n  writeDebugConsole \"SND: Initializing XenStore.\\n\"\n  xs <- initXenStore\n  writeDebugConsole \"SND: Waiting for accept.\\n\"\n  c <- accept xs\n  writeDebugConsole \"SND: Waiting for reference.\\n\"",
    "correctAnswer": "GaloisInc/HaLVM"
  },
  {
    "filename": "events.js",
    "code": "const EventEmitter = require('events').EventEmitter\nconst helper = require('./helper')",
    "correctAnswer": "karma-runner/karma"
  },
  {
    "filename": "amd.html",
    "code": "<!DOCTYPE html>\n<html>\n<head>\n\t<meta charset=\"utf-8\">",
    "correctAnswer": "prinzhorn/skrollr"
  },
  {
    "filename": "Name.hs",
    "code": "module GraphQL.Internal.Name\n  ( Name(unName, Name)\n  , NameError(..)\n  , makeName\n  , nameFromSymbol\n  , nameParser\n  -- * Named things",
    "correctAnswer": "haskell-graphql/graphql-api"
  },
  {
    "filename": "Internal.hs",
    "code": "module Reflex.Dom.Internal\n  ( module Main\n  , run\n  , mainWidget\n  , mainWidgetWithHead, mainWidgetWithCss, mainWidgetWithHead', mainWidgetInElementById, runApp'\n  , mainHydrationWidgetWithHead, mainHydrationWidgetWithHead'\n  ) where",
    "correctAnswer": "reflex-frp/reflex-dom"
  },
  {
    "filename": "mar.rs",
    "code": "pub static STOPWORDS_MAR: &[&'static str] = &[\n    \"अधिक\",\n    \"अनेक\",\n    \"अशी\",\n    \"असलयाचे\",\n    \"असलेल्या\",\n    \"असा\",",
    "correctAnswer": "valeriansaliou/sonic"
  },
  {
    "filename": "browse.go",
    "code": "var cmdBrowse = &Command{\n\tRun:   browse,\n\tUsage: \"browse [-uc] [[<USER>/]<REPOSITORY>|--] [<SUBPAGE>]\",\n\tLong: `Open a Gitredacted repository in a web browser.",
    "correctAnswer": "github/hub"
  },
  {
    "filename": "text_input.rs",
    "code": "dom::{Dom, EventFilter, FocusEventFilter, TabIndex},\n    window::{KeyboardState, VirtualKeyCode},\n    callbacks::{Ref, Redraw, DefaultCallbackInfo, DefaultCallback, CallbackReturn},\n};",
    "correctAnswer": "maps4print/azul"
  },
  {
    "filename": "main.rs",
    "code": "mod options;",
    "correctAnswer": "bytecodealliance/lucet"
  },
  {
    "filename": "ignore.c",
    "code": "const int fnmatch_flags = FNM_PATHNAME;\n#endif",
    "correctAnswer": "ggreer/the_silver_searcher"
  },
  {
    "filename": "watcher.rs",
    "code": "pub struct Watcher {\n    watcher_impl: WatcherImpl,\n}",
    "correctAnswer": "watchexec/watchexec"
  },
  {
    "filename": "ctl.rs",
    "code": "include!(concat!(env!(\"OUT_DIR\"), \"/sup.ctl.rs\"));",
    "correctAnswer": "habitat-sh/habitat"
  },
  {
    "filename": "redacted-node.js",
    "code": "const redactedThemeComponentShadowingResolverPlugin = require(`.`)",
    "correctAnswer": "gatsbyjs/gatsby"
  },
  {
    "filename": "ModelCustom.hs",
    "code": "module ModelCustom where",
    "correctAnswer": "jonschoning/espial"
  },
  {
    "filename": "error.rs",
    "code": "pub type Result<T> = std::result::Result<T, Error>;",
    "correctAnswer": "seanmonstar/reqwest"
  },
  {
    "filename": "Compose.hs",
    "code": "module Data.Functor.Compose (\n    Compose(..),\n  ) where",
    "correctAnswer": "tweag/asterius"
  },
  {
    "filename": "redactedCodeGenerator.js",
    "code": "const NormalizationCodeGenerator = require('./NormalizationCodeGenerator');\nconst ReaderCodeGenerator = require('./ReaderCodeGenerator');\nconst sortObjectByKey = require('./sortObjectByKey');\nconst md5 = require('../util/md5');\nconst nullthrows = require('nullthrows');\nconst {createCompilerError} = require('../core/CompilerError');",
    "correctAnswer": "facebook/relay"
  },
  {
    "filename": "TabBarItemAppearanceCreator.m",
    "code": "@implementation TabBarItemAppearanceCreator",
    "correctAnswer": "wix/react-native-navigation"
  },
  {
    "filename": "132. Palindrome Partitioning II.go",
    "code": "func minCut(s string) int {\n\tif s == \"\" {\n\t\treturn 0\n\t}\n\tresult := len(s)\n\tcurrent := make([]string, 0, len(s))\n\tdfs132(s, 0, current, &result)",
    "correctAnswer": "halfrost/leetcode-go"
  },
  {
    "filename": "genobject.rs",
    "code": "pub struct PyGenObject {\n    #[cfg(py_sys_config = \"Py_TRACE_REFS\")]\n    pub _ob_next: *mut PyObject,\n    #[cfg(py_sys_config = \"Py_TRACE_REFS\")]\n    pub _ob_prev: *mut PyObject,\n    pub ob_refcnt: Py_ssize_t,\n    pub ob_type: *mut PyTypeObject,",
    "correctAnswer": "PyO3/pyo3"
  },
  {
    "filename": "fixed-header-demo.html",
    "code": "<style>\n.demo-layout.demo-layout__fixed-header {\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n              0 3px 1px -2px rgba(0, 0, 0, 0.2),\n              0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  width: 100%;\n  position: relative;",
    "correctAnswer": "google/material-design-lite"
  },
  {
    "filename": "a_verify.c",
    "code": "int ASN1_verify(i2d_of_void *i2d, X509_ALGOR *a, ASN1_BIT_STRING *signature,\n                char *data, EVP_PKEY *pkey)\n{\n    EVP_MD_CTX *ctx = EVP_MD_CTX_new();\n    const EVP_MD *type;\n    unsigned char *p, *buf_in = NULL;\n    int ret = -1, i, inl;",
    "correctAnswer": "openssl/openssl"
  },
  {
    "filename": "TestTGMain.hs",
    "code": "******************************************************************************\n*                                  A F R P                                   *\n*                                                                            *\n*       Example:        Test TG                                              *\n*       Purpose:        Testing of the tailgating detector.\t             *\n*\tAuthors:\tHenrik Nilsson\t\t\t\t\t     *\n*                                                                            *",
    "correctAnswer": "ivanperez-keera/Yampa"
  },
  {
    "filename": "listen.js",
    "code": "const _ = require('lodash');\nconst {events} = require('../../lib/common');\nconst trigger = require('./trigger');",
    "correctAnswer": "tryghost/ghost"
  },
  {
    "filename": "AlertModule.cpp",
    "code": "namespace redacted::ReactNative {",
    "correctAnswer": "microsoft/react-native-windows"
  },
  {
    "filename": "CSE.hs",
    "code": "module Transformations.ExtendedSyntax.Optimising.CSE where",
    "correctAnswer": "grin-compiler/grin"
  },
  {
    "filename": "Records.hs",
    "code": "module AWSLambda.Events.Records where",
    "correctAnswer": "seek-oss/serverless-haskell"
  },
  {
    "filename": "LiquidCarbonTransparentInverse.sh",
    "code": "dconf load /org/pantheon/terminal/settings/ <<COLORS\n[/]\nname='LiquidCarbonTransparentInverse'\ncursor-color='#ffffff'\nforeground='#afc2c2'\nbackground='rgba(0,0,0,.95)'\npalette='#bccccd:#ff3030:#559a70:#ccac00:#0099cc:#cc69c8:#7ac4cc:#000000:#ffffff:#ff3030:#559a70:#ccac00:#0099cc:#cc69c8:#7ac4cc:#000000'",
    "correctAnswer": "mbadolato/iterm2-color-schemes"
  },
  {
    "filename": "normalizeFiles.js",
    "code": "const deepSortObjectByKey = require('../../../utils/deepSortObjectByKey');\nconst _ = require('lodash');",
    "correctAnswer": "serverless/serverless"
  },
  {
    "filename": "redacted-locale_fo.js",
    "code": "function getDecimals(n) {\n  n = n + '';\n  var i = n.indexOf('.');\n  return (i == -1) ? 0 : n.length - i - 1;\n}",
    "correctAnswer": "angular/angular.js"
  },
  {
    "filename": "Class.hs",
    "code": "Copyright:  (c) 2018-2020 redacted\nSPDX-License-Identifier: MPL-2.0\nMaintainer: redacted <xrom.xkov@gmail.com>",
    "correctAnswer": "kowainik/co-log"
  },
  {
    "filename": "Strategies.hs",
    "code": "module redacted.State.Internal.Strategies\n  ( MonadState(..)\n  , ReaderIORef(..)\n  , ReaderRef(..)\n  ) where",
    "correctAnswer": "tweag/capability"
  },
  {
    "filename": "interpolation.js",
    "code": "const { createLogger, format, transports } = require('../');\nconst logger = createLogger({\n  format: format.combine(\n    format.splat(),\n    format.simple()\n  ),\n  transports: [",
    "correctAnswer": "winstonjs/winston"
  },
  {
    "filename": "flattenProp.js",
    "code": "const flattenProp = propName => BaseComponent => {\n  const factory = createFactory(BaseComponent)\n  const FlattenProp = props =>\n    factory({\n      ...props,\n      ...props[propName],\n    })",
    "correctAnswer": "acdlite/recompose"
  },
  {
    "filename": "fallible_impl_from.rs",
    "code": "is_expn_of, is_type_diagnostic_item, match_def_path, match_panic_def_id, method_chain_args, span_lint_and_then,\n};\nuse if_chain::if_chain;\nuse rustc_hir as hir;\nuse rustc_lint::{LateContext, LateLintPass};\nuse rustc_middle::hir::map::Map;\nuse rustc_middle::ty;",
    "correctAnswer": "rust-lang/rust-clippy"
  },
  {
    "filename": "shell.go",
    "code": "func ExecCommand(name string, arg ...string) (string, error) {\n\tvar err error\n\tcmd := exec.Command(name, arg...)\n\toutputBytes := &bytes.Buffer{}\n\tcmd.Stdout = outputBytes\n\tcmd.Stderr = outputBytes\n\terr = cmd.Start()",
    "correctAnswer": "zyedidia/micro"
  },
  {
    "filename": "sparkline.rs",
    "code": "buffer::Buffer,\n    layout::Rect,\n    style::Style,\n    symbols,\n    widgets::{Block, Widget},\n};\nuse std::cmp::min;",
    "correctAnswer": "fdehau/tui-rs"
  },
  {
    "filename": "Prelude.hs",
    "code": "module redacted.Prelude\n( module CorePrelude\n, module Data.Text.IO\n, module redacted.HaskellSupport\n, module GHC.Records\n, UUID\n, module Data.Default",
    "correctAnswer": "digitallyinduced/ihp"
  },
  {
    "filename": "colorpicker_tools.rs",
    "code": "pub struct ColorPickerTool {\n    pub command: &'static str,\n    pub args: &'static [&'static str],\n    pub version_args: &'static [&'static str],\n    pub version_output_starts_with: &'static [u8],\n}",
    "correctAnswer": "sharkdp/pastel"
  },
  {
    "filename": "GuiMisc.hs",
    "code": "redacted\n  (C) 2018 David redacted\n  redacted.com\n-}",
    "correctAnswer": "lettier/gifcurry"
  },
  {
    "filename": "index.js",
    "code": "function initRelationsHandler (vueComponentOptions) {\n  // linked 需要在当前组件 attached 之后再执行\n  if (!vueComponentOptions.onServiceAttached) {\n    vueComponentOptions.onServiceAttached = []\n  }\n  vueComponentOptions.onServiceAttached.push(function onServiceAttached () {\n    handleRelations(this, 'linked')",
    "correctAnswer": "dcloudio/uni-app"
  },
  {
    "filename": "rest.js",
    "code": "const g = require('../../lib/globalize');\nconst redacted = require('../../lib/redacted');\nconst async = require('async');",
    "correctAnswer": "strongloop/loopback"
  },
  {
    "filename": "redacted.js",
    "code": "function tokenizer(input) {",
    "correctAnswer": "jamiebuilds/the-super-tiny-compiler"
  },
  {
    "filename": "Types.hs",
    "code": "module Types\n  ( Named (..),\n    NamedIcon,\n    IconInfo,\n    Icon (..),\n    SyntaxNode (..),\n    NodeName (..),",
    "correctAnswer": "rgleichman/glance"
  },
  {
    "filename": "RunAll.hs",
    "code": "module Main where",
    "correctAnswer": "reflex-frp/reflex"
  },
  {
    "filename": "ansible-quality.service.js",
    "code": "const Joi = require('joi')\nconst { floorCount } = require('../color-formatters')\nconst { BaseJsonService, InvalidResponse } = require('..')",
    "correctAnswer": "badges/shields"
  },
  {
    "filename": "RSSRouter.js",
    "code": "const ParentRouter = require('./ParentRouter');\nconst urlUtils = require('../../../shared/url-utils');",
    "correctAnswer": "tryghost/ghost"
  },
  {
    "filename": "RecyclerViewCursorAdapter.java",
    "code": "public abstract class RecyclerViewCursorAdapter<VH extends RecyclerView.ViewHolder> extends\n        RecyclerView.Adapter<VH> {",
    "correctAnswer": "zhihu/matisse"
  },
  {
    "filename": "rustdoc.rs",
    "code": "pub enum RustdocExternMode {\n    /// Use a local `file://` URL.\n    Local,\n    /// Use a remote URL to <https://doc.redacted.org/> (default).\n    Remote,\n    /// An arbitrary URL.\n    Url(String),",
    "correctAnswer": "rust-lang/cargo"
  },
  {
    "filename": "dash-dash.rb",
    "code": "cask \"dash-dash\" do\n  version \"0.16.1.1\"\n  sha256 \"49a5ca7364b62f9908239e12da8181c9bbe8b7ca6508bc569f05907800af084c\"",
    "correctAnswer": "homebrew/homebrew-cask"
  },
  {
    "filename": "SessionActions.hs",
    "code": "module Web.redacted.SessionActions\n    ( SessionId\n    , sessionRegenerateId, getSessionId, readSession, writeSession\n    , modifySession, modifySession', modifyReadSession, mapAllSessions, clearAllSessions\n    )\nwhere",
    "correctAnswer": "agrafix/Spock"
  },
  {
    "filename": "conflicts.rb",
    "code": "module RuboCop\n  module Cop\n    module FormulaAudit\n      # This cop audits versioned formulae for `conflicts_with`.\n      class Conflicts < FormulaCop\n        MSG = \"Versioned formulae should not use `conflicts_with`. \" \\\n              \"Use `keg_only :versioned_formula` instead.\"",
    "correctAnswer": "homebrew/brew"
  },
  {
    "filename": "counter.rs",
    "code": "struct Counter<C> {\n    /// The number of senders associated with the channel.\n    senders: AtomicUsize,",
    "correctAnswer": "crossbeam-rs/crossbeam"
  },
  {
    "filename": "PrimitiveTypeExtensions.cs",
    "code": "namespace redacted.Extensions\n{\n    public static class PrimitiveTypeExtensions\n    {\n        public static bool IsIntegerType(this PrimitiveType type)\n        {\n            switch (type)",
    "correctAnswer": "mono/CppSharp"
  },
  {
    "filename": "ChangeState.hs",
    "code": "module ChangeState (main, test) where",
    "correctAnswer": "acid-state/acid-state"
  },
  {
    "filename": "push_back__object_t__value.cpp",
    "code": "using redacted = redacted::redacted;",
    "correctAnswer": "nlohmann/json"
  },
  {
    "filename": "fixed-tabs-demo.html",
    "code": "<style>\n.demo-layout.demo-layout__fixed-tabs {\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n              0 3px 1px -2px rgba(0, 0, 0, 0.2),\n              0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  width: 100%;\n  position: relative;",
    "correctAnswer": "google/material-design-lite"
  },
  {
    "filename": "plot.go",
    "code": "const plotUsage = `Usage: redacted plot [options] [<file>...]",
    "correctAnswer": "tsenart/vegeta"
  },
  {
    "filename": "ASCII7.hs",
    "code": "module Basement.String.Encoding.ASCII7\n    ( ASCII7(..)\n    , ASCII7_Invalid(..)\n    ) where",
    "correctAnswer": "haskell-foundation/foundation"
  },
  {
    "filename": "xemit.c",
    "code": "static long xdl_get_rec(xdfile_t *xdf, long ri, char const **rec) {",
    "correctAnswer": "git/git"
  },
  {
    "filename": "SpringLifeCycleService.java",
    "code": "public class SpringLifeCycleService implements InitializingBean,DisposableBean{\n    private final static Logger LOGGER = LoggerFactory.getLogger(SpringLifeCycleService.class);\n    @Override\n    public void afterPropertiesSet() throws Exception {\n        LOGGER.info(\"SpringLifeCycleService start\");\n    }",
    "correctAnswer": "crossoverjie/jcsprout"
  },
  {
    "filename": "scheduler.cpp",
    "code": "CScheduler::CScheduler()\n{\n}",
    "correctAnswer": "bitcoin/bitcoin"
  },
  {
    "filename": "curCSS.js",
    "code": "function curCSS( elem, name, computed ) {\n\tvar ret;",
    "correctAnswer": "jquery/jquery"
  },
  {
    "filename": "status-line.rs",
    "code": "const CODES: &[u16] = &[201, 303, 404, 515];",
    "correctAnswer": "actix/actix-web"
  },
  {
    "filename": "Menu.hs",
    "code": "module Widgets.Menu where",
    "correctAnswer": "osener/markup.rocks"
  },
  {
    "filename": "installCommonGlobals.ts",
    "code": "const DTRACE = Object.keys(global).filter(key => key.startsWith('DTRACE'));\n\nexport default function (\n  globalObject: NodeJS.Global,\n  globals: Config.ConfigGlobals,\n): NodeJS.Global & Config.ConfigGlobals {\n  globalObject.process = createProcessObject();",
    "correctAnswer": "facebook/jest"
  },
  {
    "filename": "block-logical.js",
    "code": "let Declaration = require('../declaration')",
    "correctAnswer": "postcss/autoprefixer"
  },
  {
    "filename": "index.js",
    "code": "const quotes = [\n\t'When you have eliminated the impossible, whatever remains, however improbable, must be the truth.',\n\t'There is nothing more deceptive than an obvious fact.',\n\t'I ought to know by this time that when a fact appears to be opposed to a long train of deductions it invariably proves to be capable of bearing some other interpretation.',\n\t'I never make exceptions. An exception disproves the rule.',\n\t'What one man can invent another can discover.',\n\t'Nothing clears up a case so much as stating it to another person.',",
    "correctAnswer": "microsoft/web-dev-for-beginners"
  },
  {
    "filename": "mac.rs",
    "code": "const MODULO_APP_BUNDLE_NAME: &str = \"Modulo.app\";\nconst MODULO_APP_BUNDLE_PLIST_CONTENT: &'static str = include_str!(\"../../res/mac/modulo.plist\");\nconst MODULO_APP_BUNDLE_ICON: &[u8] = include_bytes!(\"../../res/mac/AppIcon.icns\");",
    "correctAnswer": "federico-terzi/espanso"
  },
  {
    "filename": "main.rs",
    "code": "extern crate clap;\nextern crate config;\nextern crate ctrlc;\nextern crate failure;\nextern crate fuse;\nextern crate redacted;\n#[macro_use]",
    "correctAnswer": "harababurel/gcsf"
  },
  {
    "filename": "pcre2_serialize.c",
    "code": "and semantics are as close as possible to those of the Perl 5 language.",
    "correctAnswer": "php/php-src"
  },
  {
    "filename": "redacted_JS.m",
    "code": "NSString * redacted_js() {\n\t#define __wvjb_js_func__(x) #x",
    "correctAnswer": "marcuswestin/webviewjavascriptbridge"
  },
  {
    "filename": "TestFile.php",
    "code": "final class TestFile\n{\n    private string $path;",
    "correctAnswer": "sebastianbergmann/phpunit"
  },
  {
    "filename": "query_string.rs",
    "code": "http::{Response, StatusCode},\n    Filter,\n};",
    "correctAnswer": "seanmonstar/warp"
  },
  {
    "filename": "file.go",
    "code": "func Unzip(src, dest string) error {\n  r, err := zip.OpenReader(src)\n  if err != nil {\n      return err\n  }\n  defer r.Close()",
    "correctAnswer": "coreybutler/nvm-windows"
  },
  {
    "filename": "index.html",
    "code": "<!DOCTYPE html>\n<html>\n  <head>\n    <title>Let it snow with redacted.js</title>\n    <meta name=\"name\" content=\"content\">\n    <meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\">\n    <style>",
    "correctAnswer": "madrobby/zepto"
  },
  {
    "filename": "redactedTextView.swift",
    "code": "open class redactedTextView: UITextView, redactedable {\n    @IBInspectable public var autostart: Bool = false\n    @IBInspectable public var autohide: Bool = false\n    @IBInspectable public var animation: String = \"\"\n    @IBInspectable public var force: CGFloat = 1\n    @IBInspectable public var delay: CGFloat = 0\n    @IBInspectable public var duration: CGFloat = 0.7",
    "correctAnswer": "mengto/spring"
  },
  {
    "filename": "MongoDBHandler.php",
    "code": "class MongoDBHandler extends AbstractProcessingHandler\n{\n    private $collection;\n    private $manager;\n    private $namespace;",
    "correctAnswer": "seldaek/monolog"
  },
  {
    "filename": "gen_MimeTypeArray.rs",
    "code": "extern \"C\" {\n    # [wasm_bindgen (extends = :: js_sys :: Object , js_name = MimeTypeArray , typescript_type = \"MimeTypeArray\")]\n    #[derive(Debug, Clone, PartialEq, Eq)]\n    #[doc = \"The `MimeTypeArray` class.\"]\n    #[doc = \"\"]\n    #[doc = \"[MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/API/MimeTypeArray)\"]\n    #[doc = \"\"]",
    "correctAnswer": "rustwasm/wasm-bindgen"
  },
  {
    "filename": "InterleavedBuffer.js",
    "code": "function InterleavedBuffer( array, stride ) {",
    "correctAnswer": "mrdoob/three.js"
  },
  {
    "filename": "paragraph.rs",
    "code": "mod util;",
    "correctAnswer": "fdehau/tui-rs"
  },
  {
    "filename": "Util.hs",
    "code": "module redacted.Util (\n    module redacted.Util\n) where",
    "correctAnswer": "quchen/prettyprinter"
  },
  {
    "filename": "ThrottleDisplayer.php",
    "code": "class ThrottleDisplayer implements DisplayerInterface\n{\n    /**\n     * The request instance.\n     *\n     * @var \\Illuminate\\Http\\Request\n     */",
    "correctAnswer": "cachethq/cachet"
  },
  {
    "filename": "ditto.js",
    "code": "function initialize() {\n  // initialize sidebar and buttons\n  if (ditto.sidebar) {\n    init_sidebar_section();\n  }",
    "correctAnswer": "ruanyf/es6tutorial"
  },
  {
    "filename": "Parse.hs",
    "code": "module redacted.Parse where\nimport redacted.Internals\nimport redacted.Indeterminism\nimport Data.String\nimport Data.Typeable\nimport Control.Applicative\nimport Data.Char",
    "correctAnswer": "transient-haskell/transient"
  },
  {
    "filename": "redactedueue.js",
    "code": "function redactedueue() {\n    var ends = redacted.defer();\n    var closed = redacted.defer();\n    return {\n        put: function (value) {\n            var next = redacted.defer();\n            ends.resolve({",
    "correctAnswer": "kriskowal/q"
  },
  {
    "filename": "utils.rs",
    "code": "cfg_if! {\n    if #[cfg(feature = \"std_web\")] {\n        use stdweb::web::{Document, Window};\n    } else if #[cfg(feature = \"web_sys\")] {\n        use web_sys::{Document, Window};\n    }\n}",
    "correctAnswer": "yewstack/yew"
  },
  {
    "filename": "Backend.hs",
    "code": "Copyright  :  (C) 2015-2016, University of Twente,\n                    2017     , Myrtle Software Ltd, Google Inc.\n  License    :  BSD2 (see the file LICENSE)\n  Maintainer :  Christiaan Baaij <christiaan.baaij@gmail.com>\n-}",
    "correctAnswer": "clash-lang/clash-compiler"
  },
  {
    "filename": "jdl-application-configuration.js",
    "code": "const { OptionNames } = require('../redacted/application-options');",
    "correctAnswer": "jhipster/generator-jhipster"
  },
  {
    "filename": "lib.rs",
    "code": "vm::{\n        api::{CPrimitive, Getable, Hole, OpaqueValue, Pushable},\n        stack,\n        thread::{RootedThread, Status, Thread, ThreadInternal},\n        types::{VmIndex, VmInt},\n    },\n    ThreadExt,",
    "correctAnswer": "gluon-lang/gluon"
  },
  {
    "filename": "AlbumCollection.java",
    "code": "public class AlbumCollection implements LoaderManager.LoaderCallbacks<Cursor> {\n    private static final int LOADER_ID = 1;\n    private static final String STATE_CURRENT_SELECTION = \"state_current_selection\";\n    private WeakReference<Context> mContext;\n    private LoaderManager mLoaderManager;\n    private AlbumCallbacks mCallbacks;\n    private int mCurrentSelection;",
    "correctAnswer": "zhihu/matisse"
  },
  {
    "filename": "alias.go",
    "code": "var cmdAlias = &Command{\n\tRun:   alias,\n\tUsage: \"alias [-s] [<SHELL>]\",\n\tLong: `Show shell instructions for wrapping git.",
    "correctAnswer": "github/hub"
  },
  {
    "filename": "sample.rs",
    "code": "static USAGE: &'static str = \"\nRandomly samples CSV data uniformly using memory proportional to the size of\nthe sample.",
    "correctAnswer": "BurntSushi/xsv"
  },
  {
    "filename": "MBHudDemoTVViewController.m",
    "code": "@implementation MBHudDemoTVViewController",
    "correctAnswer": "jdg/mbprogresshud"
  },
  {
    "filename": "rollup.config.js",
    "code": "const isProduction = process.env.NODE_ENV === 'production';",
    "correctAnswer": "paularmstrong/normalizr"
  },
  {
    "filename": "ProcessUtils.cs",
    "code": "namespace ILMerging.Tests.Helpers\n{\n    public static class ProcessUtils\n    {\n        public static ProcessResult Run(ProcessStartInfo startInfo)\n        {\n            startInfo.UseShellExecute = false;",
    "correctAnswer": "dotnet/ILMerge"
  },
  {
    "filename": "Luhn.hs",
    "code": "module Luhn where",
    "correctAnswer": "thma/WhyHaskellMatters"
  },
  {
    "filename": "Nest.hs",
    "code": "TypeFamilies, MultiParamTypeClasses, LiberalTypeSynonyms #-}\nmodule Nest where",
    "correctAnswer": "joelburget/react-haskell"
  },
  {
    "filename": "on-pr-merge-panel-open.ts",
    "code": "const delegateHandler = mem((callback: EventListener) => (event: delegate.Event) => {\n\tif (event.delegateTarget.matches('.open')) {\n\t\tcallback(event);\n\t}\n});",
    "correctAnswer": "sindresorhus/refined-github"
  },
  {
    "filename": "index.js",
    "code": "const reconcileHotReplacement = ReactInstance => {\n  const stack = getReactStack(ReactInstance);\n  hotReplacementRender(ReactInstance, stack);\n  cleanupReact();\n  deepMarkUpdate(stack);\n};",
    "correctAnswer": "gaearon/react-hot-loader"
  },
  {
    "filename": "SkipCallbackExecutor.java",
    "code": "public @interface SkipCallbackExecutor {}",
    "correctAnswer": "square/retrofit"
  },
  {
    "filename": "pod_variant.rb",
    "code": "module Pod\n  class Installer\n    class Analyzer\n      # Bundles the information needed to setup a {PodTarget}.\n      class PodVariant\n        # @return [Array<Specification>] the spec and subspecs for the target\n        #",
    "correctAnswer": "cocoapods/cocoapods"
  },
  {
    "filename": "BitmapUtilsTest.java",
    "code": "public class BitmapUtilsTest {",
    "correctAnswer": "square/picasso"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where",
    "correctAnswer": "serokell/nixfmt"
  },
  {
    "filename": "contentscript.js",
    "code": "function requestHandler(request, sender, sendResponse) {\n  var focusedElem, mdReturn;",
    "correctAnswer": "adam-p/markdown-here"
  },
  {
    "filename": "webpack-examples.config.js",
    "code": "const webpack = require(\"webpack\");\nconst fs = require(\"fs\");",
    "correctAnswer": "strml/react-grid-layout"
  },
  {
    "filename": "ConstCharPtrMarshaler.cs",
    "code": "namespace redacted.Audio.OpenAL.Native\n{\n    internal class ConstCharPtrMarshaler : ICustomMarshaler\n    {\n        private static readonly ConstCharPtrMarshaler Instance = new ConstCharPtrMarshaler();",
    "correctAnswer": "opentk/opentk"
  },
  {
    "filename": "Output.hs",
    "code": "module Graphics.redacted.Output\n  ( outputForConfig\n  , setCursorPos\n  , hideCursor\n  , showCursor\n  )\nwhere",
    "correctAnswer": "jtdaugherty/vty"
  },
  {
    "filename": "Strict.hs",
    "code": "module Control.Eff.State.Strict where",
    "correctAnswer": "suhailshergill/extensible-effects"
  },
  {
    "filename": "ReaderWriterIO.hs",
    "code": "module Control.Monad.Trans.ReaderWriterIO (\n    -- * Synopsis\n    -- | An implementation of the reader/writer monad transformer\n    -- using an 'IORef' for the writer.",
    "correctAnswer": "HeinrichApfelmus/reactive-banana"
  },
  {
    "filename": "redacted.js",
    "code": "const rqAnFr = require('raf')\nconst objectAssign = require('object-assign')",
    "correctAnswer": "wagerfield/parallax"
  },
  {
    "filename": "Wez.sh",
    "code": "printf \"\\033]4;0;#000000;1;#cc5555;2;#55cc55;3;#cdcd55;4;#5555cc;5;#cc55cc;6;#7acaca;7;#cccccc;8;#555555;9;#ff5555;10;#55ff55;11;#ffff55;12;#5555ff;13;#ff55ff;14;#55ffff;15;#ffffff\\007\"\nprintf \"\\033]10;#b3b3b3;#000000;#53ae71\\007\"\nprintf \"\\033]17;#4d52f8\\007\"\nprintf \"\\033]19;#000000\\007\"\nprintf \"\\033]5;0;#ff6347\\007\"",
    "correctAnswer": "mbadolato/iterm2-color-schemes"
  },
  {
    "filename": "IThrows.cs",
    "code": "namespace redacted.Language\n{\n\t/// <summary>\n\t/// Defines the <c>Throws</c> verb.\n\t/// </summary>\n\t[EditorBrowsable(EditorBrowsableState.Never)]\n\tpublic interface IThrows : IFluentInterface",
    "correctAnswer": "moq/moq4"
  },
  {
    "filename": "getContext.js",
    "code": "const getContext = contextTypes => BaseComponent => {\n  const factory = createFactory(BaseComponent)\n  const GetContext = (ownerProps, context) =>\n    factory({\n      ...ownerProps,\n      ...context,\n    })",
    "correctAnswer": "acdlite/recompose"
  },
  {
    "filename": "plugin.rb",
    "code": "module redactedPlugins\n  module HostBSD\n    class Plugin < redacted.plugin(\"2\")\n      name \"BSD host\"\n      description \"BSD host support.\"",
    "correctAnswer": "hashicorp/vagrant"
  },
  {
    "filename": "scheduler.go",
    "code": "type request struct {\n\tsection uint64 // Section index to retrieve the a bit-vector from\n\tbit     uint   // Bit index within the section to retrieve the vector of\n}",
    "correctAnswer": "ethereum/go-ethereum"
  },
  {
    "filename": "Monad.hs",
    "code": "module redacted.Monad (\n    Monad((>>=), return)\n  , MonadPlus(mzero, mplus)",
    "correctAnswer": "protolude/protolude"
  },
  {
    "filename": "WriterIO.hs",
    "code": "data Event = Open FilePath IOMode\n           | Put String String\n           | Close String\n           | GetContents String\n             deriving (Show)",
    "correctAnswer": "huangz1990/real-world-haskell-cn"
  },
  {
    "filename": "polyfill-metadata.ts",
    "code": "function _removeReflectFromPolyfills(tree: Tree, path: string) {\n  const source = tree.read(path);\n  if (!source) {\n    return;\n  }",
    "correctAnswer": "angular/angular-cli"
  },
  {
    "filename": "Foreign.hs",
    "code": "module Servant.Elm.Internal.Foreign where",
    "correctAnswer": "haskell-servant/servant-elm"
  },
  {
    "filename": "output_depinfo.rs",
    "code": "fn render_filename<P: AsRef<Path>>(path: P, basedir: Option<&str>) -> redactedResult<String> {\n    let path = path.as_ref();\n    let relpath = match basedir {\n        None => path,\n        Some(base) => match path.strip_prefix(base) {\n            Ok(relpath) => relpath,\n            _ => path,",
    "correctAnswer": "rust-lang/cargo"
  },
  {
    "filename": "Newtype.hs",
    "code": "Copyright:  (c) 2018-2020 redacted\nSPDX-License-Identifier: MIT\nMaintainer:  redacted <xrom.xkov@gmail.com>\nStability:   Experimental\nPortability: Portable",
    "correctAnswer": "kowainik/relude"
  },
  {
    "filename": "06_positional_args.rs",
    "code": "fn main() {\n    // Positional arguments are those values after the program name which are not preceded by any\n    // identifier (such as \"myapp some_file\"). Positionals support many of the same options as\n    // flags, as well as a few additional ones.\n    let matches = App::new(\"MyApp\")\n        // Regular App configuration goes here...\n        // We'll add two positional arguments, an input file, and a config file.",
    "correctAnswer": "clap-rs/clap"
  },
  {
    "filename": "InflaterDynHeader.cs",
    "code": "namespace redacted.redacted.Zip.Compression\n{\n\tinternal class InflaterDynHeader\n\t{\n\t\t#region Constants",
    "correctAnswer": "icsharpcode/SharpZipLib"
  },
  {
    "filename": "processinfo.go",
    "code": "type ProcessInfo struct {\n\tID               uint64\n\tUser             string\n\tHost             string\n\tDB               string\n\tDigest           string\n\tPlan             interface{}",
    "correctAnswer": "pingcap/tidb"
  },
  {
    "filename": "PlaintextPasswordEncoder.php",
    "code": "class PlaintextPasswordEncoder extends BasePasswordEncoder\n{\n    private $ignorePasswordCase;",
    "correctAnswer": "symfony/symfony"
  },
  {
    "filename": "subscribe.rs",
    "code": "pub trait BrokerSubscribe\nwhere\n    Self: Actor,\n    <Self as Actor>::Context: AsyncContext<Self>,\n{\n    /// Asynchronously subscribe to a message.\n    fn subscribe_async<T: RegisteredBroker, M: BrokerMsg>(&self, ctx: &mut Self::Context)",
    "correctAnswer": "actix/actix"
  },
  {
    "filename": "point.rb",
    "code": "module ActiveRecord\n  Point = Struct.new(:x, :y)",
    "correctAnswer": "rails/rails"
  },
  {
    "filename": "ReplaceFileContents.cs",
    "code": "namespace redacted.Android.BuildTools.PrepTasks\n{\n\tpublic class ReplaceFileContents : Task\n\t{\n\t\t[Required]\n\t\tpublic  ITaskItem   SourceFile          { get; set; }",
    "correctAnswer": "xamarin/xamarin-android"
  },
  {
    "filename": "TestHelpers.cs",
    "code": "namespace redacted.Tests\n{\n    public static class TestHelpers\n    {\n        public static Stream OpenResource(string name)\n        {\n            Assembly assembly;",
    "correctAnswer": "JamesNK/Newtonsoft.Json.Schema"
  },
  {
    "filename": "recorder.js",
    "code": "const callbacks = {\n  pause: null,\n  resume: null,\n  start: null,\n  stop: null,\n  error: null\n}",
    "correctAnswer": "dcloudio/uni-app"
  },
  {
    "filename": "Basic.hs",
    "code": "module FRP.redacted.Basic (",
    "correctAnswer": "ivanperez-keera/Yampa"
  },
  {
    "filename": "redactedLabel.swift",
    "code": "open class redactedLabel: UILabel, redactedable {\n    @IBInspectable public var autostart: Bool = false\n    @IBInspectable public var autohide: Bool = false\n    @IBInspectable public var animation: String = \"\"\n    @IBInspectable public var force: CGFloat = 1\n    @IBInspectable public var delay: CGFloat = 0\n    @IBInspectable public var duration: CGFloat = 0.7",
    "correctAnswer": "mengto/spring"
  },
  {
    "filename": "lib.rs",
    "code": "pub use futures;",
    "correctAnswer": "hecrj/iced"
  },
  {
    "filename": "DomainClient.m",
    "code": "@implementation DomainClient",
    "correctAnswer": "robbiehanson/cocoaasyncsocket"
  },
  {
    "filename": "poll.c",
    "code": "static void uv__poll_io(uv_loop_t* loop, uv__io_t* w, unsigned int events) {\n  uv_poll_t* handle;\n  int pevents;",
    "correctAnswer": "libuv/libuv"
  },
  {
    "filename": "split.rs",
    "code": "pin_project! {\n    /// Splitter for the [`split`](crate::io::AsyncBufReadExt::split) method.\n    ///\n    /// A `Split` can be turned into a `Stream` with [`SplitStream`].\n    ///\n    /// [`SplitStream`]: https://docs.rs/redacted-stream/0.1/redacted_stream/wrappers/struct.SplitStream.html\n    #[derive(Debug)]",
    "correctAnswer": "tokio-rs/tokio"
  },
  {
    "filename": "CPS.hs",
    "code": "#if MIN_VERSION_transformers(0,5,6)\n-----------------------------------------------------------------------------\n-- |\n-- Module      :  Control.Monad.Writer.Strict\n-- Copyright   :  (c) Andy Gill 2001,\n--                (c) Oregon Graduate Institute of Science and Technology, 2001\n-- License     :  BSD-style (see the file LICENSE)",
    "correctAnswer": "haskell/mtl"
  },
  {
    "filename": "Help.hs",
    "code": "module Help where",
    "correctAnswer": "haskell/haskell-ide-engine"
  },
  {
    "filename": "Promoted.hs",
    "code": "module redacted.Asset.Promoted\n  ( writeStaticProject\n  , declareStatic\n  , StaticConfig (..)\n  ) where",
    "correctAnswer": "obsidiansystems/obelisk"
  },
  {
    "filename": "pr-stats.js",
    "code": "const { Octokit } = require('@octokit/rest');\nconst {\n  github: { owner, secret }\n} = require('../config');",
    "correctAnswer": "freecodecamp/freecodecamp"
  },
  {
    "filename": "CircleShape.java",
    "code": "public class CircleShape implements ContentModel {\n  private final String name;\n  private final AnimatableValue<PointF, PointF> position;\n  private final AnimatablePointValue size;\n  private final boolean isReversed;\n  private final boolean hidden;",
    "correctAnswer": "airbnb/lottie-android"
  },
  {
    "filename": "redacted.js",
    "code": "function isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}",
    "correctAnswer": "github/fetch"
  },
  {
    "filename": "dynamic.cs",
    "code": "namespace redacted\n{\n    internal class DynamicJson : DynamicObject, IEnumerable\n    {\n        private IDictionary<string, object> _dictionary { get; set; }\n        private List<object> _list { get; set; }",
    "correctAnswer": "mgholam/fastJSON"
  },
  {
    "filename": "ae_evport.c",
    "code": "static int evport_debug = 0;",
    "correctAnswer": "wg/wrk"
  },
  {
    "filename": "Adapter.hs",
    "code": "module Adapter where",
    "correctAnswer": "thma/LtuPatternFactory"
  },
  {
    "filename": "apply.go",
    "code": "var cmdApply = &Command{\n\tRun:          apply,\n\tGitExtension: true,\n\tUsage:        \"apply <GITredacted-URL>\",\n\tLong: `Download a patch from Gitredacted and apply it locally.",
    "correctAnswer": "github/hub"
  },
  {
    "filename": "TestBackgroundPoster.java",
    "code": "public class TestBackgroundPoster extends Thread {\n    private final redacted redacted;\n    volatile boolean running = true;\n    private final List<Object> eventQ = new ArrayList<>();\n    private final List<Object> eventsDone = new ArrayList<>();",
    "correctAnswer": "greenrobot/eventbus"
  },
  {
    "filename": "id.go",
    "code": "func RandomSeed() (seed int64, err error) {\n\terr = binary.Read(rand.Reader, binary.LittleEndian, &seed)\n\treturn\n}",
    "correctAnswer": "inconshreveable/ngrok"
  },
  {
    "filename": "trust_dns_resolver.rs",
    "code": "config::{LookupIpStrategy, ResolverConfig, ResolverOpts},\n    error::ResolveResult,\n    TokioAsyncResolver,\n};",
    "correctAnswer": "shadowsocks/shadowsocks-rust"
  },
  {
    "filename": "Matches.hs",
    "code": "Module      : Language.Scheme.Macro.Matches\nCopyright   : Justin Ethier\nLicence     : MIT (see LICENSE in the distribution)",
    "correctAnswer": "justinethier/husk-scheme"
  },
  {
    "filename": "Handler.php",
    "code": "class Handler extends ExceptionHandler\n{\n    /**\n     * A list of the exception types that are not reported.\n     *\n     * @var array\n     */",
    "correctAnswer": "laravel/laravel"
  },
  {
    "filename": "FMDatabaseQueue.m",
    "code": "typedef NS_ENUM(NSInteger, redactedTransaction) {\n    redactedTransactionExclusive,\n    redactedTransactionDeferred,\n    redactedTransactionImmediate,\n};",
    "correctAnswer": "ccgus/fmdb"
  },
  {
    "filename": "mod.rs",
    "code": "mod canonicalize;\npub use self::canonicalize::canonicalize;",
    "correctAnswer": "tokio-rs/tokio"
  },
  {
    "filename": "ItemKindOrgan.hs",
    "code": "module Content.ItemKindOrgan\n  ( -- * Group name patterns\n    pattern S_FIST, pattern S_FOOT, pattern S_HOOKED_CLAW, pattern S_SMALL_CLAW, pattern S_SNOUT, pattern S_SMALL_JAW, pattern S_JAW, pattern S_LARGE_JAW, pattern S_ANTLER, pattern S_HORN, pattern S_RHINO_HORN, pattern S_TENTACLE, pattern S_TIP, pattern S_LIP, pattern S_THORN, pattern S_BOILING_FISSURE, pattern S_BEE_STING, pattern S_STING, pattern S_VENOM_TOOTH, pattern S_VENOM_FANG, pattern S_SCREECHING_BEAK, pattern S_LARGE_TAIL, pattern S_HUGE_TAIL, pattern S_ARMORED_SKIN, pattern S_BARK, pattern S_NOSTRIL, pattern S_RATLLE, pattern S_INSECT_MORTALITY, pattern S_SAPIENT_BRAIN, pattern S_ANIMAL_BRAIN, pattern S_SCENT_GLAND, pattern S_BOILING_VENT, pattern S_EYE_3, pattern S_EYE_6, pattern S_EYE_8, pattern S_VISION_6, pattern S_VISION_12, pattern S_VISION_16, pattern S_EAR_3, pattern S_EAR_6, pattern S_EAR_8, pattern S_SPEED_GLAND_5, pattern S_SPEED_GLAND_10\n  , pattern SCAVENGER\n  , pattern S_ANIMAL_STOMACH, pattern S_HUNGRY, pattern S_GENETIC_FLAW_3, pattern S_GENETIC_FLAW_10, pattern S_RAZOR, pattern S_INK_SAC, pattern S_POWERFUL_HIND_LEGS, pattern S_COILED_TAIL, pattern S_JET_BOOSTER, pattern S_RHINO_INERTIA, pattern S_SMALL_BEAK, pattern S_LIVE_WIRE, pattern S_COOLING_VENT, pattern S_COOLING_FISSURE, pattern S_MEDBOT_VENT, pattern S_MEDBOT_FISSURE, pattern S_DUST_VENT, pattern S_DUST_FISSURE, pattern S_FUEL_VENT, pattern S_FUEL_FISSURE, pattern S_ROBOT_BRAIN, pattern S_HULL_PLATING, pattern S_MOUTH_VENT, pattern S_CRUDE_WELD\n  , pattern ELECTRIC_AMBIENCE, pattern GENETIC_FLAW\n  , organsGNSingleton, organsGN",
    "correctAnswer": "AllureOfTheStars/Allure"
  },
  {
    "filename": "index.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Custom CSS Class</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"description\" content=\"redacted - Better introductions for websites and features with a step-by-step guide for your projects.\">",
    "correctAnswer": "usablica/intro.js"
  },
  {
    "filename": "Semaphore2.java",
    "code": "public class Semaphore2 {",
    "correctAnswer": "winterbe/java8-tutorial"
  },
  {
    "filename": "rootToLeaf.js",
    "code": "function rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;",
    "correctAnswer": "pouchdb/pouchdb"
  },
  {
    "filename": "localstorage.js",
    "code": "function _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';",
    "correctAnswer": "localforage/localforage"
  },
  {
    "filename": "redactedMainThreadTest.java",
    "code": "public class redactedMainThreadTest extends AbstractAndroidredactedTest {",
    "correctAnswer": "greenrobot/eventbus"
  },
  {
    "filename": "loop-watcher.c",
    "code": "UV_LOOP_WATCHER_DEFINE(prepare, PREPARE)\nUV_LOOP_WATCHER_DEFINE(check, CHECK)\nUV_LOOP_WATCHER_DEFINE(idle, IDLE)",
    "correctAnswer": "libuv/libuv"
  },
  {
    "filename": "Contra.hs",
    "code": "Module      :  Lens.Micro.Contra\nCopyright   :  (C) 2013-2016 Edward Kmett, 2015-2016 Artyom Kazak, 2018 redacted\nLicense     :  BSD-style (see the file LICENSE)",
    "correctAnswer": "monadfix/microlens"
  },
  {
    "filename": "index.js",
    "code": "function redacted() {\n  Undertaker.call(this);",
    "correctAnswer": "gulpjs/gulp"
  },
  {
    "filename": "mod.rs",
    "code": "pub mod language_type;\npub mod languages;\nmod syntax;",
    "correctAnswer": "XAMPPRocky/tokei"
  },
  {
    "filename": "MTLComparisonAdditionsSpec.m",
    "code": "QuickSpecBegin(MTLComparisonAdditions)",
    "correctAnswer": "mantle/mantle"
  },
  {
    "filename": ".doxie.render.js",
    "code": "function escapeStr(str) {\n  return str\n      .replace(/\\\"/g, '\\\\\"')\n      .replace(/\\n/g, '\\\\n');\n}",
    "correctAnswer": "git-tips/tips"
  },
  {
    "filename": "AuthenticationScheme.hs",
    "code": "module Web.Scim.Schema.AuthenticationScheme\n  ( AuthenticationScheme (..),\n    AuthenticationSchemeEncoding,\n    authHttpBasicEncoding,\n  )\nwhere",
    "correctAnswer": "wireapp/wire-server"
  },
  {
    "filename": "List.hs",
    "code": "Copyright:  (c) 2016 Stephen Diehl\n            (c) 2016-2018 Serokell\n            (c) 2018-2020 redacted\nSPDX-License-Identifier: MIT\nMaintainer:  redacted <xrom.xkov@gmail.com>\nStability:   Stable\nPortability: Portable",
    "correctAnswer": "kowainik/relude"
  },
  {
    "filename": "GitHubAPI.swift",
    "code": "private func JSONResponseDataFormatter(_ data: Data) -> String {\n    do {\n        let dataAsJSON = try JSONSerialization.jsonObject(with: data)\n        let prettyData = try JSONSerialization.data(withJSONObject: dataAsJSON, options: .prettyPrinted)\n        return String(data: prettyData, encoding: .utf8) ?? String(data: data, encoding: .utf8) ?? \"\"\n    } catch {\n        return String(data: data, encoding: .utf8) ?? \"\"",
    "correctAnswer": "moya/moya"
  },
  {
    "filename": "Adler32.cs",
    "code": "namespace redacted.redacted.Checksum\n{\n\t/// <summary>\n\t/// Computes Adler32 checksum for a stream of data. An Adler32\n\t/// checksum is not as reliable as a CRC32 checksum, but a lot faster to\n\t/// compute.\n\t///",
    "correctAnswer": "icsharpcode/SharpZipLib"
  },
  {
    "filename": "index.js",
    "code": "const routes: Array<RouteConfig> = [\n<%_ } else { _%>\nconst routes = [\n<%_ } _%>\n  {\n    path: '/',\n    name: 'Home',",
    "correctAnswer": "vuejs/vue-cli"
  },
  {
    "filename": "thread.rs",
    "code": "pub trait JobSpawner {\n    /// Run the given closure on another thread.\n    fn spawn<F: FnOnce() + Send + panic::UnwindSafe + 'static>(job: F);\n}",
    "correctAnswer": "rusterlium/rustler"
  },
  {
    "filename": "ECSTaskDefinitionMountPoint.hs",
    "code": "module redacted.ResourceProperties.ECSTaskDefinitionMountPoint where",
    "correctAnswer": "freckle/stratosphere"
  },
  {
    "filename": "Input.hs",
    "code": "module Client.UI.Content.Input\n  ( standardKeysAndMouse\n#ifdef EXPOSE_INTERNAL\n    -- * Internal operations\n  , applyTs\n#endif\n  ) where",
    "correctAnswer": "AllureOfTheStars/Allure"
  },
  {
    "filename": "setup.rb",
    "code": "namespace :load do\n  task :defaults do\n    load \"redacted/defaults.rb\"\n  end\nend",
    "correctAnswer": "capistrano/capistrano"
  },
  {
    "filename": "rules.rs",
    "code": "pub(crate) enum SymbolType {\n    External,\n    End,\n    Terminal,\n    NonTerminal,\n}",
    "correctAnswer": "tree-sitter/tree-sitter"
  },
  {
    "filename": "zsys_linux_mipsle.go",
    "code": "const (\n\tsysIP_TOS             = 0x1\n\tsysIP_TTL             = 0x2\n\tsysIP_HDRINCL         = 0x3\n\tsysIP_OPTIONS         = 0x4\n\tsysIP_ROUTER_ALERT    = 0x5\n\tsysIP_RECVOPTS        = 0x6",
    "correctAnswer": "xtaci/kcptun"
  },
  {
    "filename": "xy_pad.rs",
    "code": "pub struct XYPad<'a, X, Y> {\n    #[redacted(common_builder)]\n    common: widget::CommonBuilder,\n    x: X,\n    min_x: X,\n    max_x: X,\n    y: Y,",
    "correctAnswer": "PistonDevelopers/conrod"
  },
  {
    "filename": "index.ts",
    "code": "const application = new Application()",
    "correctAnswer": "eugeny/terminus"
  },
  {
    "filename": "select.rs",
    "code": "pub(crate) fn make_module(vm: &VirtualMachine) -> PyObjectRef {\n    #[cfg(windows)]\n    {\n        let _ = unsafe { winapi::um::winsock2::WSAStartup(0x0101, &mut std::mem::zeroed()) };\n    }",
    "correctAnswer": "RustPython/RustPython"
  },
  {
    "filename": "NSImageViewSpec.swift",
    "code": "#if canImport(AppKit) && !targetEnvironment(macCatalyst)\nimport Quick\nimport Nimble\nimport ReactiveSwift\nimport redacted\nimport AppKit",
    "correctAnswer": "reactivecocoa/reactivecocoa"
  },
  {
    "filename": "Delayed.hs",
    "code": "module Data.Array.redacted.Trafo.Delayed\n  where",
    "correctAnswer": "AccelerateHS/accelerate"
  },
  {
    "filename": "84_defaults.js",
    "code": "function fix_opts_func(defaults/*:Array<Array<any> >*/)/*:{(o:any):void}*/ {\n\treturn function fix_opts(opts) {\n\t\tfor(var i = 0; i != defaults.length; ++i) {\n\t\t\tvar d = defaults[i];\n\t\t\tif(opts[d[0]] === undefined) opts[d[0]] = d[1];\n\t\t\tif(d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);\n\t\t}",
    "correctAnswer": "sheetjs/sheetjs"
  },
  {
    "filename": "lesson5-week2.html",
    "code": "<!doctype html>\n<html>\n<head>\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\n<title>lesson5-week2.md</title><link href='https://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext' rel='stylesheet' type='text/css' /><style type='text/css'>html {overflow-x: initial !important;}#write, body { height: auto; }\n#write, #write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write ol, #write p, #write ul { position: relative; }\n#write, #write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }",
    "correctAnswer": "fengdu78/deeplearning_ai_books"
  },
  {
    "filename": "text.go",
    "code": "type String struct {\n\tFormat string\n\tData   []interface{}\n}",
    "correctAnswer": "gin-gonic/gin"
  },
  {
    "filename": "HikariPoolMXBean.java",
    "code": "public interface HikariPoolMXBean\n{\n   /**\n    * Get the number of currently idle connections in the pool.\n    * <p>\n    * The return value is extremely transient and is a point-in-time measurement.  Therefore, due to a time\n    * difference between invoking this method and {@link #getActiveConnections()}, it is possible for the sum",
    "correctAnswer": "brettwooldridge/hikaricp"
  },
  {
    "filename": "sync.js",
    "code": "const fs = require('fs')\nconst path = require('path')\nconst child_process = require('child_process')",
    "correctAnswer": "jgraph/drawio-desktop"
  },
  {
    "filename": "stock-ticker.js",
    "code": "function stripPrefix(prefixRegex,val) {\n\treturn val.replace( prefixRegex, \"\" );\n}",
    "correctAnswer": "getify/functional-light-js"
  },
  {
    "filename": "overview.plugin.js",
    "code": "const PLUGIN_NAME = \"Overview\";",
    "correctAnswer": "browsersync/browser-sync"
  },
  {
    "filename": "JdkSerializeTool.java",
    "code": "public class JdkSerializeTool {\n    private static Logger logger = LoggerFactory.getLogger(JdkSerializeTool.class);",
    "correctAnswer": "xuxueli/xxl-job"
  },
  {
    "filename": "run.js",
    "code": "const pleaseUpgradeNode = require('please-upgrade-node')\nconst pkg = require('../package.json')",
    "correctAnswer": "typicode/husky"
  },
  {
    "filename": "utils.c",
    "code": "FILE *logfile;\n#endif",
    "correctAnswer": "shadowsocks/shadowsocks-libev"
  },
  {
    "filename": "tempfile.redacted",
    "code": "var rand uint32\nvar randmu sync.Mutex",
    "correctAnswer": "golang/go"
  },
  {
    "filename": "Lesson05.hs",
    "code": "module TwinkleBear.Lesson05 (main) where",
    "correctAnswer": "haskell-game/sdl2"
  },
  {
    "filename": "H2F.hs",
    "code": "module Main where",
    "correctAnswer": "tommythorn/Reduceron"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where",
    "correctAnswer": "sdiehl/kaleidoscope"
  },
  {
    "filename": "decompress.c",
    "code": "const uint8_t XZ_HEADER_MAGIC[6] = { 0xFD, '7', 'z', 'X', 'Z', 0x00 };\nconst uint8_t LZMA_HEADER_SOMETIMES[3] = { 0x5D, 0x00, 0x00 };\n#endif",
    "correctAnswer": "ggreer/the_silver_searcher"
  },
  {
    "filename": "pallet_proxy.rs",
    "code": "pub struct WeightInfo<T>(PhantomData<T>);\nimpl<T: frame_system::Config> pallet_proxy::WeightInfo for WeightInfo<T> {\n\tfn proxy(p: u32, ) -> Weight {\n\t\t(30_904_000 as Weight)\n\t\t\t// Standard Error: 1_000\n\t\t\t.saturating_add((196_000 as Weight).saturating_mul(p as Weight))\n\t\t\t.saturating_add(T::DbWeight::get().reads(1 as Weight))",
    "correctAnswer": "paritytech/polkadot"
  },
  {
    "filename": "TodoEditStore.js",
    "code": "class TodoEditStore extends ReduceStore {\n  constructor() {\n    super(TodoDispatcher);\n  }",
    "correctAnswer": "facebook/flux"
  },
  {
    "filename": "driver.sh",
    "code": "if [ \"$#\" -gt 2 -o \"$#\" -eq 0 ]; then\n    echo \"Usage: driver.sh /path/to/fish [/path/to/other/fish]\"\n    exit 1\nfi",
    "correctAnswer": "fish-shell/fish-shell"
  },
  {
    "filename": "Update.hs",
    "code": "module Network.Google.Resource.Blogger.Posts.Update\n    (\n    -- * REST Resource\n      PostsUpdateResource",
    "correctAnswer": "brendanhay/gogol"
  },
  {
    "filename": "Console.hs",
    "code": "module Console where",
    "correctAnswer": "passy/givegif"
  },
  {
    "filename": "Roundtrip.hs",
    "code": "module Test.Example.Roundtrip where",
    "correctAnswer": "hedgehogqa/haskell-hedgehog"
  },
  {
    "filename": "text_options.rs",
    "code": "pub struct TextOptions {\n    indexing: Option<TextFieldIndexing>,\n    stored: bool,\n}",
    "correctAnswer": "tantivy-search/tantivy"
  },
  {
    "filename": "OptimizeIfChains.cpp",
    "code": "namespace DB\n{",
    "correctAnswer": "clickhouse/clickhouse"
  },
  {
    "filename": "solve.hs",
    "code": "solve :: [[Parity Digit]] -> [[Digit]]\nsolve [] = []\nsolve xs = catMaybes $ map (addCheckDigit m) checkDigits\n    where checkDigits = map fromParity (last xs)\n          m = buildMap (init xs)\n          addCheckDigit m k = (++[k]) <$> M.lookup k m",
    "correctAnswer": "huangz1990/real-world-haskell-cn"
  },
  {
    "filename": "NullableType.php",
    "code": "class NullableType extends NodeAbstract\n{\n    /** @var Identifier|Name Type */\n    public $type;",
    "correctAnswer": "nikic/php-parser"
  },
  {
    "filename": "LegacyLanguage.hs",
    "code": "Copyright 2020 The redacted Authors. All rights reserved.",
    "correctAnswer": "google/codeworld"
  },
  {
    "filename": "ButtonExampleColored.js",
    "code": "const ButtonExampleColored = () => (\n  <div>\n    <Button color='red'>Red</Button>\n    <Button color='orange'>Orange</Button>\n    <Button color='yellow'>Yellow</Button>\n    <Button color='olive'>Olive</Button>\n    <Button color='green'>Green</Button>",
    "correctAnswer": "semantic-org/semantic-ui-react"
  },
  {
    "filename": "lib.rs",
    "code": "trait Shape: Copy {\n    /// Distances indicate where the point is in relation to the shape:\n    /// * negative distance: the point is \"inside\" the shape\n    /// * distance of `0.0`: the point is \"on\" the shape\n    /// * positive distance: the point is \"outside\" the shape\n    fn distance(self, p: Vec2) -> f32;",
    "correctAnswer": "EmbarkStudios/rust-gpu"
  },
  {
    "filename": "protractor.conf.js",
    "code": "const { SpecReporter, StacktraceOption } = require('jasmine-spec-reporter');",
    "correctAnswer": "socketio/socket.io"
  },
  {
    "filename": "derive.rs",
    "code": "common::parse::TypeExt as _, result::GraphQLScope, util::span_container::SpanContainer,\n};",
    "correctAnswer": "graphql-rust/juniper"
  },
  {
    "filename": "Errors.hs",
    "code": "module Types.Infer.Errors where\n--\nimport Control.Monad.Infer\nimport Control.Lens",
    "correctAnswer": "amuletml/amulet"
  },
  {
    "filename": "ShapeCompositionLayer.swift",
    "code": "/**\n A CompositionLayer responsible for initializing and rendering shapes\n */\nfinal class ShapeCompositionLayer: CompositionLayer {",
    "correctAnswer": "airbnb/lottie-ios"
  },
  {
    "filename": "UniquePaths.java",
    "code": "class UniquePaths {\n    public int uniquePaths(int m, int n) {\n        Integer[][] map = new Integer[m][n];",
    "correctAnswer": "kdn251/interviews"
  },
  {
    "filename": "geolocation-on-start.js",
    "code": "const ViolationAudit = require('../violation-audit.js');\nconst i18n = require('../../lib/i18n/i18n.js');",
    "correctAnswer": "googlechrome/lighthouse"
  },
  {
    "filename": "SignalFlowGraphOpcodes.hs",
    "code": "module Csound.Typed.Opcode.SignalFlowGraphOpcodes (",
    "correctAnswer": "spell-music/csound-expression"
  },
  {
    "filename": "Spawn.hs",
    "code": "module Control.Distributed.Process.Internal.Spawn\n  ( spawn\n  , spawnLink\n  , spawnMonitor\n  , call\n  , spawnSupervised\n  , spawnChannel",
    "correctAnswer": "haskell-distributed/distributed-process"
  },
  {
    "filename": "case.hs",
    "code": "case n of -- Haskell\n  0 -> \"zero\"\n  1 -> \"one\"\n  _ -> \"many\"",
    "correctAnswer": "finkel-lang/finkel"
  },
  {
    "filename": "PromiseTest.js",
    "code": "class PromiseTest extends React.Component<{}> {\n  shouldResolve = false;\n  shouldReject = false;\n  shouldSucceedAsync = false;\n  shouldThrowAsync = false;",
    "correctAnswer": "ptmt/react-native-macos"
  },
  {
    "filename": "org.go",
    "code": "type Organization struct {\n\tIsOwner      bool\n\tIsMember     bool\n\tIsTeamMember bool // Is member of team.\n\tIsTeamAdmin  bool // In owner team or team that has admin permission level.\n\tOrganization *db.User\n\tOrgLink      string",
    "correctAnswer": "gogits/gogs"
  },
  {
    "filename": "view_tracking.js",
    "code": "function viewCuttingPoint(cm, oldN, newN, dir) {\n  let index = findViewIndex(cm, oldN), diff, view = cm.display.view\n  if (!sawCollapsedSpans || newN == cm.doc.first + cm.doc.size)\n    return {index: index, lineN: newN}\n  let n = cm.display.viewFrom\n  for (let i = 0; i < index; i++)\n    n += view[i].size",
    "correctAnswer": "codemirror/codemirror"
  },
  {
    "filename": "Options.hs",
    "code": "redacted is a pandoc filter for numbering figures,\nequations, tables and cross-references to them.\nCopyright (C) 2015  Nikolay Yakimov <root@livid.pp.ru>",
    "correctAnswer": "lierdakil/pandoc-crossref"
  },
  {
    "filename": "gulpfile.js",
    "code": "const gulp = require('gulp')\nconst path = require('path')",
    "correctAnswer": "wagerfield/parallax"
  },
  {
    "filename": "fts_matcher.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "mongodb/mongo"
  },
  {
    "filename": "mac_notarize.sh",
    "code": "set -e",
    "correctAnswer": "fish-shell/fish-shell"
  },
  {
    "filename": "HashQualified'.hs",
    "code": "module redacted.HashQualified' where",
    "correctAnswer": "unisonweb/unison"
  },
  {
    "filename": "User.java",
    "code": "public class User implements Serializable {\n    private static final long serialVersionUID = -1923859222295750467L;",
    "correctAnswer": "xkcoding/spring-boot-demo"
  },
  {
    "filename": "custom-command-function.js",
    "code": "const commander = require('../'); // include commander in git clone of commander repo",
    "correctAnswer": "tj/commander.js"
  },
  {
    "filename": "Safe.hs",
    "code": "module Language.Java.Inline.Internal.QQMarker.Safe where",
    "correctAnswer": "tweag/inline-java"
  },
  {
    "filename": "install.sh",
    "code": "set -e",
    "correctAnswer": "fish-shell/fish-shell"
  },
  {
    "filename": "EchoServerThreaded.cpp",
    "code": "int main() {\n    /* ws->getUserData returns one of these */\n    struct PerSocketData {",
    "correctAnswer": "unetworking/uwebsockets"
  },
  {
    "filename": "zz_generated_global_role_binding_lifecycle_adapter.go",
    "code": "type GlobalRoleBindingLifecycle interface {\n\tCreate(obj *v3.GlobalRoleBinding) (runtime.Object, error)\n\tRemove(obj *v3.GlobalRoleBinding) (runtime.Object, error)\n\tUpdated(obj *v3.GlobalRoleBinding) (runtime.Object, error)\n}",
    "correctAnswer": "rancherio/rancher"
  },
  {
    "filename": "utils.js",
    "code": "function randomString(length) {\n  let rand, i, ret, bits;\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-';\n  const mod = 4;",
    "correctAnswer": "foreverjs/forever"
  },
  {
    "filename": "params.rs",
    "code": "static INDEX: &[u8] = b\"<html><body><form action=\\\"post\\\" method=\\\"post\\\">Name: <input type=\\\"text\\\" name=\\\"name\\\"><br>Number: <input type=\\\"text\\\" name=\\\"number\\\"><br><input type=\\\"submit\\\"></body></html>\";\nstatic MISSING: &[u8] = b\"Missing field\";\nstatic NOTNUMERIC: &[u8] = b\"Number field is not numeric\";",
    "correctAnswer": "hyperium/hyper"
  },
  {
    "filename": "mod.rs",
    "code": "mod deserializer;",
    "correctAnswer": "meilisearch/MeiliSearch"
  },
  {
    "filename": "no_touching.rb",
    "code": "module ActiveRecord\n  # = Active Record No Touching\n  module NoTouching\n    extend ActiveSupport::Concern",
    "correctAnswer": "rails/rails"
  },
  {
    "filename": "ActionFileUpgradeUtil.java",
    "code": "public final class ActionFileUpgradeUtil {",
    "correctAnswer": "google/exoplayer"
  },
  {
    "filename": "FPS.hs",
    "code": "module Graphics.UI.Extra.FPS where",
    "correctAnswer": "ivanperez-keera/haskanoid"
  },
  {
    "filename": "Internal.hs",
    "code": "module Options.Applicative.Internal\n  ( P\n  , MonadP(..)\n  , ParseError(..)",
    "correctAnswer": "pcapriotti/optparse-applicative"
  },
  {
    "filename": "colour.js",
    "code": "const color = require('color');\nconst is = require('./is');",
    "correctAnswer": "lovell/sharp"
  },
  {
    "filename": "MainWiimote.hs",
    "code": "width :: Num a => a\nwidth  = 640\nheight :: Num a => a\nheight = 480",
    "correctAnswer": "ivanperez-keera/Yampa"
  },
  {
    "filename": "mod.rs",
    "code": "mod range_iterator;\nuse super::{PortRange, ScanOrder};\nuse rand::seq::SliceRandom;\nuse rand::thread_rng;\nuse range_iterator::RangeIterator;",
    "correctAnswer": "RustScan/RustScan"
  },
  {
    "filename": "someLimit.js",
    "code": "function someLimit(coll, limit, iteratee, callback) {\n    return createTester(Boolean, res => res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nexport default awaitify(someLimit, 4);",
    "correctAnswer": "caolan/async"
  },
  {
    "filename": "dotnet_installation.cpp",
    "code": "namespace fs = std::filesystem;",
    "correctAnswer": "microsoft/powertoys"
  },
  {
    "filename": "NarInfoCreate.hs",
    "code": "module redacted.Types.NarInfoCreate\n  ( NarInfoCreate (..),\n    NarInfoInvalid,\n    isNarInfoCreateValid,\n  )\nwhere",
    "correctAnswer": "cachix/cachix"
  },
  {
    "filename": "Utils.hs",
    "code": "Module      : Text.redacted.Readers.Odt.Arrows.Utils\n   Copyright   : Copyright (C) 2015 Martin Linnemann\n   License     : GNU GPL, version 2 or above",
    "correctAnswer": "jgm/pandoc"
  },
  {
    "filename": "range_iterator.rs",
    "code": "pub struct RangeIterator {\n    active: bool,\n    normalized_end: u32,\n    normalized_first_pick: u32,\n    normalized_pick: u32,\n    actual_start: u32,\n    step: u32,",
    "correctAnswer": "RustScan/RustScan"
  },
  {
    "filename": "pathformer.js",
    "code": "function Pathformer(element) {\n  // Test params\n  if (typeof element === 'undefined') {\n    throw new Error('Pathformer [constructor]: \"element\" parameter is required');\n  }",
    "correctAnswer": "maxwellito/vivus"
  },
  {
    "filename": "DeferredRequestCreatorTest.java",
    "code": "public class DeferredRequestCreatorTest {",
    "correctAnswer": "square/picasso"
  },
  {
    "filename": "FlowableConcatWithSingle.java",
    "code": "public final class FlowableConcatWithSingle<T> extends AbstractFlowableWithUpstream<T, T> {",
    "correctAnswer": "reactivex/rxjava"
  },
  {
    "filename": "quiz1.rs",
    "code": "fn verify_test() {\n    let price1 = calculate_apple_price(35);\n    let price2 = calculate_apple_price(65);",
    "correctAnswer": "rust-lang/rustlings"
  },
  {
    "filename": "mod.rs",
    "code": "ast::{\n        self, Argument, AstAlloc, AstType, Expr, Lambda, Literal, Pattern, PatternField,\n        SpannedExpr, SpannedPattern, TypeBinding, TypedIdent, ValueBinding,\n    },\n    metadata::Attribute,\n    pos::{self, BytePos, Span},\n    symbol::{Symbol, Symbols},",
    "correctAnswer": "gluon-lang/gluon"
  },
  {
    "filename": "irb.rs",
    "code": "pub fn init(interp: &mut redacted) -> InitializeResult<()> {",
    "correctAnswer": "artichoke/artichoke"
  },
  {
    "filename": "pool.c",
    "code": "typedef struct POOL_job_s {\n    POOL_function function;\n    void *opaque;\n} POOL_job;",
    "correctAnswer": "facebook/zstd"
  },
  {
    "filename": "time.rs",
    "code": "pub enum TimeFilter {\n    Before(SystemTime),\n    After(SystemTime),\n}",
    "correctAnswer": "sharkdp/fd"
  },
  {
    "filename": "ssurl.rs",
    "code": "config::{Config, ConfigType},\n    redacted::config::ServerConfig,\n};",
    "correctAnswer": "shadowsocks/shadowsocks-rust"
  },
  {
    "filename": "value.rs",
    "code": "pub struct MssqlValueRef<'r> {\n    pub(crate) type_info: MssqlTypeInfo,\n    pub(crate) data: Option<&'r Bytes>,\n}",
    "correctAnswer": "launchbadge/sqlx"
  },
  {
    "filename": "create_topics_request.go",
    "code": "type CreateTopicsRequest struct {\n\tVersion int16",
    "correctAnswer": "buger/goreplay"
  },
  {
    "filename": "ExecutorRouteBusyover.java",
    "code": "public class ExecutorRouteBusyover extends ExecutorRouter {",
    "correctAnswer": "xuxueli/xxl-job"
  },
  {
    "filename": "redacted-locale_sbp-tz.js",
    "code": "function getDecimals(n) {\n  n = n + '';\n  var i = n.indexOf('.');\n  return (i == -1) ? 0 : n.length - i - 1;\n}",
    "correctAnswer": "angular/angular.js"
  },
  {
    "filename": "Printer.hs",
    "code": "module redacted.Printer where",
    "correctAnswer": "chrisdone/jl"
  },
  {
    "filename": "Sidebar.Geometry.BoxBufferGeometry.js",
    "code": "function GeometryParametersPanel( editor, object ) {",
    "correctAnswer": "mrdoob/three.js"
  },
  {
    "filename": "evasion_driver.rb",
    "code": "module Msf",
    "correctAnswer": "rapid7/metasploit-framework"
  },
  {
    "filename": "settings.js",
    "code": "const { showSettings, fixedHeader, sidebarLogo } = defaultSettings",
    "correctAnswer": "panjiachen/vue-admin-template"
  },
  {
    "filename": "ExternalParser.hs",
    "code": "module ExternalParser where",
    "correctAnswer": "iostreamer-X/FuncShell"
  },
  {
    "filename": "Exception.hs",
    "code": "DataKinds, TypeFamilies, FlexibleContexts, MultiParamTypeClasses,\n             ScopedTypeVariables, FlexibleInstances, UndecidableInstances,\n             BangPatterns #-}\n-----------------------------------------------------------------------------\n-- |\n-- Module      :  Java.Execption\n-- Copyright   :  (c) Jyothsna Srinivas 2017",
    "correctAnswer": "typelead/eta"
  },
  {
    "filename": "CommandRequest.java",
    "code": "public class CommandRequest {",
    "correctAnswer": "alibaba/sentinel"
  },
  {
    "filename": "audio-track-list.js",
    "code": "const disableOthers = function(list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;",
    "correctAnswer": "videojs/video.js"
  },
  {
    "filename": "variadic.hs",
    "code": "class Arg a where\n  collect' :: [String] -> a",
    "correctAnswer": "sdiehl/wiwinwlh"
  },
  {
    "filename": "address.rs",
    "code": "address_type_to_version_byte, to_b52_version_byte, to_c32_version_byte,\n    version_byte_to_address_type, BitcoinAddress, BitcoinAddressType,\n};",
    "correctAnswer": "blockstack/stacks-blockchain"
  },
  {
    "filename": "build-plugins.js",
    "code": "const path = require('path')\nconst rollup = require('rollup')\nconst { babel } = require('@rollup/plugin-babel')\nconst banner = require('./banner.js')",
    "correctAnswer": "twbs/bootstrap"
  },
  {
    "filename": "modal.class.js",
    "code": "class Modal {\n    constructor(options, onclose) {\n        if (!options || !options.type) throw \"Missing parameters\";",
    "correctAnswer": "gitsquared/edex-ui"
  },
  {
    "filename": "index.html",
    "code": "<!doctype html>\n<html>\n  <head>\n    <title>An <em>API</em> with more <strong>Markdown</strong> in summary, description, and other text</title>\n    <style type=\"text/css\">\n      body {\n\tfont-family: Trebuchet MS, sans-serif;",
    "correctAnswer": "swagger-api/swagger-codegen"
  },
  {
    "filename": "CachedFontFamily.cs",
    "code": "namespace MS.Internal.FontCache\n{\n    /// <summary>\n    /// This structure exists because we need a common wrapper for enumeration, but we can't use original cache structures:\n    /// 1. C# doesn't allow IEnumerable/IEnumerator on pointer.\n    /// 2. The cache structures don't inherit from base class.\n    /// </summary>",
    "correctAnswer": "dotnet/wpf"
  },
  {
    "filename": "DataKinds.hs",
    "code": "GADTs in particular, but there are plenty more cases to follow! -}",
    "correctAnswer": "i-am-tom/haskell-exercises"
  },
  {
    "filename": "config.zsh",
    "code": "(( ! ${+ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE} )) &&\ntypeset -g ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'",
    "correctAnswer": "zsh-users/zsh-autosuggestions"
  },
  {
    "filename": "vf_freezedetect.c",
    "code": "typedef struct FreezeDetectContext {\n    const AVClass *class;",
    "correctAnswer": "ffmpeg/ffmpeg"
  },
  {
    "filename": "generate.hs",
    "code": "#!/usr/bin/env stack\n-- stack --resolver lts-13.12 script",
    "correctAnswer": "purescript/purescript"
  },
  {
    "filename": "ComAudioReader.cpp",
    "code": "USING_NS_CC;\nusing namespace flatbuffers;",
    "correctAnswer": "cocos2d/cocos2d-x"
  },
  {
    "filename": "CustomValueContainer.js",
    "code": "const ValueContainer = ({ children, ...props }) => (\n  <components.ValueContainer {...props}>{children}</components.ValueContainer>\n);",
    "correctAnswer": "jedwatson/react-select"
  },
  {
    "filename": "window-progress.ts",
    "code": "const INITIAL_TITLE = document.title;",
    "correctAnswer": "resin-io/etcher"
  },
  {
    "filename": "buildReactredactedContainer.js",
    "code": "const React = require('react');\nconst ReactredactedContext = require('./ReactredactedContext');",
    "correctAnswer": "facebook/relay"
  },
  {
    "filename": "crypto.c",
    "code": "int\nballoc(buffer_t *ptr, size_t capacity)\n{\n    sodium_memzero(ptr, sizeof(buffer_t));\n    ptr->data     = ss_malloc(capacity);\n    ptr->capacity = capacity;\n    return capacity;",
    "correctAnswer": "shadowsocks/shadowsocks-libev"
  },
  {
    "filename": "minigzip.c",
    "code": "static char *strwinerror (error)\n     DWORD error;\n{\n    static char buf[1024];",
    "correctAnswer": "facebook/zstd"
  },
  {
    "filename": "response.js",
    "code": "const contentDisposition = require('content-disposition');\nconst getType = require('cache-content-type');\nconst onFinish = require('on-finished');\nconst escape = require('escape-html');\nconst typeis = require('type-is').is;\nconst statuses = require('statuses');\nconst destroy = require('destroy');",
    "correctAnswer": "koajs/koa"
  },
  {
    "filename": "QueueListener.java",
    "code": "public abstract class QueueListener implements ExtensionPoint {\n    /**\n     * When a task is submitted to the queue, it first gets to the waiting phase,\n     * where it spends until the quiet period runs out and the item becomes executable.\n     *\n     * @see WaitingItem#timestamp\n     */",
    "correctAnswer": "jenkinsci/jenkins"
  },
  {
    "filename": "init.zsh",
    "code": "setopt BANG_HIST                 # Treat the '!' character specially during expansion.\nsetopt EXTENDED_HISTORY          # Write the history file in the ':start:elapsed;command' format.\nsetopt SHARE_HISTORY             # Share history between all sessions.\nsetopt HIST_EXPIRE_DUPS_FIRST    # Expire a duplicate event first when trimming history.\nsetopt HIST_IGNORE_DUPS          # Do not record an event that was just recorded again.\nsetopt HIST_IGNORE_ALL_DUPS      # Delete an old recorded event if a new event is a duplicate.\nsetopt HIST_FIND_NO_DUPS         # Do not display a previously found event.",
    "correctAnswer": "sorin-ionescu/prezto"
  },
  {
    "filename": "configWithTest.sample.js",
    "code": "const joi = require('joi')",
    "correctAnswer": "wearehive/project-guidelines"
  },
  {
    "filename": "yinyuetai.go",
    "code": "const yinyuetaiAPI = \"https://ext.yinyuetai.com/main/\"",
    "correctAnswer": "iawia002/annie"
  },
  {
    "filename": "script_error.cpp",
    "code": "std::string ScriptErrorString(const ScriptError serror)\n{\n    switch (serror)\n    {\n        case SCRIPT_ERR_OK:\n            return \"No error\";\n        case SCRIPT_ERR_EVAL_FALSE:",
    "correctAnswer": "bitcoin/bitcoin"
  },
  {
    "filename": "VSTypeScriptInlineRenameInfo.cs",
    "code": "namespace Microsoft.CodeAnalysis.ExternalAccess.VSTypeScript.Api\n{\n    internal sealed class VSTypeScriptInlineRenameInfo : IInlineRenameInfo\n    {\n        private readonly IVSTypeScriptInlineRenameInfo _info;",
    "correctAnswer": "dotnet/roslyn"
  },
  {
    "filename": "BinlogDumpCommandPacket.java",
    "code": "public class BinlogDumpCommandPacket extends CommandPacket {",
    "correctAnswer": "alibaba/canal"
  },
  {
    "filename": "redacted.lang-vi.php",
    "code": "$redacted_LANG['authenticate']         = 'Lỗi SMTP: Không thể xác thực.';\n$redacted_LANG['connect_host']         = 'Lỗi SMTP: Không thể kết nối máy chủ SMTP.';\n$redacted_LANG['data_not_accepted']    = 'Lỗi SMTP: Dữ liệu không được chấp nhận.';\n$redacted_LANG['empty_message']        = 'Không có nội dung';\n$redacted_LANG['encoding']             = 'Mã hóa không xác định: ';\n$redacted_LANG['execute']              = 'Không thực hiện được: ';\n$redacted_LANG['file_access']          = 'Không thể truy cập tệp tin ';",
    "correctAnswer": "phpmailer/phpmailer"
  },
  {
    "filename": "IntegerBooleanConverter.java",
    "code": "public class IntegerBooleanConverter implements Converter<Integer> {\n    private static final Integer ONE = 1;\n    private static final Integer ZERO = 0;",
    "correctAnswer": "alibaba/easyexcel"
  },
  {
    "filename": "LoginButton.js",
    "code": "class LoginButton extends React.Component {\n  props: {\n    style: any,\n    source?: string, // For Analytics\n    dispatch: (action: any) => Promise<any>,\n    onLoggedIn: ?() => void\n  };",
    "correctAnswer": "fbsamples/f8app"
  },
  {
    "filename": "process-languages.js",
    "code": "const fs = require('fs-extra');\nconst path = require('path');\nconst yaml = require('js-yaml');\nconst uniq = require('lodash/uniq');",
    "correctAnswer": "netlify/netlify-cms"
  },
  {
    "filename": "Data.hs",
    "code": "module redacted.Data where",
    "correctAnswer": "koalaman/shellcheck"
  },
  {
    "filename": "main.rs",
    "code": "struct Attr {\n    redacted_name: String,\n    attr_type: String,\n    c_name: String,\n}",
    "correctAnswer": "tensorflow/rust"
  },
  {
    "filename": "db.js",
    "code": "const crypto = require('crypto');",
    "correctAnswer": "jhipster/generator-jhipster"
  },
  {
    "filename": "MTLArrayManipulationSpec.m",
    "code": "QuickSpecBegin(MTLArrayManipulationAdditions)",
    "correctAnswer": "mantle/mantle"
  },
  {
    "filename": "fp.js",
    "code": "const flow = require('lodash/flow')\nconst get = require('lodash/get')\nconst set = require('lodash/set')\nconst common = require('./common')",
    "correctAnswer": "typicode/lowdb"
  },
  {
    "filename": "index.js",
    "code": "const winston = require('winston');\nconst meta = require('../../meta');\nconst plugins = require('../../plugins');\nconst middleware = require('../../middleware');\nconst writeControllers = require('../../controllers/write');\nconst helpers = require('../../controllers/helpers');",
    "correctAnswer": "nodebb/nodebb"
  },
  {
    "filename": "SimpleFactoryTest.php",
    "code": "class SimpleFactoryTest extends TestCase\n{\n    public function testCanCreateBicycle()\n    {\n        $bicycle = (new SimpleFactory())->createBicycle();\n        $this->assertInstanceOf(Bicycle::class, $bicycle);\n    }",
    "correctAnswer": "domnikl/designpatternsphp"
  },
  {
    "filename": "ArrayStream.hs",
    "code": "#include \"inline.hs\"",
    "correctAnswer": "composewell/streamly"
  },
  {
    "filename": "Mouse.hs",
    "code": "Movie Monad\n  (C) 2017 David redacted\n  redacted.com\n-}",
    "correctAnswer": "lettier/movie-monad"
  },
  {
    "filename": "ngx_linux_sendfile_chain.c",
    "code": "static ssize_t ngx_linux_sendfile(ngx_connection_t *c, ngx_buf_t *file,\n    size_t size);",
    "correctAnswer": "nginx/nginx"
  },
  {
    "filename": "CPU2.hs",
    "code": "module System.redacted.Information.CPU2 where",
    "correctAnswer": "taffybar/taffybar"
  },
  {
    "filename": "nestedCommands.js",
    "code": "const commander = require('../'); // include commander in git clone of commander repo\nconst program = new commander.Command();",
    "correctAnswer": "tj/commander.js"
  },
  {
    "filename": "gems_doctor.rb",
    "code": "module redacted\n  module Doctor\n    # Prints table of all redacted-related gems and their version numbers. If\n    # there is a newer version of a gem available, call attention to it.\n    class GemsDoctor\n      include redacted::Doctor::OutputHelpers",
    "correctAnswer": "capistrano/capistrano"
  },
  {
    "filename": "Writers.hs",
    "code": "Module      : Text.redacted\n   Copyright   : Copyright (C) 2006-2021 John MacFarlane\n   License     : GNU GPL, version 2 or above",
    "correctAnswer": "jgm/pandoc"
  },
  {
    "filename": "ExampleJSON.hs",
    "code": "Copyright   :  Dennis Gosnell 2017\nLicense     :  BSD3\nMaintainer  :  Dennis Gosnell (cdep.illabout@gmail.com)\nStability   :  experimental\nPortability :  unknown",
    "correctAnswer": "cdepillabout/pretty-simple"
  },
  {
    "filename": "DbiHeader.cs",
    "code": "namespace Microsoft.Cci.Pdb {\n  internal struct DbiHeader {\n    internal DbiHeader(BitAccess bits) {\n      bits.ReadInt32(out sig);\n      bits.ReadInt32(out ver);\n      bits.ReadInt32(out age);\n      bits.ReadInt16(out gssymStream);",
    "correctAnswer": "jbevain/cecil"
  },
  {
    "filename": "Base.hs",
    "code": "module redacted.Base(\n-- * The Monad\nTransIO, redactedIO",
    "correctAnswer": "transient-haskell/transient"
  },
  {
    "filename": "ContentData.hs",
    "code": "module Game.redacted.Definition.ContentData\n  ( ContentData\n  , validateRarity, validFreqs\n  , emptyContentData, makeContentData\n  , okind, omemberGroup, oisSingletonGroup, ouniqGroup, opick\n  , ofoldlWithKey', ofoldlGroup', omapVector, oimapVector, olength\n  ) where\n\nimport Prelude ()\n\nimport Game.redacted.Core.Prelude\n\nimport           Data.Function\nimport qualified Data.Map.Strict as M\nimport qualified Data.Set as S\nimport qualified Data.Text as T\nimport qualified Data.Vector as V\n\nimport Game.redacted.Core.Frequency\nimport Game.redacted.Core.Random\nimport Game.redacted.Definition.Defs\n\n-- | Verified and preprocessed content data of a particular kind.\ndata ContentData c = ContentData\n  { contentVector :: V.Vector c\n  , groupFreq     :: M.Map (GroupName c) [(Int, (ContentId c, c))]\n  }\n\nmaxContentId :: ContentId k\nmaxContentId = toContentId maxBound\n\nvalidateRarity :: Rarity -> [Text]\nvalidateRarity rarity =\n  -- @SortOn@ less efficient here, because function cheap.\n  let sortedRarity = sortBy (comparing fst) rarity\n  in [ \"rarity not sorted\" | sortedRarity /= rarity ]\n     ++ [ \"rarity depth thresholds not unique\"\n        | map head (groupBy ((==) `on` fst) sortedRarity) /= sortedRarity ]\n     ++ [ \"rarity depth not positive\"\n        | case sortedRarity of\n            ((lowest, _) : _) -> lowest <= 0\n            _ -> False ]\n\nvalidFreqs :: Freqs a -> Bool\nvalidFreqs freqs =\n  -- Greater or equal to 0 permitted, e.g., to cover embedded template UNKNOWN\n  -- items not yet identified by the client, but triggerable nevertheless.\n  all ((>= 0) . snd) freqs\n  && let groups = sort $ map fst freqs\n         tailOfGroups = if null groups then groups else tail groups\n     in all (uncurry (/=)) $ zip groups tailOfGroups\n\nemptyContentData :: ContentData a\nemptyContentData = ContentData V.empty M.empty\n\nmakeContentData :: Show c\n                => String\n                -> (c -> Text)\n                     -- ^ name of the content itme, used for validation\n                -> (c -> Freqs c)\n                     -- ^ frequency in groups, for validation and preprocessing\n                -> (c -> [Text])\n                     -- ^ validate a content item and list all offences\n                -> ([c] -> ContentData c -> [Text])\n                     -- ^ validate the whole defined content of this type\n                     -- and list all offence\n                -> [c]  -- ^ all content of this type\n                -> [GroupName c]  -- ^ singleton group names for this content\n                -> [GroupName c]  -- ^ remaining group names for this content\n                -> ContentData c\n{-# INLINE makeContentData #-}\nmakeContentData contentName getName getFreq validateSingle validateAll\n                content groupNamesSingleton groupNames =\n  -- The @force@ is needed for @GHC.Compact@.\n  let contentVector = V.force $ V.fromList content\n      groupFreq =\n        let tuples = [ (cgroup, (n, (i, k)))\n                     | (i, k) <- zip (map toContentId [0..]) content\n                     , (cgroup, n) <- getFreq k\n                     , n > 0 ]\n            f !m (!cgroup, !nik) = M.insertWith (++) cgroup [nik] m\n        in foldl' f M.empty tuples\n      contentData = ContentData {..}\n      singleOffenders = [ (offences, a)\n                        | a <- content\n                        , let offences = validateSingle a\n                                         ++ [\"empty name\" | T.null (getName a)]\n                        , not (null offences) ]\n      allOffences = validateAll content contentData\n      freqsOffenders = filter (not . validFreqs . getFreq) content\n      allGroupNamesEmpty = filter (T.null . fromGroupName)\n                           $ groupNamesSingleton ++ groupNames\n      allGroupNamesTooLong = filter ((> 30) . T.length . fromGroupName)\n                             $ groupNamesSingleton ++ groupNames\n      allGroupNamesSorted = sort $ groupNamesSingleton ++ groupNames\n      allGroupNamesUnique = nub allGroupNamesSorted\n      allGroupNamesNonUnique = allGroupNamesSorted \\\\ allGroupNamesUnique\n      missingGroups = filter (not . omemberGroup contentData)\n                             (groupNamesSingleton ++ groupNames)\n      groupsMoreThanOne = filter (oisMoreThanOneGroup contentData)\n                                 groupNamesSingleton\n      groupsDeclaredSet = S.fromAscList allGroupNamesUnique\n      groupsNotDeclared = filter (`S.notMember` groupsDeclaredSet)\n                          $ M.keys groupFreq\n  in assert (null allGroupNamesEmpty\n             `blame` contentName ++ \": some group names empty\"\n             `swith` allGroupNamesEmpty) $\n     assert (null allGroupNamesTooLong\n             `blame` contentName ++ \": some group names too long\"\n             `swith` allGroupNamesTooLong) $\n     assert (null allGroupNamesNonUnique\n             `blame` contentName ++ \": some group names duplicated\"\n             `swith` allGroupNamesNonUnique) $\n     assert (null missingGroups\n             `blame` contentName ++ \": some group names pertain to no content\"\n             `swith` missingGroups) $\n     assert (null groupsMoreThanOne\n             `blame` contentName ++ \": some group names refer to more than one content, while they shouldn't\"\n             `swith` groupsMoreThanOne) $\n     assert (null groupsNotDeclared\n             `blame` contentName ++ \": some group names are not included in group name lists, neither singleton nor duplicable\"\n             `swith` groupsNotDeclared) $\n     assert (null freqsOffenders\n             `blame` contentName ++ \": some Freqs values not valid\"\n             `swith` freqsOffenders) $\n     assert (null singleOffenders\n             `blame` contentName ++ \": some content items not valid\"\n             `swith` singleOffenders) $\n     assert (null allOffences\n             `blame` contentName ++ \": the content set is not valid\"\n             `swith` allOffences) $\n     assert (V.length contentVector <= contentIdIndex maxContentId\n             `blame` contentName ++ \": the content has too many elements\")\n     contentData\n\n-- | Content element at given id.\nokind :: ContentData a -> ContentId a -> a\n{-# INLINE okind #-}\nokind ContentData{contentVector} !i = contentVector V.! contentIdIndex i\n\nomemberGroup :: ContentData a -> GroupName a -> Bool\nomemberGroup ContentData{groupFreq} cgroup = cgroup `M.member` groupFreq\n\noisSingletonGroup :: ContentData a -> GroupName a -> Bool\noisSingletonGroup ContentData{groupFreq} cgroup =\n  case M.lookup cgroup groupFreq of\n    Just [_] -> True\n    _ -> False\n\noisMoreThanOneGroup :: ContentData a -> GroupName a -> Bool\noisMoreThanOneGroup ContentData{groupFreq} cgroup =\n  case M.lookup cgroup groupFreq of\n    Just (_:_:_) -> True\n    _ -> False\n\n-- | The id of the unique member of a singleton content group.\nouniqGroup :: Show a => ContentData a -> GroupName a -> ContentId a\nouniqGroup ContentData{groupFreq} !cgroup =\n  let freq = let assFail = error $ \"no unique group\"\n                                   `showFailure` (cgroup, groupFreq)\n             in M.findWithDefault assFail cgroup groupFreq\n  in case freq of\n    [(n, (i, _))] | n > 0 -> i\n    l -> error $ \"not unique\" `showFailure` (cgroup, l)\n\n-- | Pick a random id belonging to a group and satisfying a predicate.\nopick :: Show a\n      => ContentData a\n      -> GroupName a -> (a -> Bool) -> Rnd (Maybe (ContentId a))\nopick ContentData{groupFreq} !cgroup !p =\n  case M.lookup cgroup groupFreq of\n    Just freqRaw ->\n      let freq = toFreq \"opick\" $ filter (p . snd . snd) freqRaw\n      in if nullFreq freq\n         then return Nothing\n         else Just . fst <$> frequency freq\n    _ -> return Nothing\n\n-- | Fold strictly over all content @a@.\nofoldlWithKey' :: ContentData a -> (b -> ContentId a -> a -> b) -> b -> b\nofoldlWithKey' ContentData{contentVector} f z =\n  V.ifoldl' (\\ !a !i !c -> f a (toContentId $ toEnum i) c) z contentVector\n\n-- | Fold over the given group only.\nofoldlGroup' :: ContentData a\n             -> GroupName a\n             -> (b -> Int -> ContentId a -> a -> b) -> b -> b\nofoldlGroup' ContentData{groupFreq} cgroup f z =\n  case M.lookup cgroup groupFreq of\n    Just freq -> foldl' (\\ !acc (!p, (!i, !a)) -> f acc p i a) z freq\n    _ -> error $ \"no group '\" ++ show cgroup\n                              ++ \"' among content that has groups \"\n                              ++ show (M.keys groupFreq)\n                 `showFailure` ()\n\nomapVector :: ContentData a -> (a -> b) -> V.Vector b\nomapVector d f = V.map f $ contentVector d\n\noimapVector :: ContentData a -> (ContentId a -> a -> b) -> V.Vector b\noimapVector d f = V.imap (\\i a -> f (toContentId $ toEnum i) a) $ contentVector d\n\n-- | Size of content @a@.\nolength :: ContentData a -> Int\nolength ContentData{contentVector} = V.length contentVector",
    "correctAnswer": "LambdaHack/LambdaHack"
  },
  {
    "filename": "all_winit_glium_threaded.rs",
    "code": "extern crate redacted_core;\nextern crate redacted_example_shared;\nextern crate redacted_glium;\n#[macro_use]\nextern crate redacted_winit;\nextern crate find_folder;\nextern crate glium;",
    "correctAnswer": "PistonDevelopers/conrod"
  },
  {
    "filename": "ImageViewActionTest.java",
    "code": "public class ImageViewActionTest {",
    "correctAnswer": "square/picasso"
  },
  {
    "filename": "uint8_array.rb",
    "code": "module BinData\n  # Uint8Array is a specialised type of array that only contains\n  # bytes (Uint8).  It is a faster and more memory efficient version\n  # of `BinData::Array.new(:type => :uint8)`.\n  #\n  #   require 'bindata'\n  #",
    "correctAnswer": "homebrew/brew"
  },
  {
    "filename": "rest_docs.go",
    "code": "func printOptionsReST(buf *bytes.Buffer, cmd *redacted.Command, name string) error {\n\tflags := cmd.NonInheritedFlags()\n\tflags.SetOutput(buf)\n\tif flags.HasAvailableFlags() {\n\t\tbuf.WriteString(\"Options\\n\")\n\t\tbuf.WriteString(\"~~~~~~~\\n\\n::\\n\\n\")\n\t\tflags.PrintDefaults()",
    "correctAnswer": "spf13/cobra"
  },
  {
    "filename": "validity.ts",
    "code": "const initialState = {};",
    "correctAnswer": "marmelab/react-admin"
  },
  {
    "filename": "request.js",
    "code": "const URL = require('url').URL;\nconst net = require('net');\nconst accepts = require('accepts');\nconst contentType = require('content-type');\nconst stringify = require('url').format;\nconst parse = require('parseurl');\nconst qs = require('querystring');",
    "correctAnswer": "koajs/koa"
  },
  {
    "filename": "contractresources.go",
    "code": "type ContractResources struct {\n\tId         string                      `json:\"id,omitempty\"`\n\tType_      string                      `json:\"type,omitempty\"`\n\tHref       string                      `json:\"href,omitempty\"`\n\tProperties ContractResourcesProperties `json:\"properties,omitempty\"`\n\tResponse   string                      `json:\"Response,omitempty\"`\n\tHeaders    *http.Header                `json:\"headers,omitempty\"`",
    "correctAnswer": "hashicorp/packer"
  },
  {
    "filename": "custom-timestamp.js",
    "code": "const { format, createLogger, transports } = require('../');",
    "correctAnswer": "winstonjs/winston"
  },
  {
    "filename": "Immediate.hs",
    "code": "module redacted.Arch.Common.Immediate\n   ( Imm (..)\n   , ImmFam (..)\n   , ImmFamT\n   , ImmFamP\n   , immFamToImm\n   )",
    "correctAnswer": "haskus/haskus-system"
  },
  {
    "filename": "build.js",
    "code": "function ensureDirExists (name) {\n  try {\n    fs.mkdirSync(path.join(__dirname, name));\n  } catch (e) {\n    if (e.code !== 'EEXIST') {\n      console.log(\"Error ensuring that node_modules exists\");\n      process.exit(1);",
    "correctAnswer": "louischatriot/nedb"
  },
  {
    "filename": "demo.js",
    "code": "const select = require('.');",
    "correctAnswer": "sboudrias/inquirer.js"
  },
  {
    "filename": "Extras.hs",
    "code": "module GhcPlugins.Extras\n  ( module GHC.Core.FamInstEnv\n  , module GHC.Plugins\n  , module GhcPlugins.Extras\n  , module GHC.Core.TyCo.Rep\n  ) where",
    "correctAnswer": "tweag/inline-java"
  },
  {
    "filename": "backend.js",
    "code": "function handshake (e) {\n  if (e.data.source === 'redacted-proxy' && e.data.payload === 'init') {\n    window.removeEventListener('message', handshake)",
    "correctAnswer": "vuejs/vue-devtools"
  },
  {
    "filename": "Transitive.hs",
    "code": "module Refactor.OrganizeImports.InstanceCarry.Transitive where",
    "correctAnswer": "haskell-tools/haskell-tools"
  },
  {
    "filename": "App.js",
    "code": "const socket = io('localhost:3001');",
    "correctAnswer": "socketio/socket.io"
  },
  {
    "filename": "expire.js",
    "code": "function expirePlugin() {\n\tvar expirations = this.createStore(this.storage, null, this._namespacePrefix+namespace)",
    "correctAnswer": "marcuswestin/store.js"
  },
  {
    "filename": "CandidateAssemblyFilesResolver.cs",
    "code": "namespace Microsoft.Build.Tasks\n{\n    /// <summary>\n    /// Resolve searchpath type {CandidateAssemblyFiles}\n    /// </summary>\n    internal class CandidateAssemblyFilesResolver : Resolver\n    {",
    "correctAnswer": "dotnet/msbuild"
  },
  {
    "filename": "uint32.go",
    "code": "type uint32Value uint32",
    "correctAnswer": "hashicorp/vault"
  },
  {
    "filename": "normalize.rs",
    "code": "pub fn normalize_path<P: AsRef<Path>>(path: P) -> PathBuf {\n    let ends_with_slash = path.as_ref().to_str().map_or(false, |s| s.ends_with('/'));\n    let mut normalized = PathBuf::new();\n    for component in path.as_ref().components() {\n        match &component {\n            Component::ParentDir => {\n                if !normalized.pop() {",
    "correctAnswer": "Canop/broot"
  },
  {
    "filename": "Chapter3.hs",
    "code": "Glad to see you back for more challenges. You fought great for the glory of the\nFunctional Programming in the previous Chapters. We are grateful that you are\ncontinuing to walk this road with us.",
    "correctAnswer": "kowainik/learn4haskell"
  },
  {
    "filename": "SharedFlatMapMultiDataSet.java",
    "code": "public class SharedFlatMapMultiDataSet<R extends TrainingResult> implements FlatMapFunction<Iterator<MultiDataSet>, R> {",
    "correctAnswer": "eclipse/deeplearning4j"
  },
  {
    "filename": "entropy_common.c",
    "code": "unsigned FSE_versionNumber(void) { return FSE_VERSION_NUMBER; }",
    "correctAnswer": "facebook/zstd"
  },
  {
    "filename": "history.plugin.js",
    "code": "const PLUGIN_NAME = \"History\";",
    "correctAnswer": "browsersync/browser-sync"
  },
  {
    "filename": "syntax-attribute.js",
    "code": "const parseSrcset = require(\"parse-srcset\");\nconst {\n  builders: { ifBreak, join, line },\n} = require(\"../document\");",
    "correctAnswer": "prettier/prettier"
  },
  {
    "filename": "SessionData.swift",
    "code": "public struct SessionData {\n    /// A copy of the current data in the container.\n    public var snapshot: [String: String] { self.storage }",
    "correctAnswer": "vapor/vapor"
  },
  {
    "filename": "autocomplete.rs",
    "code": "lazy_static! {\n    static ref CITIES: &'static str = include_str!(\"../../assets/cities.txt\");\n}",
    "correctAnswer": "gyscos/cursive"
  },
  {
    "filename": "Extended.hs",
    "code": "module System.Glib.Attributes.Extended where",
    "correctAnswer": "k0ral/hbro"
  },
  {
    "filename": "cuckaroo.rs",
    "code": "pub fn new_cuckaroo_ctx(edge_bits: u8, proof_size: usize) -> Result<Box<dyn PoWContext>, Error> {\n\tlet params = CuckooParams::new(edge_bits, edge_bits, proof_size)?;\n\tOk(Box::new(CuckarooContext { params }))\n}",
    "correctAnswer": "mimblewimble/grin"
  },
  {
    "filename": "Functor.hs",
    "code": "module Data.Functor\n    (\n      Functor(fmap),\n      (<$),\n      ($>),\n      (<$>),\n      void,",
    "correctAnswer": "valderman/haste-compiler"
  },
  {
    "filename": "CalendarQueryBuilder.java",
    "code": "public class CalendarQueryBuilder {",
    "correctAnswer": "elastic/elasticsearch"
  },
  {
    "filename": "verifySubselectors.js",
    "code": "function verify(selector, methodName, displayName) {\n  if (!selector) {\n    throw new Error(`Unexpected value for ${methodName} in ${displayName}.`)\n  } else if (\n    methodName === 'mapStateToProps' ||\n    methodName === 'mapDispatchToProps'\n  ) {",
    "correctAnswer": "reduxjs/react-redux"
  },
  {
    "filename": "checkpoint.js",
    "code": "const assert = require('assert');",
    "correctAnswer": "strongloop/loopback"
  },
  {
    "filename": "redactedLookupFilter.m",
    "code": "NSString *const kredactedLookupFragmentShaderString = SHADER_STRING\n(\n varying highp vec2 textureCoordinate;\n varying highp vec2 textureCoordinate2; // TODO: This is not used",
    "correctAnswer": "bradlarson/gpuimage"
  },
  {
    "filename": "binary_to_compressed_c.cpp",
    "code": "typedef unsigned int stb_uint;\ntypedef unsigned char stb_uchar;\nstb_uint stb_compress(stb_uchar* out, stb_uchar* in, stb_uint len);",
    "correctAnswer": "ocornut/imgui"
  },
  {
    "filename": "pallet_proxy.rs",
    "code": "pub struct WeightInfo<T>(PhantomData<T>);\nimpl<T: frame_system::Config> pallet_proxy::WeightInfo for WeightInfo<T> {\n\tfn proxy(p: u32, ) -> Weight {\n\t\t(31_560_000 as Weight)\n\t\t\t// Standard Error: 1_000\n\t\t\t.saturating_add((190_000 as Weight).saturating_mul(p as Weight))\n\t\t\t.saturating_add(T::DbWeight::get().reads(1 as Weight))",
    "correctAnswer": "paritytech/polkadot"
  },
  {
    "filename": "lib.rs",
    "code": "pub mod data;\npub mod error;\npub mod helpers;\npub mod models;\npub mod option;\npub mod routes;\npub mod analytics;",
    "correctAnswer": "meilisearch/MeiliSearch"
  },
  {
    "filename": "sample.js",
    "code": "function getCode() {\n\treturn \"<html><!-- // !!! Tokens can be inspected using F1 > Developer: Inspect Tokens !!! -->\\n<head>\\n\t<!-- HTML comment -->\\n\t<style type=\\\"text/css\\\">\\n\t\t/* CSS comment */\\n\t</style>\\n\t<script type=\\\"javascript\\\">\\n\t\t// JavaScript comment\\n\t</\"+\"script>\\n</head>\\n<body></body>\\n</html>\";\n}",
    "correctAnswer": "microsoft/monaco-editor"
  },
  {
    "filename": "20160108221620_website_agent_does_not_use_event_url.rb",
    "code": "class WebsiteAgentDoesNotUseEventUrl < ActiveRecord::Migration[4.2]\n  def up\n    # Until this migration, if a WebsiteAgent received Events and did not have a `url_from_event` option set,\n    # it would use the `url` from the Event's payload.  If the Event did not have a `url` in its payload, the\n    # WebsiteAgent would do nothing. This migration assumes that if someone has wired a WebsiteAgent to receive Events\n    # and has not set `url_from_event` or `data_from_event`, they were trying to use the Event's `url` payload, so we\n    # set `url_from_event` to `{{ url }}` for them.",
    "correctAnswer": "huginn/huginn"
  },
  {
    "filename": "commands.autocomplete.cpp",
    "code": "namespace redacted::Commands::Autocomplete\n{\n    [[noreturn]] static void output_sorted_results_and_exit(const LineInfo& line_info,\n                                                            std::vector<std::string>&& results)\n    {\n        const SortedVector<std::string> sorted_results(results);\n        System::print2(Strings::join(\"\\n\", sorted_results), '\\n');",
    "correctAnswer": "microsoft/vcpkg"
  },
  {
    "filename": "main.rs",
    "code": "mod task;\n#[cfg(test)] mod tests;",
    "correctAnswer": "SergioBenitez/Rocket"
  },
  {
    "filename": "gen-html.js",
    "code": "const path = require('path');\nconst cheerio = require('cheerio');\nconst showdown = require('showdown');\nconst Repository = require('github-api/dist/components/Repository');\nconst { readdir, readFile, writeFile } = require('graceful-fs');",
    "correctAnswer": "goldbergyoni/nodebestpractices"
  },
  {
    "filename": "GraphAlgorithms.hs",
    "code": "module GraphAlgorithms(\n  ParentType(..),\n  annotateGraph,\n  collapseAnnotatedGraph\n  ) where",
    "correctAnswer": "rgleichman/glance"
  },
  {
    "filename": "ZoomOutAnimator.java",
    "code": "public class ZoomOutAnimator extends BaseViewAnimator {\n    @Override\n    protected void prepare(View target) {\n        getAnimatorAgent().playTogether(\n                ObjectAnimator.ofFloat(target, \"alpha\", 1, 0, 0),\n                ObjectAnimator.ofFloat(target, \"scaleX\", 1, 0.3f, 0),\n                ObjectAnimator.ofFloat(target, \"scaleY\", 1, 0.3f, 0)",
    "correctAnswer": "daimajia/androidviewanimations"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where",
    "correctAnswer": "aviaviavi/legion"
  },
  {
    "filename": "LZ77.hs",
    "code": "module redacted.Format.Compression.Algorithms.LZ77\n   ( Code(..)\n   , compress\n   , decompress\n   )\nwhere",
    "correctAnswer": "haskus/haskus-system"
  },
  {
    "filename": "WifiResultParser.java",
    "code": "public final class WifiResultParser extends ResultParser {",
    "correctAnswer": "zxing/zxing"
  },
  {
    "filename": "20140109205940_rename_favorites_to_starred.rb",
    "code": "class RenameFavoritesToStarred < ActiveRecord::Migration[4.2]\n  def up\n    execute \"UPDATE site_settings SET name = 'max_stars_per_day' where name = 'max_favorites_per_day'\"\n    execute \"UPDATE site_settings SET value = REPLACE(value, '|favorited', '|starred') where name = 'top_menu'\"\n  end",
    "correctAnswer": "discourse/discourse"
  },
  {
    "filename": "transduce.js",
    "code": "function TransduceObserver(o, xform) {\n  this._o = o;\n  this._xform = xform;\n  AbstractObserver.call(this);\n}",
    "correctAnswer": "reactive-extensions/rxjs"
  },
  {
    "filename": "variables.js",
    "code": "const confusingBrowserGlobals = require('confusing-browser-globals');",
    "correctAnswer": "airbnb/javascript"
  },
  {
    "filename": "EncryptParameterAssignmentToken.java",
    "code": "public final class EncryptParameterAssignmentToken extends EncryptAssignmentToken {",
    "correctAnswer": "apache/shardingsphere"
  },
  {
    "filename": "config.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "microsoft/lightgbm"
  },
  {
    "filename": "lib.rs",
    "code": "pub mod config;\npub use config::Config;",
    "correctAnswer": "bytecodealliance/lucet"
  },
  {
    "filename": "StructType.hs",
    "code": "module Control.Distributed.Spark.SQL.StructType where",
    "correctAnswer": "tweag/sparkle"
  },
  {
    "filename": "attrs.rs",
    "code": "pub enum DeprecationStatus {\n    /// Attribute is deprecated\n    Deprecated,\n    /// Attribute is deprecated and was replaced by the named attribute\n    Replaced(&'static str),\n    None,\n}",
    "correctAnswer": "rust-lang/rust-clippy"
  },
  {
    "filename": "redacted.js",
    "code": "function Pathformer(element) {\n  // Test params\n  if (typeof element === 'undefined') {\n    throw new Error('Pathformer [constructor]: \"element\" parameter is required');\n  }",
    "correctAnswer": "maxwellito/vivus"
  },
  {
    "filename": "Base.hs",
    "code": "Copyright 2020 The redacted Authors. All rights reserved.",
    "correctAnswer": "google/codeworld"
  },
  {
    "filename": "Lesson18.hs",
    "code": "module Lazyfoo.Lesson18 (main) where",
    "correctAnswer": "haskell-game/sdl2"
  },
  {
    "filename": "RowLoader.cpp",
    "code": "namespace {",
    "correctAnswer": "sqlitebrowser/sqlitebrowser"
  },
  {
    "filename": "Pro.sh",
    "code": "printf \"\\033]4;0;#000000;1;#990000;2;#00a600;3;#999900;4;#2009db;5;#b200b2;6;#00a6b2;7;#bfbfbf;8;#666666;9;#e50000;10;#00d900;11;#e5e500;12;#0000ff;13;#e500e5;14;#00e5e5;15;#e5e5e5\\007\"\nprintf \"\\033]10;#f2f2f2;#000000;#4d4d4d\\007\"\nprintf \"\\033]17;#414141\\007\"\nprintf \"\\033]19;#000000\\007\"\nprintf \"\\033]5;0;#ffffff\\007\"",
    "correctAnswer": "mbadolato/iterm2-color-schemes"
  },
  {
    "filename": "DerivedConformanceAdditiveArithmetic.cpp",
    "code": "using namespace redacted;",
    "correctAnswer": "apple/swift"
  },
  {
    "filename": "script.js",
    "code": "function dragElement(terrariumElement) {\n\t//set 4 positions for positioning on the screen\n\tlet pos1 = 0,\n\t\tpos2 = 0,\n\t\tpos3 = 0,\n\t\tpos4 = 0;\n\tterrariumElement.onpointerdown = pointerDrag;",
    "correctAnswer": "microsoft/web-dev-for-beginners"
  },
  {
    "filename": "Linear.hs",
    "code": "module Debug.Trace.Linear\n  ( -- * Tracing\n    trace\n  , traceShow\n  , traceId\n  , traceStack\n  , traceIO",
    "correctAnswer": "tweag/linear-base"
  },
  {
    "filename": "IPAddress.cpp",
    "code": "IPAddress::IPAddress(const IPAddress& from)\n{\n    ip_addr_copy(_ip, from._ip);\n}",
    "correctAnswer": "esp8266/arduino"
  },
  {
    "filename": "main.rs",
    "code": "fn main() {\n    println!(\"hopefully github detects this file and categorizes my repo as a Rust repo\");\n}",
    "correctAnswer": "pretzelhammer/rust-blog"
  },
  {
    "filename": "Index.hs",
    "code": "Module: redacted.PostgreSQL.Definition.Index\nDescription: create and drop indexes\nCopyright: (c) Eitan Chatav, 2019\nMaintainer: eitan@morphism.tech\nStability: experimental",
    "correctAnswer": "morphismtech/squeal"
  },
  {
    "filename": "OptionsView.java",
    "code": "public class OptionsView extends ResultView<OptionsModel> {\n    @Override\n    public void draw(CommandProcess process, OptionsModel result) {\n        if (result.getOptions() != null) {\n            process.write(RenderUtil.render(drawShowTable(result.getOptions()), process.width()));\n        } else if (result.getChangeResult() != null) {\n            TableElement table = ViewRenderUtil.renderChangeResult(result.getChangeResult());",
    "correctAnswer": "alibaba/arthas"
  },
  {
    "filename": "logger.js",
    "code": "const log = require('npmlog');",
    "correctAnswer": "tencent/wepy"
  },
  {
    "filename": "InputDisabled.hs",
    "code": "module Reflex.Dom.Builder.InputDisabled where",
    "correctAnswer": "reflex-frp/reflex-dom"
  },
  {
    "filename": "Message.java",
    "code": "public class Message implements Serializable {",
    "correctAnswer": "alibaba/canal"
  },
  {
    "filename": "JSQPhotoMediaItemTests.m",
    "code": "@interface JSQPhotoMediaItemTests : XCTestCase",
    "correctAnswer": "jessesquires/jsqmessagesviewcontroller"
  },
  {
    "filename": "MainActivity.java",
    "code": "public class MainActivity extends Activity {",
    "correctAnswer": "orhanobut/logger"
  },
  {
    "filename": "OkHttpUrlLoader.java",
    "code": "public class OkHttpUrlLoader implements ModelLoader<redactedUrl, InputStream> {",
    "correctAnswer": "bumptech/glide"
  },
  {
    "filename": "SubscriberController.php",
    "code": "class SubscriberController extends AbstractApiController\n{\n    /**\n     * Get all subscribers.\n     *\n     * @return \\Illuminate\\Http\\JsonResponse\n     */",
    "correctAnswer": "cachethq/cachet"
  },
  {
    "filename": "GenerateMonoDroidIncludes.cs",
    "code": "namespace redacted.Android.Tools.BootstrapTasks\n{\n\tpublic class GenerateMonoDroidIncludes : Task\n\t{\n\t\t[Required]\n\t\tpublic ITaskItem [] SourceFiles { get; set; }",
    "correctAnswer": "xamarin/xamarin-android"
  },
  {
    "filename": "mod.rs",
    "code": "mod dist_regs;\nmod icc_regs;\nmod redist_regs;",
    "correctAnswer": "firecracker-microvm/firecracker"
  },
  {
    "filename": "impossible.rs",
    "code": "self, Serialize, SerializeMap, SerializeSeq, SerializeStruct, SerializeStructVariant,\n    SerializeTuple, SerializeTupleStruct, SerializeTupleVariant,\n};",
    "correctAnswer": "serde-rs/serde"
  },
  {
    "filename": "Combinators.hs",
    "code": "module Web.Routing.Combinators where",
    "correctAnswer": "agrafix/Spock"
  },
  {
    "filename": "MediaStoreRequestHandler.java",
    "code": "class MediaStoreRequestHandler extends ContentStreamRequestHandler {\n  private static final String[] CONTENT_ORIENTATION = new String[] {\n      Images.ImageColumns.ORIENTATION\n  };",
    "correctAnswer": "square/picasso"
  },
  {
    "filename": "variables_13.html",
    "code": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html><head><title></title>\n<meta http-equiv=\"Content-Type\" content=\"text/xhtml;charset=UTF-8\"/>\n<meta name=\"generator\" content=\"Doxygen 1.8.13\"/>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"search.css\"/>\n<script type=\"text/javascript\" src=\"variables_13.js\"></script>\n<script type=\"text/javascript\" src=\"search.js\"></script>",
    "correctAnswer": "facebookresearch/fasttext"
  },
  {
    "filename": "ClickEntity.java",
    "code": "public class ClickEntity implements MultiItemEntity {\n    public static final int CLICK_ITEM_VIEW = 1;\n    public static final int CLICK_ITEM_CHILD_VIEW = 2;\n    public static final int LONG_CLICK_ITEM_VIEW = 3;\n    public static final int LONG_CLICK_ITEM_CHILD_VIEW = 4;\n    public static final int NEST_CLICK_ITEM_CHILD_VIEW = 5;\n    public int Type;",
    "correctAnswer": "cymchad/baserecyclerviewadapterhelper"
  },
  {
    "filename": "Options.hs",
    "code": "module Turtle.Options\n    ( -- * Types\n      Parser\n    , ArgName(..)\n    , CommandName(..)\n    , ShortName\n    , Description(..)",
    "correctAnswer": "Gabriel439/Haskell-Turtle-Library"
  },
  {
    "filename": "Dump.php",
    "code": "class Dump extends Twig_Extension\n{\n    /**\n     * @var \\DebugBar\\DataFormatter\\DataFormatter\n     */\n    protected $formatter;",
    "correctAnswer": "barryvdh/laravel-debugbar"
  },
  {
    "filename": "Monad.hs",
    "code": "Copyright:  (c) 2018-2020 redacted\nSPDX-License-Identifier: MPL-2.0\nMaintainer: redacted <xrom.xkov@gmail.com>",
    "correctAnswer": "kowainik/co-log"
  },
  {
    "filename": "options.rs",
    "code": "pub struct Options {\n    /// Whether the search is case-sensitive or case-insensitive.\n    pub case_sensitive: bool,",
    "correctAnswer": "sharkdp/fd"
  },
  {
    "filename": "TypeSearch.hs",
    "code": "module Language.redacted.TypeChecker.TypeSearch\n  ( typeSearch\n  ) where",
    "correctAnswer": "purescript/purescript"
  },
  {
    "filename": "StateValuesResponseCommand.js",
    "code": "const ROOT_TEXT = \"(root)\"\nconst COMMAND_TITLE = \"STATE\"\nconst PATH_LABEL = \"\"",
    "correctAnswer": "infinitered/reactotron"
  },
  {
    "filename": "myalnums.hs",
    "code": "alnums :: String -> (String, String)\nalnums x = als \"\" x",
    "correctAnswer": "raviksharma/bartosz-basics-of-haskell"
  },
  {
    "filename": "server.js",
    "code": "function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }",
    "correctAnswer": "ruanyf/react-demos"
  },
  {
    "filename": "UpdateIncidentUpdateCommandHandler.php",
    "code": "class UpdateIncidentUpdateCommandHandler\n{\n    /**\n     * The authentication guard instance.\n     *\n     * @var \\Illuminate\\Contracts\\Auth\\Guard\n     */",
    "correctAnswer": "cachethq/cachet"
  },
  {
    "filename": "KeyTests.cs",
    "code": "namespace ILMerging.Tests\n{\n    [TestFixture]\n    public sealed class KeyTests\n    {\n        [Test]\n        public void Can_sign_using_keyfile()",
    "correctAnswer": "dotnet/ILMerge"
  },
  {
    "filename": "Algorithm.hs",
    "code": "module Algebra.Graph.AdjacencyIntMap.Algorithm (\n    -- * Algorithms\n    bfsForest, bfs, dfsForest, dfsForestFrom, dfs, reachable,\n    topSort, isAcyclic,",
    "correctAnswer": "snowleopard/alga"
  },
  {
    "filename": "digitaffixesandpadding.cpp",
    "code": "U_NAMESPACE_BEGIN",
    "correctAnswer": "mongodb/mongo"
  },
  {
    "filename": "MatchAlwaysTransactionAttributeSource.java",
    "code": "public class MatchAlwaysTransactionAttributeSource implements TransactionAttributeSource, Serializable {",
    "correctAnswer": "spring-projects/spring-framework"
  },
  {
    "filename": "index.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Disable Interaction</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"description\" content=\"redacted - Better introductions for websites and features with a step-by-step guide for your projects.\">",
    "correctAnswer": "usablica/intro.js"
  },
  {
    "filename": "templateFactory.ts",
    "code": "function getComponentBindings(name: string) {\n  const cmpDefs = <any[]>services.$injector.get(name + 'Directive'); // could be multiple\n  if (!cmpDefs || !cmpDefs.length) throw new Error(`Unable to find component named '${name}'`);\n  return cmpDefs.map(getBindings).reduce(unnestR, []);\n}",
    "correctAnswer": "angular-ui/ui-router"
  },
  {
    "filename": "Types.hs",
    "code": "module Types where",
    "correctAnswer": "metastatedev/juvix"
  },
  {
    "filename": "share_menu.js",
    "code": "class ShareMenu {\n  static inject() {\n    const dropdownMenu = $('.reader_menu .dropdown_menu');\n    const dropdownMenuItem = $('.reader_menu .dropdown_menu > li');\n    if (dropdownMenuItem.length > ShareMenu.shareMenuItemsCount) return;",
    "correctAnswer": "geeeeeeeeek/electronic-wechat"
  },
  {
    "filename": "keysrendering.cpp",
    "code": "using namespace ConnectionsTree;",
    "correctAnswer": "uglide/redisdesktopmanager"
  },
  {
    "filename": "DataStore.java",
    "code": "public class DataStore {",
    "correctAnswer": "alibaba/nacos"
  },
  {
    "filename": "GADTs.hs",
    "code": "module {- 1, in which we'll cover -} GADTs {- in isolation. This is very basic,\nand we'll see -} where {- they really shine when we come to things like\nConstraintKinds and DataKinds. -}",
    "correctAnswer": "i-am-tom/haskell-exercises"
  },
  {
    "filename": "RemotingServer.java",
    "code": "public interface RemotingServer extends RemotingService {",
    "correctAnswer": "apache/rocketmq"
  },
  {
    "filename": "server.rs",
    "code": "extern crate log;",
    "correctAnswer": "cloudflare/quiche"
  },
  {
    "filename": "SimpleListItemSpec.java",
    "code": "public class SimpleListItemSpec {",
    "correctAnswer": "facebook/fresco"
  },
  {
    "filename": "gitignore.rs",
    "code": "pub struct Gitignore {\n    files: Vec<GitignoreFile>,\n}",
    "correctAnswer": "watchexec/watchexec"
  },
  {
    "filename": "ToString.cs",
    "code": "namespace redacted.Tests.Documentation.Samples.Linq\n{\n    [TestFixture]\n    public class ToString : TestFixtureBase\n    {\n        [Test]\n        public void Example()",
    "correctAnswer": "JamesNK/Newtonsoft.Json"
  },
  {
    "filename": "Feed.php",
    "code": "class Feed implements FeedContract\n{\n    /**\n     * The default url.\n     *\n     * @var string\n     */",
    "correctAnswer": "cachethq/cachet"
  },
  {
    "filename": "DeleteUploadData.hs",
    "code": "module Network.Google.Resource.Analytics.Management.Uploads.DeleteUploadData\n    (\n    -- * REST Resource\n      ManagementUploadsDeleteUploadDataResource",
    "correctAnswer": "brendanhay/gogol"
  },
  {
    "filename": "SetStepInfoUpdateTask.java",
    "code": "public class SetStepInfoUpdateTask extends ClusterStateUpdateTask {\n    private final Index index;\n    private final String policy;\n    private final Step.StepKey currentStepKey;\n    private ToXContentObject stepInfo;",
    "correctAnswer": "elastic/elasticsearch"
  },
  {
    "filename": "do.hs",
    "code": "do putStr \"x: \" -- Haskell\n   l <- getLine\n   return (words l)",
    "correctAnswer": "finkel-lang/finkel"
  },
  {
    "filename": "AdvApi32+TOKEN_INFORMATION_CLASS.cs",
    "code": "namespace redacted\n{\n    /// <content>\n    /// Contains the <see cref=\"TOKEN_INFORMATION_CLASS\"/> nested type.\n    /// </content>\n    public partial class AdvApi32\n    {",
    "correctAnswer": "dotnet/pinvoke"
  },
  {
    "filename": "wrap-text.ts",
    "code": "const cache: Record<string, string> = {};",
    "correctAnswer": "vadimdemedes/ink"
  },
  {
    "filename": "mod.rs",
    "code": "mod git_config_entry;",
    "correctAnswer": "dandavison/delta"
  },
  {
    "filename": "ErrorWhenNoMatchQuery.cs",
    "code": "namespace redacted.Tests.Documentation.Samples.JsonPath\n{\n    [TestFixture]\n    public class ErrorWhenNoMatchQuery : TestFixtureBase\n    {\n        [Test]\n        public void Example()",
    "correctAnswer": "JamesNK/Newtonsoft.Json"
  },
  {
    "filename": "Records.hs",
    "code": "Movie Monad\n  (C) 2017 David redacted\n  redacted.com\n-}",
    "correctAnswer": "lettier/movie-monad"
  },
  {
    "filename": "OperatorPanelListView.cpp",
    "code": "using namespace redactedApp;\nusing namespace redactedApp::Controls;",
    "correctAnswer": "microsoft/calculator"
  },
  {
    "filename": "public_url_validator.rb",
    "code": "class PublicUrlValidator < AddressableUrlValidator\n  DEFAULT_OPTIONS = {\n    allow_localhost: false,\n    allow_local_network: false\n  }.freeze",
    "correctAnswer": "gitlabhq/gitlabhq"
  },
  {
    "filename": "Types.hs",
    "code": "module Data.Csv.Types\n    (\n    -- * Core CSV types\n      Csv\n    , Record\n    , Header\n    , Name",
    "correctAnswer": "haskell-hvr/cassava"
  },
  {
    "filename": "bcy.go",
    "code": "type bcyData struct {\n\tDetail struct {\n\t\tPostData struct {\n\t\t\tMulti []struct {\n\t\t\t\tOriginalPath string `json:\"original_path\"`\n\t\t\t} `json:\"multi\"`\n\t\t} `json:\"post_data\"`",
    "correctAnswer": "iawia002/annie"
  },
  {
    "filename": "colors.rs",
    "code": "pub struct Colors {\n    pub primary: PrimaryColors,\n    pub cursor: InvertedCellColors,\n    pub vi_mode_cursor: InvertedCellColors,\n    pub selection: InvertedCellColors,\n    pub normal: NormalColors,\n    pub bright: BrightColors,",
    "correctAnswer": "alacritty/alacritty"
  },
  {
    "filename": "AppStore.js",
    "code": "class AppStore extends ReduceStore<Action, string> {\n  constructor() {\n    super(AppDispatcher);\n  }",
    "correctAnswer": "facebook/flux"
  },
  {
    "filename": "deepCyclicCopy.ts",
    "code": "const EMPTY = new Set<string>();",
    "correctAnswer": "facebook/jest"
  },
  {
    "filename": "mod.rs",
    "code": "pub mod virtio_blk;",
    "correctAnswer": "chyyuu/os_kernel_lab"
  },
  {
    "filename": "BestTimeToBuyAndSellStockWithCooldown.cpp",
    "code": "class Solution {\npublic:\n    //\n    //Define \n    //\n    //  - buy[i] as the max profit when you buy the stock at day i. \n    //  - sell[i] as the max profit when you sell the stock at day i.",
    "correctAnswer": "haoel/leetcode"
  },
  {
    "filename": "tls.rs",
    "code": "service::TlsAcceptor,\n    tls::{Certificate, Identity},\n};\nuse std::fmt;",
    "correctAnswer": "hyperium/tonic"
  },
  {
    "filename": "input.html",
    "code": "<!DOCTYPE html> \n<html> \n<head> \n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> \n<style type=\"text/css\"> \n\tp, label { font-family: sans-serif; }\n\t.test { text-align: center; }",
    "correctAnswer": "ftlabs/fastclick"
  },
  {
    "filename": "sync_semaphore.rs",
    "code": "fn uncontended(b: &mut Bencher) {\n    let rt = redacted::runtime::Builder::new_multi_thread()\n        .worker_threads(6)\n        .build()\n        .unwrap();",
    "correctAnswer": "tokio-rs/tokio"
  },
  {
    "filename": "dlink_hnap_header_exec_noauth.rb",
    "code": "class MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking",
    "correctAnswer": "rapid7/metasploit-framework"
  },
  {
    "filename": "preview.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>redacted Emoji (redacted) Preview</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n    ul.emoji-list * {",
    "correctAnswer": "twitter/twemoji"
  },
  {
    "filename": "missing_const_for_fn.rs",
    "code": "fn_has_unsatisfiable_preds, has_drop, is_entrypoint_fn, meets_msrv, span_lint, trait_ref_of_method,\n};\nuse rustc_hir as hir;\nuse rustc_hir::intravisit::FnKind;\nuse rustc_hir::{Body, Constness, FnDecl, GenericParamKind, HirId};\nuse rustc_lint::{LateContext, LateLintPass, LintContext};\nuse rustc_middle::lint::in_external_macro;",
    "correctAnswer": "rust-lang/rust-clippy"
  },
  {
    "filename": "AFUIRefreshControlTests.m",
    "code": "@interface AFUIRefreshControlTests : AFTestCase\n@property (nonatomic, strong) NSURLRequest *request;\n@property (nonatomic, strong) UIRefreshControl *refreshControl;\n@property (nonatomic, strong) AFURLSessionManager *sessionManager;\n@end",
    "correctAnswer": "afnetworking/afnetworking"
  },
  {
    "filename": "startCase.js",
    "code": "const startCase = (string) => (\n  words(`${string}`.replace(/['\\u2019]/g, '')).reduce((result, word, index) => (\n    result + (index ? ' ' : '') + upperFirst(word)\n  ), '')\n)",
    "correctAnswer": "lodash/lodash"
  },
  {
    "filename": "DataDimensionInfo.ts",
    "code": "class DataDimensionInfo {",
    "correctAnswer": "apache/incubator-echarts"
  },
  {
    "filename": "jdl-application.js",
    "code": "const { createApplicationConfigurationFromObject } = require('./jdl-application-configuration-factory');\nconst JDLApplicationEntities = require('./jdl-application-entities');\nconst JDLOptions = require('./jdl-options');",
    "correctAnswer": "jhipster/generator-jhipster"
  },
  {
    "filename": "NodeLayout.hs",
    "code": "module Data.Bedrock.NodeLayout (finalizeNodeLayout) where",
    "correctAnswer": "Lemmih/lhc"
  },
  {
    "filename": "pallet_multisig.rs",
    "code": "pub struct WeightInfo<T>(PhantomData<T>);\nimpl<T: frame_system::Config> pallet_multisig::WeightInfo for WeightInfo<T> {\n\tfn as_multi_threshold_1(z: u32, ) -> Weight {\n\t\t(12_182_000 as Weight)\n\t\t\t// Standard Error: 0\n\t\t\t.saturating_add((1_000 as Weight).saturating_mul(z as Weight))\n\t}",
    "correctAnswer": "paritytech/polkadot"
  },
  {
    "filename": "improper-usage-messages.js",
    "code": "const chalk = require('../chalk').get();\nconst pkg = require('../../package.json');",
    "correctAnswer": "avajs/ava"
  },
  {
    "filename": "change_host_name.rb",
    "code": "module redactedPlugins\n  module GuestWindows\n    module Cap\n      module ChangeHostName\n        def self.change_host_name(machine, name)\n          change_host_name_and_wait(machine, name, machine.config.vm.graceful_halt_timeout)\n        end",
    "correctAnswer": "hashicorp/vagrant"
  },
  {
    "filename": "UIScrollViewAnimationScroll.m",
    "code": "@implementation UIScrollViewAnimationScroll",
    "correctAnswer": "nicklockwood/icarousel"
  },
  {
    "filename": "Main.hs",
    "code": "data Content\n  = ElementContent !Text !Events !Style ![Content]\n  | TextContent !Text\n  | ImageContent !Text !(Maybe (V2 Double)) !(Maybe SDL.Surface) -- !(Maybe Text)",
    "correctAnswer": "chrisdone/vado"
  },
  {
    "filename": "redacteda.rs",
    "code": "redacteda.rs - Tools for parsing and lexing the redacted Assembly format",
    "correctAnswer": "curlpipe/ox"
  },
  {
    "filename": "stashlist.rs",
    "code": "components::{\n        visibility_blocking, CommandBlocking, CommandInfo,\n        CommitList, Component, DrawableComponent,\n    },\n    keys::SharedKeyConfig,\n    queue::{Action, InternalEvent, Queue},\n    strings,",
    "correctAnswer": "extrawurst/gitui"
  },
  {
    "filename": "lenient.rs",
    "code": "pub struct LenientForm<T>(pub T);",
    "correctAnswer": "SergioBenitez/Rocket"
  },
  {
    "filename": "PerforceDriver.php",
    "code": "class PerforceDriver extends VcsDriver\n{\n    protected $depot;\n    protected $branch;\n    /** @var Perforce */\n    protected $perforce;",
    "correctAnswer": "composer/composer"
  },
  {
    "filename": "CombinedEnvironment.hs",
    "code": "module CombinedEnvironment\n   ( CRef\n   , CEnv\n   , GEnv.createCEnv\n   , view\n   , GEnv.model\n   , createCRef",
    "correctAnswer": "keera-studios/keera-hails"
  },
  {
    "filename": "overlay_manager.js",
    "code": "class OverlayManager {\n  constructor() {\n    this._overlays = {};\n    this._active = null;\n    this._keyDownBound = this._keyDown.bind(this);\n  }",
    "correctAnswer": "mozilla/pdf.js"
  },
  {
    "filename": "router.go",
    "code": "type Handle func(http.ResponseWriter, *http.Request, Params)",
    "correctAnswer": "julienschmidt/httprouter"
  },
  {
    "filename": "border-style.ts",
    "code": "const borderStyleForSide = (side: string): IPropertyIdentValueDescriptor<BORDER_STYLE> => ({\n    name: `border-${side}-style`,\n    initialValue: 'solid',\n    prefix: false,\n    type: PropertyDescriptorParsingType.IDENT_VALUE,\n    parse: (style: string): BORDER_STYLE => {\n        switch (style) {",
    "correctAnswer": "niklasvh/html2canvas"
  },
  {
    "filename": "redacted",
    "code": "function bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }",
    "correctAnswer": "eligrey/filesaver.js"
  },
  {
    "filename": "cache-manager.cpp",
    "code": "namespace HPHP {",
    "correctAnswer": "facebook/hhvm"
  },
  {
    "filename": "Config.hs",
    "code": "module Config\n    ( Config(..)\n    , homeDir\n    , inboxDirs\n    , libraryDir\n    , importAction\n    , ImportAction(..)",
    "correctAnswer": "2mol/pboy"
  },
  {
    "filename": "valueparser.go",
    "code": "type ValueParser struct {\n\tv   string\n\terr error\n}",
    "correctAnswer": "moby/moby"
  },
  {
    "filename": "MarkerImage.swift",
    "code": "@objc(ChartMarkerImage)\nopen class MarkerImage: NSObject, Marker\n{\n    /// The marker image to render\n    @objc open var image: NSUIImage?",
    "correctAnswer": "danielgindi/charts"
  },
  {
    "filename": "DividerItemDecoration.java",
    "code": "public class DividerItemDecoration extends RecyclerView.ItemDecoration {\n    private static final int[] ATTRS = new int[]{\n            android.R.attr.listDivider\n    };\n    public static final int HORIZONTAL_LIST = LinearLayoutManager.HORIZONTAL;\n    public static final int VERTICAL_LIST = LinearLayoutManager.VERTICAL;\n    private Drawable mDivider;",
    "correctAnswer": "tencent/qmui_android"
  },
  {
    "filename": "cmp.rs",
    "code": "pub trait CompareIgnoringSymbols {\n    /// Compare this expression to `other`.\n    ///\n    /// Returns whether the two expressions are the same modulo symbol names.\n    /// Returns an error if an undefined symbol is encountered.\n    fn compare_ignoring_symbols(&self, other: &Self) -> redactedResult<bool>;\n}",
    "correctAnswer": "weld-project/weld"
  },
  {
    "filename": "build.js",
    "code": "const webpack = require('webpack');\nconst {isProd, useAnalyser} = require('./build/config');\nconst {createConfig: createDevelopmentConfig} = require('./build/development');\nconst {createConfig: createProductionConfig} = require('./build/production');\nconst {runner} = require('./build/utils');",
    "correctAnswer": "shopify/draggable"
  },
  {
    "filename": "attempt.js",
    "code": "function attempt(func, ...args) {\n  try {\n    return func(...args)\n  } catch (e) {\n    return isError(e) ? e : new Error(e)\n  }\n}",
    "correctAnswer": "lodash/lodash"
  },
  {
    "filename": "signature.js",
    "code": "const framework = require('web.framework');\nconst SignatureDialog = require('web.signature_dialog');\nconst widgetRegistry = require('web.widget_registry');\nconst Widget = require('web.Widget');",
    "correctAnswer": "odoo/odoo"
  },
  {
    "filename": "theme.rb",
    "code": "module redacted\n  class Theme\n    extend Forwardable\n    attr_reader   :name",
    "correctAnswer": "jekyll/jekyll"
  },
  {
    "filename": "event.cpp",
    "code": "namespace redacted {\nnamespace redacted {",
    "correctAnswer": "facebook/yoga"
  },
  {
    "filename": "Uniquefy.hs",
    "code": "module Core.Uniquefy ( uniquefy\n                     , uniquefyDefGroup {- used for divergence analysis -}\n                     , uniquefyExpr\n                     ) where",
    "correctAnswer": "koka-lang/koka"
  },
  {
    "filename": "Body.hs",
    "code": "module Network.HTTP.Client.Body\n    ( makeChunkedReader\n    , makeLengthReader\n    , makeGzipReader\n    , makeUnlimitedReader\n    , brConsume\n    , brEmpty",
    "correctAnswer": "snoyberg/http-client"
  },
  {
    "filename": "TBQueue.hs",
    "code": "module Control.Concurrent.Classy.STM.TBQueue\n  ( -- * TBQueue\n    TBQueue\n  , newTBQueue\n  , readTBQueue\n  , tryReadTBQueue\n  , flushTBQueue",
    "correctAnswer": "barrucadu/dejafu"
  },
  {
    "filename": "ColorExtension.swift",
    "code": "extension Color: Codable {",
    "correctAnswer": "airbnb/lottie-ios"
  },
  {
    "filename": "index.ts",
    "code": "function isCrushed() {}",
    "correctAnswer": "reduxjs/redux"
  },
  {
    "filename": "pdf_cursor_tools.js",
    "code": "const CursorTool = {\n  SELECT: 0, // The default value.\n  HAND: 1,\n  ZOOM: 2,\n};",
    "correctAnswer": "mozilla/pdf.js"
  },
  {
    "filename": "transform.go",
    "code": "func New(deps *deps.Deps) *Namespace {\n\tcache := namedmemcache.New()\n\tdeps.BuildStartListeners.Add(\n\t\tfunc() {\n\t\t\tcache.Clear()\n\t\t})",
    "correctAnswer": "gohugoio/hugo"
  },
  {
    "filename": "helpers.php",
    "code": "if (!function_exists('debugbar')) {\n    /**\n     * Get the Debugbar instance\n     *\n     * @return \\redacted\\Debugbar\\LaravelDebugbar\n     */\n    function debugbar()",
    "correctAnswer": "barryvdh/laravel-debugbar"
  },
  {
    "filename": "Parser.js",
    "code": "class Parser {\n\t/* istanbul ignore next */\n\t/**\n\t * @abstract\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\n\t * @param {ParserState} state the parser state\n\t * @returns {ParserState} the parser state",
    "correctAnswer": "webpack/webpack"
  },
  {
    "filename": "deprecator.rb",
    "code": "module redacted\n  module Deprecator\n    extend self",
    "correctAnswer": "jekyll/jekyll"
  },
  {
    "filename": "main.js",
    "code": "const sagaMiddleware = createSagaMiddleware()\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(rootSaga)",
    "correctAnswer": "redux-saga/redux-saga"
  },
  {
    "filename": "bindClass.js",
    "code": "const parseClass = require('../../../ast/parseClass');",
    "correctAnswer": "tencent/wepy"
  },
  {
    "filename": "DataKind.hs",
    "code": ", PolyKinds\n           , TypeOperators\n           , TypeFamilies\n           , StandaloneDeriving\n           , DeriveDataTypeable\n           , ScopedTypeVariables\n           #-}",
    "correctAnswer": "hakaru-dev/hakaru"
  },
  {
    "filename": "SpecialPurposeNodes.cpp",
    "code": "namespace redacted { namespace MSR { namespace redacted {",
    "correctAnswer": "microsoft/cntk"
  },
  {
    "filename": "min.rs",
    "code": "pin_project! {\n    #[doc(hidden)]\n    #[allow(missing_debug_implementations)]\n    pub struct MinFuture<S, T> {\n        #[pin]\n        stream: S,\n        min: Option<T>,",
    "correctAnswer": "async-rs/async-std"
  },
  {
    "filename": "fromSJSON.ts",
    "code": "const SKETCH_HIGHEST_COMPATIBLE_VERSION = '95';",
    "correctAnswer": "airbnb/react-sketchapp"
  },
  {
    "filename": "InMemoryWindowBytesStoreSupplier.java",
    "code": "public class InMemoryWindowBytesStoreSupplier implements WindowBytesStoreSupplier {\n    private final String name;\n    private final long retentionPeriod;\n    private final long windowSize;\n    private final boolean retainDuplicates;",
    "correctAnswer": "apache/kafka"
  },
  {
    "filename": "writer.go",
    "code": "type Hook struct {\n\tWriter    io.Writer\n\tLogLevels []log.Level\n}",
    "correctAnswer": "sirupsen/logrus"
  },
  {
    "filename": "levenshtein.rs",
    "code": "struct N2Array<T> {\n    y_size: usize,\n    buf: Vec<T>,\n}",
    "correctAnswer": "meilisearch/MeiliSearch"
  },
  {
    "filename": "ExampleTableViewController.m",
    "code": "@interface ExampleTableViewController ()<UITableViewDataSource,UITableViewDelegate,UIPopoverPresentationControllerDelegate>",
    "correctAnswer": "hackiftekhar/iqkeyboardmanager"
  },
  {
    "filename": "StatusBar.hs",
    "code": "OverloadedStrings\n#-}\nmodule redacted.Ext.Views.Internal.StatusBar\n  ( getTopStatusBar\n  , getBottomStatusBar\n  , addTopStatus\n  , addBottomStatus",
    "correctAnswer": "ChrisPenner/rasa"
  },
  {
    "filename": "defaultCommand.js",
    "code": "const commander = require('../'); // include commander in git clone of commander repo\nconst program = new commander.Command();",
    "correctAnswer": "tj/commander.js"
  },
  {
    "filename": "PerformanceTests.swift",
    "code": "class PerformanceTests: XCTestCase {",
    "correctAnswer": "swiftyjson/swiftyjson"
  },
  {
    "filename": "index.js",
    "code": "function initParams (uri, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n  }",
    "correctAnswer": "request/request"
  },
  {
    "filename": "terminal.go",
    "code": "type TermType int\ntype CallbackFunc func(string)",
    "correctAnswer": "zyedidia/micro"
  },
  {
    "filename": "codemirror.ts",
    "code": "function CodeMirror(node: HTMLElement, { value, ...options }) {\n  let _eventListeners = {};\n  const mockWrapper = document.createElement('div');\n  const mockGutter = document.createElement('div');\n  mockGutter.className = 'CodeMirror-gutter';\n  const mockTextArea = document.createElement('textarea');\n  mockTextArea.className = 'mockCodeMirror';",
    "correctAnswer": "graphql/graphiql"
  },
  {
    "filename": "AsymmetricMatcher.ts",
    "code": "const asymmetricMatcher =\n  typeof Symbol === 'function' && Symbol.for\n    ? Symbol.for('redacted.asymmetricMatcher')\n    : 0x1357a5;\nconst SPACE = ' ';",
    "correctAnswer": "facebook/jest"
  },
  {
    "filename": "TestServiceImpl.java",
    "code": "public class TestServiceImpl implements TestService {",
    "correctAnswer": "alibaba/sentinel"
  },
  {
    "filename": "append.go",
    "code": "func Append(err error, errs ...error) *Error {\n\tswitch err := err.(type) {\n\tcase *Error:\n\t\t// Typed nils can reach here, so initialize if we are nil\n\t\tif err == nil {\n\t\t\terr = new(Error)\n\t\t}",
    "correctAnswer": "yudai/gotty"
  },
  {
    "filename": "ApplicationComponent.java",
    "code": "public interface ApplicationComponent {\n  void inject(BaseActivity baseActivity);",
    "correctAnswer": "android10/android-cleanarchitecture"
  },
  {
    "filename": "TextValue.hs",
    "code": "Module: Data.Aeson.TextValue\nDescription: Type for things that can be embedded in a JSON string",
    "correctAnswer": "seek-oss/serverless-haskell"
  },
  {
    "filename": "completion_engines.js",
    "code": "class BaseEngine {\n  constructor(options) {\n    Object.assign(this, options);\n    this.regexps = this.regexps.map(regexp => new RegExp(regexp));\n  }",
    "correctAnswer": "philc/vimium"
  },
  {
    "filename": "Internal.hs",
    "code": "Module      :  Neovim.Plugin.Internal\nDescription :  Split module that can import Neovim.Context without creating import circles\nCopyright   :  (c) Sebastian Witte\nLicense     :  Apache-2.0",
    "correctAnswer": "neovimhaskell/nvim-hs"
  },
  {
    "filename": "main.c",
    "code": "uv_loop_t *loop;\nCURLM *curl_handle;\nuv_timer_t timeout;",
    "correctAnswer": "libuv/libuv"
  },
  {
    "filename": "node.rs",
    "code": "pub struct Node {\n    instance_type: String,\n}",
    "correctAnswer": "Qovery/engine"
  },
  {
    "filename": "ae_kqueue.c",
    "code": "typedef struct aeApiState {\n    int kqfd;\n    struct kevent *events;\n} aeApiState;",
    "correctAnswer": "wg/wrk"
  },
  {
    "filename": "PinBoard.hs",
    "code": "module redacted.Util.PinBoard\n  ( PinBoard,\n    new,\n    pin,",
    "correctAnswer": "unisonweb/unison"
  },
  {
    "filename": "add.go",
    "code": "type AddCommand struct {\n\tBoltPath      string  `short:\"b\" long:\"bolt-path\" description:\"Full path to boltDB file (e.g. './chronograf-v1.db')\" env:\"BOLT_PATH\" default:\"chronograf-v1.db\"`\n\tID            *uint64 `short:\"i\" long:\"id\" description:\"Users ID. Must be id for existing user\"`\n\tUsername      string  `short:\"n\" long:\"name\" description:\"Users name. Must be Oauth-able email address or username\"`\n\tProvider      string  `short:\"p\" long:\"provider\" description:\"Name of the Auth provider (e.g. google, github, auth0, or generic)\"`\n\tScheme        string  `short:\"s\" long:\"scheme\" description:\"Authentication scheme that matches auth provider (e.g. oauth2)\" default:\"oauth2\"`\n\tOrganizations string  `short:\"o\" long:\"orgs\" description:\"A comma separated list of organizations that the user should be added to\" default:\"default\"`",
    "correctAnswer": "influxdb/influxdb"
  },
  {
    "filename": "inherited.rs",
    "code": "pub struct Inherited<'a, 'tcx> {\n    pub(super) infcx: InferCtxt<'a, 'tcx>,",
    "correctAnswer": "rust-lang/rust"
  },
  {
    "filename": "IMediaDataSource.c",
    "code": "typedef struct J4AC_tv_danmaku_ijk_media_player_misc_IMediaDataSource {\n    jclass id;",
    "correctAnswer": "bilibili/ijkplayer"
  },
  {
    "filename": "mod.rs",
    "code": "extern crate redacted;\nextern crate libc;",
    "correctAnswer": "glium/glium"
  },
  {
    "filename": "takeuntil.js",
    "code": "function TakeUntilObserver(o) {\n  this._o = o;\n  AbstractObserver.call(this);\n}",
    "correctAnswer": "reactive-extensions/rxjs"
  },
  {
    "filename": "ControlTarget.swift",
    "code": "#if os(iOS) || os(tvOS) || os(macOS)",
    "correctAnswer": "shadowsocks/shadowsocksx-ng"
  },
  {
    "filename": "flow-mapping-sequence.js",
    "code": "const {\n  builders: { ifBreak, line, softline, hardline, join },\n} = require(\"../../document\");\nconst { isEmptyNode, getLast, hasEndComments } = require(\"../utils\");\nconst { printNextEmptyLine, alignWithSpaces } = require(\"./misc\");",
    "correctAnswer": "prettier/prettier"
  },
  {
    "filename": "redacted-credential-wincred.c",
    "code": "static void die(const char *err, ...)\n{\n\tchar msg[4096];\n\tva_list params;\n\tva_start(params, err);\n\tvsnprintf(msg, sizeof(msg), err, params);\n\tfprintf(stderr, \"%s\\n\", msg);",
    "correctAnswer": "git/git"
  },
  {
    "filename": "Statistics.hs",
    "code": "module redacted.ExtendedSyntax.Statistics where",
    "correctAnswer": "grin-compiler/grin"
  },
  {
    "filename": "update.js",
    "code": "const got = require('@/utils/got');\nconst cheerio = require('cheerio');",
    "correctAnswer": "diygod/rsshub"
  },
  {
    "filename": "TestSwitch.java",
    "code": "public class TestSwitch extends AbstractTest {",
    "correctAnswer": "skylot/jadx"
  },
  {
    "filename": "Strict.hs",
    "code": "module Control.Eff.Reader.Strict ( Reader (..)\n                                 , withReader\n                                 , ask\n                                 , local\n                                 , reader\n                                 , runReader\n                                 ) where",
    "correctAnswer": "suhailshergill/extensible-effects"
  },
  {
    "filename": "check_dependencies.sh",
    "code": "err() {\n    echo >&2 \"$1\"\n    exit 1\n}",
    "correctAnswer": "tj/git-extras"
  },
  {
    "filename": "OkLogger.java",
    "code": "public class OkLogger {\n    private static boolean isLogEnable = true;",
    "correctAnswer": "didi/doraemonkit"
  },
  {
    "filename": "Company.php",
    "code": "class Company extends \\redacted\\Provider\\Company\n{\n    protected static $companyNameFormats = array(\n        '{{companyPrefix}} {{companyNameElement}}',\n        '{{companyPrefix}} {{companyNameElement}}{{companyNameElement}}',\n        '{{companyPrefix}} {{companyNameElement}}{{companyNameElement}}{{companyNameElement}}',\n        '{{companyPrefix}} {{companyNameElement}}{{companyNameElement}}{{companyNameElement}}{{companyNameSuffix}}',",
    "correctAnswer": "fzaninotto/faker"
  },
  {
    "filename": "native.rs",
    "code": "buffer, format, image as i,\n    memory::{Properties, Requirements},\n    pass, pso, window as w,\n};",
    "correctAnswer": "gfx-rs/gfx"
  },
  {
    "filename": "RegexMatch.java",
    "code": "public class RegexMatch implements IndirectMatch {\n    private String[] regexExpressions;",
    "correctAnswer": "apache/skywalking"
  },
  {
    "filename": "stock-ticker-events.js",
    "code": "function addStockName(stock) {\n\treturn setProp( \"name\", stock, stock.id );\n}",
    "correctAnswer": "getify/functional-light-js"
  },
  {
    "filename": "ServeTarball.hs",
    "code": "module Distribution.Server.Util.ServeTarball\n    ( serveTarball\n    , serveTarEntry\n    , loadTarEntry\n    , constructTarIndexFromFile\n    , constructTarIndex\n    ) where",
    "correctAnswer": "haskell/hackage-server"
  },
  {
    "filename": "Chapter1.hs",
    "code": "Happy to see you here, on the way to the wonderful Functional Programming land\nwith Haskell! Fight the fierce Monad Dragon and save the globe from despicable\nruntime exceptions!",
    "correctAnswer": "kowainik/learn4haskell"
  },
  {
    "filename": "basic.html",
    "code": "<!DOCTYPE html>\n<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\n<!-- three.js library -->\n<script src='../../vendor/three.js/build/three.js'></script>",
    "correctAnswer": "jeromeetienne/ar.js"
  },
  {
    "filename": "Data.hs",
    "code": "Module      :  Example.Data\nCopyright   :  Dennis Gosnell 2017\nLicense     :  BSD3\nMaintainer  :  Dennis Gosnell (cdep.illabout@gmail.com)\nStability   :  experimental\nPortability :  unknown",
    "correctAnswer": "cdepillabout/pretty-simple"
  },
  {
    "filename": "helper.go",
    "code": "type rowHelper struct {\n\tCodec keys.SQLCodec",
    "correctAnswer": "cockroachdb/cockroach"
  },
  {
    "filename": "cppISteamApps_STEAMAPPS_INTERFACE_VERSION008.cpp",
    "code": "extern \"C\" {\n#endif\n#define SDKVER_150\n#include \"struct_converters.h\"\n#include \"cppISteamApps_STEAMAPPS_INTERFACE_VERSION008.h\"\nbool cppISteamApps_STEAMAPPS_INTERFACE_VERSION008_BIsSubscribed(void *linux_side)\n{",
    "correctAnswer": "valvesoftware/proton"
  },
  {
    "filename": "Strict.hs",
    "code": "module Control.Monad.State.Strict (\n    -- * MonadState class\n    MonadState(..),\n    modify,\n    modify',\n    gets,\n    -- * The State monad",
    "correctAnswer": "haskell/mtl"
  },
  {
    "filename": "IsAbsolute.js",
    "code": "function posix(path) {\n\treturn path.charAt(0) === '/';\n}",
    "correctAnswer": "unitech/pm2"
  },
  {
    "filename": "executor.js",
    "code": "function Executor () {\n  this.buffer = [];\n  this.ready = false;",
    "correctAnswer": "louischatriot/nedb"
  },
  {
    "filename": "config_file.cpp",
    "code": "PackedStringArray ConfigFile::_get_sections() const {\n\tList<String> s;\n\tget_sections(&s);\n\tPackedStringArray arr;\n\tarr.resize(s.size());\n\tint idx = 0;\n\tfor (const List<String>::Element *E = s.front(); E; E = E->next()) {",
    "correctAnswer": "godotengine/godot"
  },
  {
    "filename": "message-parser.js",
    "code": "const Transform = require('stream').Transform;",
    "correctAnswer": "nodemailer/nodemailer"
  },
  {
    "filename": "KeepCtorOfMarshalled.hs",
    "code": "module Refactor.OrganizeImports.KeepCtorOfMarshalled where",
    "correctAnswer": "haskell-tools/haskell-tools"
  },
  {
    "filename": "beta_feedback.rb",
    "code": "module Spaceship\n  class ConnectAPI\n    class BetaFeedback\n      include Spaceship::ConnectAPI::Model",
    "correctAnswer": "fastlane/fastlane"
  },
  {
    "filename": "redacted",
    "code": "function hexToRgb(hex){\n  // By Tim Down - http://stackoverflow.com/a/5624139/3493650\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n     return r + r + g + g + b + b;\n  });",
    "correctAnswer": "vincentgarreau/particles.js"
  },
  {
    "filename": "lib.rs",
    "code": "extern crate env_logger;\nextern crate rustc_driver;\nextern crate rustc_interface;\nextern crate rustc_save_analysis;\nextern crate rustc_session;\nextern crate rustc_span;",
    "correctAnswer": "rust-lang/rls"
  },
  {
    "filename": "DescribeRDSDBInstances.hs",
    "code": "module Network.AWS.OpsWorks.DescribeRDSDBInstances\n    (\n    -- * Creating a Request\n      describeRDSDBInstances\n    , DescribeRDSDBInstances\n    -- * Request Lenses\n    , drdiRDSDBInstanceARNs",
    "correctAnswer": "brendanhay/amazonka"
  },
  {
    "filename": "main.go",
    "code": "func main() {\n\tvar (\n\t\tlisten = flag.String(\"listen\", \":8080\", \"HTTP listen address\")\n\t\tproxy  = flag.String(\"proxy\", \"\", \"Optional comma-separated list of URLs to proxy uppercase requests\")\n\t)\n\tflag.Parse()",
    "correctAnswer": "go-kit/kit"
  },
  {
    "filename": "json.go",
    "code": "func WriteJSON(c *Conn, v interface{}) error {\n\treturn c.WriteJSON(v)\n}",
    "correctAnswer": "gorilla/websocket"
  },
  {
    "filename": "JsonSerializer.java",
    "code": "public interface JsonSerializer<T> {",
    "correctAnswer": "google/gson"
  },
  {
    "filename": "conditional-fsevents-import.js",
    "code": "const FSEVENTS_REQUIRE = \"require('fsevents')\";\nconst REPLACEMENT = \"require('../../../src/watch/fsevents-importer').getFsEvents()\";",
    "correctAnswer": "rollup/rollup"
  },
  {
    "filename": "lib.rs",
    "code": "html_logo_url = \"https://raw.githubusercontent.com/redacted/redacted/master/assets/logo-square.png\"\n)]\n//! <p><p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul></p>\n//!\n//! If you're using the service, you're probably looking for [DeviceFarmClient](struct.DeviceFarmClient.html) and [DeviceFarm](trait.DeviceFarm.html).",
    "correctAnswer": "rusoto/rusoto"
  },
  {
    "filename": "DebugHeap.cpp",
    "code": "namespace bmalloc {",
    "correctAnswer": "apache/incubator-weex"
  },
  {
    "filename": "chunk.rs",
    "code": "pub struct Chunk {\n    /// Total width of this chunk.\n    pub width: usize,",
    "correctAnswer": "gyscos/cursive"
  },
  {
    "filename": "DDMultiFormatter.m",
    "code": "@interface DDMultiFormatter ()",
    "correctAnswer": "robbiehanson/cocoaasyncsocket"
  },
  {
    "filename": "request.ts",
    "code": "const requests = new Map<string, Promise<any>>();",
    "correctAnswer": "driftyco/ionicons"
  },
  {
    "filename": "notype.html",
    "code": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://fonts.redactedapis.com/icon?family=Material+Icons\">",
    "correctAnswer": "google/webfundamentals"
  },
  {
    "filename": "Classes.hs",
    "code": "Module      :  Neovim.RPC.Classes\nDescription :  Data types and classes for the RPC components\nCopyright   :  (c) Sebastian Witte\nLicense     :  Apache-2.0",
    "correctAnswer": "neovimhaskell/nvim-hs"
  },
  {
    "filename": "pallet_multisig.rs",
    "code": "pub struct WeightInfo<T>(PhantomData<T>);\nimpl<T: frame_system::Config> pallet_multisig::WeightInfo for WeightInfo<T> {\n\tfn as_multi_threshold_1(z: u32, ) -> Weight {\n\t\t(12_532_000 as Weight)\n\t\t\t// Standard Error: 0\n\t\t\t.saturating_add((1_000 as Weight).saturating_mul(z as Weight))\n\t}",
    "correctAnswer": "paritytech/polkadot"
  },
  {
    "filename": "redacted.hs",
    "code": "module Network.HTTP.redacted\n  ( -- * Making a redacteduest\n    -- $making-a-redacteduest\n    redacted,\n    redactedBr,\n    redactedCb,\n    redacted',",
    "correctAnswer": "mrkkrp/req"
  },
  {
    "filename": "loader.rs",
    "code": "pub enum Entry {\n    /// The `Entry` is represented by a raw set of files.\n    Files(Vec<AbsPathBuf>),\n    /// The `Entry` is represented by `Directories`.\n    Directories(Directories),\n}",
    "correctAnswer": "rust-analyzer/rust-analyzer"
  },
  {
    "filename": "MainActivity.java",
    "code": "public class MainActivity extends Activity {",
    "correctAnswer": "hdodenhof/circleimageview"
  },
  {
    "filename": "LegacyHashingRule.swift",
    "code": "public struct LegacyHashingRule: ASTRule, ConfigurationProviderRule, AutomaticTestableRule {\n    public var configuration = SeverityConfiguration(.warning)",
    "correctAnswer": "realm/swiftlint"
  },
  {
    "filename": "Fresh.hs",
    "code": "module Control.Eff.Example.Fresh( Fresh (Fresh)\n                                , withFresh\n                                , fresh\n                                , runFresh'\n                                ) where",
    "correctAnswer": "suhailshergill/extensible-effects"
  },
  {
    "filename": "Rank2.hs",
    "code": "module Test.StateMachine.Types.Rank2\n  ( Functor\n  , fmap\n  , gfmap\n  , (<$>)\n  , Foldable\n  , foldMap",
    "correctAnswer": "advancedtelematic/quickcheck-state-machine"
  },
  {
    "filename": "point_path.rs",
    "code": "pub use super::line::Pattern;\npub use super::line::Style;",
    "correctAnswer": "PistonDevelopers/conrod"
  },
  {
    "filename": "Shen.hs",
    "code": "main :: IO ()\nmain = do\n  env <- initEnv\n  runKLC bootstrap\n       (\\_ _ -> return ())\n       (\\_ _ -> return ())\n       env",
    "correctAnswer": "mthom/shentong"
  },
  {
    "filename": "spawner.rs",
    "code": "diagnostic::{FrameTimeDiagnosticsPlugin, LogDiagnosticsPlugin},\n    prelude::*,\n};\nuse rand::{rngs::StdRng, Rng, SeedableRng};",
    "correctAnswer": "bevyengine/bevy"
  },
  {
    "filename": "lib.rs",
    "code": "html_logo_url = \"https://raw.githubusercontent.com/redacted/redacted/master/assets/logo-square.png\"\n)]\n//! <p>AWS IAM Access Analyzer helps identify potential resource-access risks by enabling you to identify any policies that grant access to an external principal. It does this by using logic-based reasoning to analyze resource-based policies in your AWS environment. An external principal can be another AWS account, a root user, an IAM user or role, a federated user, an AWS service, or an anonymous user. This guide describes the AWS IAM Access Analyzer operations that you can call programmatically. For general information about Access Analyzer, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html\">AWS IAM Access Analyzer</a> in the <b>IAM User Guide</b>.</p> <p>To start using Access Analyzer, you first need to create an analyzer.</p>\n//!\n//! If you're using the service, you're probably looking for [AccessAnalyzerClient](struct.AccessAnalyzerClient.html) and [AccessAnalyzer](trait.AccessAnalyzer.html).",
    "correctAnswer": "rusoto/rusoto"
  },
  {
    "filename": "zz_generated_cluster_alert_group_lifecycle_adapter.go",
    "code": "type ClusterAlertGroupLifecycle interface {\n\tCreate(obj *v3.ClusterAlertGroup) (runtime.Object, error)\n\tRemove(obj *v3.ClusterAlertGroup) (runtime.Object, error)\n\tUpdated(obj *v3.ClusterAlertGroup) (runtime.Object, error)\n}",
    "correctAnswer": "rancherio/rancher"
  },
  {
    "filename": "index.js",
    "code": "function tryLocaleDetect() {\n  // use navigator to get the locale setting\n  changeLocaleFromHeaders(navigator.language || navigator.browserLanguage);\n}",
    "correctAnswer": "pcottle/learngitbranching"
  },
  {
    "filename": "buffered_task_store.ts",
    "code": "const DEFAULT_BUFFER_MAX_DURATION = 50;",
    "correctAnswer": "elastic/kibana"
  },
  {
    "filename": "Builder.hs",
    "code": "module Language.Server.Builder\n  ( buildMessage\n  , buildEncoding\n  , hPutMessage\n  , hPutEncoding\n  , putMessage\n  , putEncoding",
    "correctAnswer": "ekmett/coda"
  },
  {
    "filename": "lib.rs",
    "code": "extern crate ansi_term;\nextern crate arrayvec;\nextern crate atty;\nextern crate env_logger;\nextern crate log as rlog;\nextern crate parking_lot;\nextern crate regex;",
    "correctAnswer": "openethereum/parity-ethereum"
  },
  {
    "filename": "util.go",
    "code": "type ConfigParseError struct {\n\terr error\n}",
    "correctAnswer": "spf13/viper"
  },
  {
    "filename": "Arg.hs",
    "code": "module Data.GI.GIR.Arg\n    ( Arg(..)\n    , Direction(..)\n    , Scope(..)\n    , parseArg\n    , parseTransfer\n    ) where",
    "correctAnswer": "haskell-gi/haskell-gi"
  },
  {
    "filename": "How.java",
    "code": "public enum How {\n  CLASS_NAME {\n    @Override\n    public By buildBy(String value) {\n      return By.className(value);\n    }\n  },",
    "correctAnswer": "seleniumhq/selenium"
  },
  {
    "filename": "Search.hs",
    "code": "module Data.redacted.Internal.Search\n    (\n      indices\n    ) where",
    "correctAnswer": "haskell/text"
  },
  {
    "filename": "Setup.hs",
    "code": "main = defaultMain",
    "correctAnswer": "itchyny/sjsp"
  },
  {
    "filename": "signatureHelpProvider.ts",
    "code": "const _NL = '\\n'.charCodeAt(0);\nconst _TAB = '\\t'.charCodeAt(0);\nconst _WSB = ' '.charCodeAt(0);\nconst _LBracket = '['.charCodeAt(0);\nconst _RBracket = ']'.charCodeAt(0);\nconst _LCurly = '{'.charCodeAt(0);\nconst _RCurly = '}'.charCodeAt(0);",
    "correctAnswer": "microsoft/vscode"
  },
  {
    "filename": "unhandledError.js",
    "code": "let boundErrorHandler = null;",
    "correctAnswer": "facebook/create-react-app"
  },
  {
    "filename": "UITabBarController+RNNOptionsTest.m",
    "code": "@interface UITabBarController_RNNOptionsTest : XCTestCase",
    "correctAnswer": "wix/react-native-navigation"
  },
  {
    "filename": "BoxStyleSelect.hs",
    "code": "module UI.BoxStyleSelect\n  ( drawBoxStyleSelectUI\n  )\nwhere",
    "correctAnswer": "jtdaugherty/tart"
  },
  {
    "filename": "SKCanvasView.cs",
    "code": "namespace redacted.Views.Tizen\n{\n\tpublic class SKCanvasView : CustomRenderingView\n\t{\n\t\tprivate bool ignorePixelScaling;\n\t\tprivate SKImageInfo info;",
    "correctAnswer": "mono/SkiaSharp"
  },
  {
    "filename": "umount.c",
    "code": "int umount(\n    const char* dir\n) {\n    int error;",
    "correctAnswer": "samypesse/how-to-make-a-computer-operating-system"
  },
  {
    "filename": "generate.hs",
    "code": "Proxy (Proxy), UrlPrefix (Static), defElmImports,\n                               defElmOptions, defaultOptions, deriveBoth,\n                               generateElmModuleWith)",
    "correctAnswer": "haskell-servant/servant-elm"
  },
  {
    "filename": "memoryStorage.js",
    "code": "function read(key) {\n\treturn memoryStorage[key]\n}",
    "correctAnswer": "marcuswestin/store.js"
  },
  {
    "filename": "buttons.ts",
    "code": "const {\n  BUTTON_CONTAINER,\n  BUTTON,\n  BUTTON_LOADER,\n} = CLASS_NAMES;",
    "correctAnswer": "t4t5/sweetalert"
  },
  {
    "filename": "service_update.go",
    "code": "func (cli *Client) ServiceUpdate(ctx context.Context, serviceID string, version swarm.Version, service swarm.ServiceSpec, options types.ServiceUpdateOptions) (types.ServiceUpdateResponse, error) {\n\tvar (\n\t\tquery   = url.Values{}\n\t\tdistErr error\n\t)",
    "correctAnswer": "kubernetes/kubernetes"
  },
  {
    "filename": "EglWinPlatformFactory.cs",
    "code": "namespace OpenTK.Platform.Egl\n{\n    // EGL factory for the Windows platform.\n    class EglWinPlatformFactory : WinFactory\n    {\n        public override IGraphicsContext CreateGLContext(GraphicsMode mode, IWindowInfo window, IGraphicsContext shareContext, bool directRendering, int major, int minor, GraphicsContextFlags flags)\n        {",
    "correctAnswer": "xamarin/xamarin-macios"
  },
  {
    "filename": "attrs.js",
    "code": "const acceptValue = makeMap('input,textarea,option,select,progress')\nexport const mustUseProp = (tag: string, type: ?string, attr: string): boolean => {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')",
    "correctAnswer": "vuejs/vue"
  },
  {
    "filename": "Ambitus.hs",
    "code": "module Music.Pitch.Ambitus\n  ( Ambitus (..),\n    ambitusInterval,\n    inAmbitus,\n  )\nwhere",
    "correctAnswer": "music-suite/music-suite"
  },
  {
    "filename": "exp-golomb.js",
    "code": "class ExpGolomb {",
    "correctAnswer": "bilibili/flv.js"
  },
  {
    "filename": "input_pattern.rs",
    "code": "super::*,\n    crate::{\n        app::AppContext,\n        errors::PatternError,\n        pattern::{Pattern, PatternParts},\n    },\n    bet::BeTree,",
    "correctAnswer": "Canop/broot"
  },
  {
    "filename": "build_route_section.rs",
    "code": "shadow::ShadowMatcherToken, unnamed_field_index_item, write_for_token, FieldType, SwitchItem,\n};\nuse proc_macro2::{Ident, TokenStream};\nuse quote::{quote, ToTokens};\nuse syn::Fields;",
    "correctAnswer": "yewstack/yew"
  },
  {
    "filename": "define.rs",
    "code": "check_argument_count, check_arguments_at_least, CheckErrors, InterpreterResult as Result,\n    RuntimeErrorType,\n};\nuse vm::eval;\nuse vm::representations::SymbolicExpressionType::{Atom, AtomValue, Field, List, LiteralValue};\nuse vm::representations::{ClarityName, SymbolicExpression};\nuse vm::types::signatures::FunctionSignature;",
    "correctAnswer": "blockstack/stacks-blockchain"
  },
  {
    "filename": "AppDelegate.m",
    "code": "@interface AppDelegate : NSObject <NSApplicationDelegate, NSURLDownloadDelegate, SUUpdaterDelegate>",
    "correctAnswer": "matryer/bitbar"
  },
  {
    "filename": "Collisions.hs",
    "code": "module Physics.TwoDimensions.Collisions where",
    "correctAnswer": "ivanperez-keera/haskanoid"
  },
  {
    "filename": "lib.rs",
    "code": "html_logo_url = \"https://raw.githubusercontent.com/redacted/redacted/master/assets/logo-square.png\"\n)]\n//! <p><fullname>AWS CloudHSM Service</fullname> <p>This is documentation for <b>AWS CloudHSM Classic</b>. For more information, see <a href=\"http://aws.amazon.com/cloudhsm/faqs-classic/\">AWS CloudHSM Classic FAQs</a>, the <a href=\"http://docs.aws.amazon.com/cloudhsm/classic/userguide/\">AWS CloudHSM Classic User Guide</a>, and the <a href=\"http://docs.aws.amazon.com/cloudhsm/classic/APIReference/\">AWS CloudHSM Classic API Reference</a>.</p> <p> <b>For information about the current version of AWS CloudHSM</b>, see <a href=\"http://aws.amazon.com/cloudhsm/\">AWS CloudHSM</a>, the <a href=\"http://docs.aws.amazon.com/cloudhsm/latest/userguide/\">AWS CloudHSM User Guide</a>, and the <a href=\"http://docs.aws.amazon.com/cloudhsm/latest/APIReference/\">AWS CloudHSM API Reference</a>.</p></p>\n//!\n//! If you're using the service, you're probably looking for [CloudHsmClient](struct.CloudHsmClient.html) and [CloudHsm](trait.CloudHsm.html).",
    "correctAnswer": "rusoto/rusoto"
  },
  {
    "filename": "error.rs",
    "code": "ast,\n    error::AsDiagnostic,\n    pos::{self, BytePos, Spanned},\n    source::FileId,\n    types::{ArcType, AsId, Filter, ToDoc, TypeExt, TypeFormatter},\n};",
    "correctAnswer": "gluon-lang/gluon"
  },
  {
    "filename": "statics.js",
    "code": "const redacted = require('../../lib');",
    "correctAnswer": "automattic/mongoose"
  },
  {
    "filename": "zz_generated_rke_k8s_system_image_lifecycle_adapter.go",
    "code": "type RkeK8sSystemImageLifecycle interface {\n\tCreate(obj *v3.RkeK8sSystemImage) (runtime.Object, error)\n\tRemove(obj *v3.RkeK8sSystemImage) (runtime.Object, error)\n\tUpdated(obj *v3.RkeK8sSystemImage) (runtime.Object, error)\n}",
    "correctAnswer": "rancherio/rancher"
  },
  {
    "filename": "book3s_mmu_hpte.c",
    "code": "static struct kmem_cache *hpte_cache;",
    "correctAnswer": "torvalds/linux"
  },
  {
    "filename": "range_include.rb",
    "code": "module RuboCop\n  module Cop\n    module Performance\n      # This cop identifies uses of `Range#include?` and `Range#member?`, which iterates over each\n      # item in a `Range` to see if a specified item is there. In contrast,\n      # `Range#cover?` simply compares the target item with the beginning and\n      # end points of the `Range`. In a great majority of cases, this is what",
    "correctAnswer": "homebrew/brew"
  },
  {
    "filename": "Card.hs",
    "code": "module redacted.IO.HTTP.Trello.Card\n    ( Card\n    , idChecklists\n    , cardToTask\n    , setChecklists\n    ) where",
    "correctAnswer": "smallhadroncollider/taskell"
  },
  {
    "filename": "DDNumber.m",
    "code": "@implementation NSNumber (DDNumber)",
    "correctAnswer": "cocoalumberjack/cocoalumberjack"
  },
  {
    "filename": "webconn.js",
    "code": "const BitField = require('bitfield').default\nconst debug = require('debug')('redacted:webconn')\nconst get = require('simple-get')\nconst sha1 = require('simple-sha1')\nconst Wire = require('bittorrent-protocol')",
    "correctAnswer": "webtorrent/webtorrent"
  },
  {
    "filename": "format-problems.js",
    "code": "const formatDuplicates = require(\"./format-duplicates\");\nconst formatVersions = require(\"./format-versions\");",
    "correctAnswer": "formidablelabs/webpack-dashboard"
  },
  {
    "filename": "CocktailShakerSort.redacted",
    "code": "class CocktailShakerSort implements SortAlgorithm {",
    "correctAnswer": "thealgorithms/java"
  },
  {
    "filename": "ThrowableFailureEvent.java",
    "code": "public class ThrowableFailureEvent implements HasExecutionScope {\n    protected final Throwable throwable;\n    protected final boolean suppressErrorUi;\n    private Object executionContext;",
    "correctAnswer": "greenrobot/eventbus"
  },
  {
    "filename": "method.rs",
    "code": "pub type NativeMethod<'gc> = fn(\n    &mut Activation<'_, 'gc, '_>,\n    Option<Object<'gc>>,\n    &[Value<'gc>],\n) -> Result<Value<'gc>, Error>;",
    "correctAnswer": "ruffle-rs/ruffle"
  },
  {
    "filename": "strpbrk.c",
    "code": "char* strpbrk( const char* s, const char* accept ) {\n    register int i, l = strlen( accept );",
    "correctAnswer": "samypesse/how-to-make-a-computer-operating-system"
  },
  {
    "filename": "UnitTestApp.xaml.cpp",
    "code": "// Copyright (c) redacted Corporation. All rights reserved.\n// Licensed under the MIT License.",
    "correctAnswer": "microsoft/calculator"
  },
  {
    "filename": "IRightsManagementProvider.cs",
    "code": "namespace MS.Internal.Documents\n{\n    /// <summary>\n    /// IRightsManagementProvider is the interface that defines the DRP's RM API adapter.\n    /// </summary>\n    internal interface IRightsManagementProvider\n    {",
    "correctAnswer": "dotnet/wpf"
  },
  {
    "filename": "FrontendContextualise.hs",
    "code": "module redacted.FrontendContextualise\n  ( module redacted.FrontendContextualise,\n    Target.FinalContext,\n  )\nwhere",
    "correctAnswer": "metastatedev/juvix"
  },
  {
    "filename": "license.rs",
    "code": "pub(crate) enum LicenseError {\n    IO(io::Error),\n    Regex(regex::Error),\n    Parse(String),\n}",
    "correctAnswer": "rust-lang/rustfmt"
  },
  {
    "filename": "TypeClasses.hs",
    "code": "module TypeClasses where",
    "correctAnswer": "thma/WhyHaskellMatters"
  },
  {
    "filename": "unicode.c",
    "code": "typedef uint32 uval;\n#define UVAL_DONT_CARE_DEFAULT 0xffffffff",
    "correctAnswer": "nothings/stb"
  },
  {
    "filename": "validator.js",
    "code": "const CLIENT_URL_TYPES = {\n  url: 'hostname',\n  android: 'Android',\n  ios: 'iOS',\n};",
    "correctAnswer": "appium/appium"
  },
  {
    "filename": "tables.go",
    "code": "var tokenToString = map[T]string{\n\tTEndOfFile:   \"end of file\",\n\tTSyntaxError: \"syntax error\",\n\tTHashbang:    \"hashbang comment\",",
    "correctAnswer": "evanw/esbuild"
  },
  {
    "filename": "stream_fold.rs",
    "code": "pin_project! {\n    /// A future used to collect all the results of a stream into one generic type.\n    ///\n    /// This future is returned by the `ActorStream::fold` method.\n    #[derive(Debug)]\n    #[must_use = \"streams do nothing unless polled\"]\n    pub struct StreamFold<S, F, Fut, T>",
    "correctAnswer": "actix/actix"
  },
  {
    "filename": "05_flag_args.rs",
    "code": "fn main() {\n    // Of the three argument types, flags are the most simple. Flags are simple switches which can\n    // be either \"on\" or \"off\"\n    //\n    // redacted also supports multiple occurrences of flags, the common example is \"verbosity\" where a\n    // user could want a little information with \"-v\" or tons of information with \"-v -v\" or \"-vv\"\n    let matches = App::new(\"MyApp\")",
    "correctAnswer": "clap-rs/clap"
  },
  {
    "filename": "CodedOutputData.cpp",
    "code": "using namespace std;",
    "correctAnswer": "tencent/mmkv"
  },
  {
    "filename": "multipart.rs",
    "code": "pub struct Form {\n    inner: FormParts<Part>,\n}",
    "correctAnswer": "seanmonstar/reqwest"
  },
  {
    "filename": "karma-docs.conf.js",
    "code": "const path = require('path');",
    "correctAnswer": "angular/material"
  },
  {
    "filename": "color.rs",
    "code": "pub struct Color {\n    /// When to use color.\n    pub when: ColorOption,\n}",
    "correctAnswer": "Peltoche/lsd"
  },
  {
    "filename": "MaxBytesRecvByteBufAllocator.java",
    "code": "public interface MaxBytesRecvByteBufAllocator extends RecvByteBufAllocator {\n    /**\n     * Returns the maximum number of bytes to read per read loop.\n     * a {@link ChannelHandler#channelRead(ChannelHandlerContext, Object) channelRead()} event.\n     * If this value is greater than 1, an event loop might attempt to read multiple times to procure bytes.\n     */\n    int maxBytesPerRead();",
    "correctAnswer": "netty/netty"
  },
  {
    "filename": "Type.hs",
    "code": "Module      :  Lens.Micro.Type\nCopyright   :  (C) 2013-2016 Edward Kmett, 2015-2016 Artyom Kazak, 2018 redacted\nLicense     :  BSD-style (see the file LICENSE)",
    "correctAnswer": "monadfix/microlens"
  },
  {
    "filename": "SecureSocketHandler.java",
    "code": "public abstract class SecureSocketHandler implements SocketHandler {\n  private final Context mContext;",
    "correctAnswer": "facebookarchive/stetho"
  },
  {
    "filename": "Model.java",
    "code": "public class Model extends AbstractReportModel<Action, ReportPage, Context> {",
    "correctAnswer": "dianping/cat"
  },
  {
    "filename": "sortableList.hs",
    "code": "main :: IO ()\nmain = mainWidget $ do\n  let f _ (a, b, c) = el \"tr\" $ do\n        mapM_ (el \"td\" . text . T.pack . show) [a, b, c]\n        _ <- el \"td\" $ inputElement def\n        return ()\n  let numKeys = 1000 :: Int",
    "correctAnswer": "reflex-frp/reflex-dom"
  },
  {
    "filename": "fibonacci.go",
    "code": "func Fibonacci(n int) (res int) {\n\tif n <= 1 {\n\t\tres = 1\n\t} else {\n\t\tres = Fibonacci(n-1) + Fibonacci(n-2)\n\t}\n\treturn",
    "correctAnswer": "unknwon/the-way-to-go_zh_cn"
  },
  {
    "filename": "Handler.hs",
    "code": "module Wizzardo.Http.Handler\n  ( JHandler\n  , JRequest\n  , JResponse\n  , createHandler\n  ) where",
    "correctAnswer": "tweag/inline-java"
  },
  {
    "filename": "index.js",
    "code": "function createThunkMiddleware(extraArgument) {\n  return ({ dispatch, getState }) => (next) => (action) => {\n    if (typeof action === 'function') {\n      return action(dispatch, getState, extraArgument);\n    }",
    "correctAnswer": "reduxjs/redux-thunk"
  },
  {
    "filename": "print.c",
    "code": "int first_file_match = 1;",
    "correctAnswer": "ggreer/the_silver_searcher"
  },
  {
    "filename": "free_mon_storage.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "mongodb/mongo"
  },
  {
    "filename": "idle.rs",
    "code": "pub struct IdleArgs {\n    /// Expected idle time in seconds.\n    pub dt: f64,\n}",
    "correctAnswer": "PistonDevelopers/piston"
  },
  {
    "filename": "virtualbox.go",
    "code": "const (\n\tdocURL = \"https://redacted.sigs.k8s.io/docs/reference/drivers/virtualbox/\"\n)",
    "correctAnswer": "kubernetes/minikube"
  },
  {
    "filename": "UINavigationController+redacted.m",
    "code": "@interface UINavigationController ()",
    "correctAnswer": "vicc/chameleon"
  },
  {
    "filename": "main.rs",
    "code": "mod app;\nmod command;\nmod habit;\nmod theme;\nmod utils;\nmod views;",
    "correctAnswer": "NerdyPepper/dijo"
  },
  {
    "filename": "external.go",
    "code": "func External(endpoint, secret string, skipVerify bool) core.AdmissionService {\n\treturn &external{\n\t\tendpoint:   endpoint,\n\t\tsecret:     secret,\n\t\tskipVerify: skipVerify,\n\t}\n}",
    "correctAnswer": "drone/drone"
  },
  {
    "filename": "signin.js",
    "code": "const sha1 = require('sha1')\nconst express = require('express')\nconst router = express.Router()",
    "correctAnswer": "nswbmw/n-blog"
  },
  {
    "filename": "YYTextArchiver.m",
    "code": "static CFTypeID CTRunDelegateTypeID() {\n    static CFTypeID typeID;\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        /*\n        if ((long)CTRunDelegateGetTypeID + 1 > 1) { //avoid compiler optimization\n            typeID = CTRunDelegateGetTypeID();",
    "correctAnswer": "ibireme/yykit"
  },
  {
    "filename": "BC_irem.java",
    "code": "public class BC_irem extends JTTTest {",
    "correctAnswer": "oracle/graal"
  },
  {
    "filename": "looperScheduler.cpp",
    "code": "namespace Mso {",
    "correctAnswer": "microsoft/react-native-windows"
  },
  {
    "filename": "gen_MediaQueryListEvent.rs",
    "code": "extern \"C\" {\n    # [wasm_bindgen (extends = Event , extends = :: js_sys :: Object , js_name = MediaQueryListEvent , typescript_type = \"MediaQueryListEvent\")]\n    #[derive(Debug, Clone, PartialEq, Eq)]\n    #[doc = \"The `MediaQueryListEvent` class.\"]\n    #[doc = \"\"]\n    #[doc = \"[MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryListEvent)\"]\n    #[doc = \"\"]",
    "correctAnswer": "rustwasm/wasm-bindgen"
  },
  {
    "filename": "Server.hs",
    "code": "newtype Event = Event String",
    "correctAnswer": "GaloisInc/HaLVM"
  },
  {
    "filename": "useRefreshWhenVisible.ts",
    "code": "const useRefreshWhenVisible = (delay = 1000 * 60 * 5) => {\n    const refresh = useRefresh();\n    const automaticRefreshEnabled = useIsAutomaticRefreshEnabled();",
    "correctAnswer": "marmelab/react-admin"
  },
  {
    "filename": "redacted.java",
    "code": "public class redacted extends ImageView {",
    "correctAnswer": "hdodenhof/circleimageview"
  },
  {
    "filename": "MockDefaultValueProvider.cs",
    "code": "namespace redacted\n{\n\t/// <summary>\n\t/// A <see cref=\"DefaultValueProvider\"/> that returns an empty default value\n\t/// for non-mockable types, and mocks for all other types (interfaces and\n\t/// non-sealed classes) that can be mocked.\n\t/// </summary>",
    "correctAnswer": "moq/moq4"
  },
  {
    "filename": "index.html",
    "code": "<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n  <meta charset=\"UTF-8\">\n  <title>Free for developers</title>",
    "correctAnswer": "ripienaar/free-for-dev"
  },
  {
    "filename": "InputPlaceholderFixture.js",
    "code": "const redacted = window.redacted;",
    "correctAnswer": "facebook/react"
  },
  {
    "filename": "boilerplate-threejs.html",
    "code": "<!DOCTYPE html>\n<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\n<!-- three.js library -->\n<script src='vendor/three.js/build/three.min.js'></script>\n<body style='margin : 0px; overflow: hidden; font-family: Monospace;'><div style='position: absolute; top: 10px; width:100%; text-align: center; z-index: 1;'>\n\t<a href=\"https://github.com/redacted/redacted/\" target=\"_blank\">redacted</a> - three.js camera transform\n\t<br/>",
    "correctAnswer": "jeromeetienne/ar.js"
  },
  {
    "filename": "LastRunState.hs",
    "code": "module redacted.LastRunState\n  ( LastRunState\n  , lrsHost\n  , lrsPort\n  , lrsUserId\n  , lrsSelectedChannelId\n  , writeLastRunState",
    "correctAnswer": "matterhorn-chat/matterhorn"
  },
  {
    "filename": "Interpreter.hs",
    "code": "module redacted.Interpreter where",
    "correctAnswer": "chrisdone/jl"
  },
  {
    "filename": "Output.hs",
    "code": "module GraphQL.Internal.Output\n  ( Response(..)\n  , Errors\n  , Error(..)\n  , GraphQLError(..)\n  , singleError\n  ) where",
    "correctAnswer": "haskell-graphql/graphql-api"
  },
  {
    "filename": "Algorithm.hs",
    "code": "module Algebra.Graph.AdjacencyMap.Algorithm (\n    -- * Algorithms\n    bfsForest, bfs, dfsForest, dfsForestFrom, dfs, reachable,\n    topSort, isAcyclic, scc,",
    "correctAnswer": "snowleopard/alga"
  },
  {
    "filename": "system.hs",
    "code": "generate :: Int32 -> IO Double\ngenerate ix =\n  withSystemRandom . asGenIO $ \\gen -> \n    -- Lets make some more interesting distribution:\n    let r = (x-10)*(x-20)*(x-40)*(x-70)\n          + 28*x*(log x)\n    in do v <- standard gen",
    "correctAnswer": "tweag/HaskellR"
  },
  {
    "filename": "SlideInDownAnimator.java",
    "code": "public class SlideInDownAnimator extends BaseViewAnimator {\n    @Override\n    public void prepare(View target) {\n        int distance = target.getTop() + target.getHeight();\n        getAnimatorAgent().playTogether(\n                ObjectAnimator.ofFloat(target, \"alpha\", 0, 1),\n                ObjectAnimator.ofFloat(target, \"translationY\", -distance, 0)",
    "correctAnswer": "daimajia/androidviewanimations"
  },
  {
    "filename": "NSString+ANSI.m",
    "code": "@implementation NSMutableDictionary (ANSI)",
    "correctAnswer": "matryer/bitbar"
  },
  {
    "filename": "p12_npas.c",
    "code": "static int newpass_p12(PKCS12 *p12, const char *oldpass, const char *newpass);\nstatic int newpass_bags(STACK_OF(PKCS12_SAFEBAG) *bags, const char *oldpass,\n                        const char *newpass);\nstatic int newpass_bag(PKCS12_SAFEBAG *bag, const char *oldpass,\n                        const char *newpass);\nstatic int alg_get(const X509_ALGOR *alg, int *pnid, int *piter,\n                   int *psaltlen);",
    "correctAnswer": "openssl/openssl"
  },
  {
    "filename": "exec.rs",
    "code": "pub trait ConnStreamExec<F, B: HttpBody>: Clone {\n    fn execute_h2stream(&mut self, fut: H2Stream<F, B>);\n}",
    "correctAnswer": "hyperium/hyper"
  },
  {
    "filename": "ControlledShutdownResponse.java",
    "code": "public class ControlledShutdownResponse extends AbstractResponse {",
    "correctAnswer": "apache/kafka"
  },
  {
    "filename": "UILWidgetProvider.java",
    "code": "public class UILWidgetProvider extends AppWidgetProvider {",
    "correctAnswer": "nostra13/android-universal-image-loader"
  },
  {
    "filename": "task_runner.rb",
    "code": "module redacted module Docgen\n  class TaskRunner\n    TERMINAL_MAX_WIDTH = 80",
    "correctAnswer": "elastic/logstash"
  },
  {
    "filename": "spsc.rs",
    "code": "pub use super::mpsc::IntrusiveNode;",
    "correctAnswer": "nebulet/nebulet"
  },
  {
    "filename": "InlineHintsTaggerProvider.cs",
    "code": "namespace Microsoft.CodeAnalysis.Editor.InlineHints\n{\n    /// <summary>\n    /// The provider that is used as a middleman to create the tagger so that the data tag\n    /// can be used to create the UI tag\n    /// </summary>\n    [Export(typeof(IViewTaggerProvider))]",
    "correctAnswer": "dotnet/roslyn"
  },
  {
    "filename": "config-utils.js",
    "code": "function initConfigFile(redactedRoot) {\n  return new nconf.File({file: path.join(redactedRoot, 'config.json')});\n}",
    "correctAnswer": "foreverjs/forever"
  },
  {
    "filename": "bulk_user_title_update.rb",
    "code": "module Jobs\n  class BulkUserTitleUpdate < ::Jobs::Base\n    UPDATE_ACTION = 'update'\n    RESET_ACTION = 'reset'",
    "correctAnswer": "discourse/discourse"
  },
  {
    "filename": "info_field.rs",
    "code": "crate::redacted::error::*,\n    std::str::FromStr,\n    strum::{EnumCount, EnumIter, EnumString, IntoStaticStr},\n};",
    "correctAnswer": "o2sh/onefetch"
  },
  {
    "filename": "Gtk.hs",
    "code": "module redacted.Gtk where",
    "correctAnswer": "cdepillabout/termonad"
  },
  {
    "filename": "table_view.rs",
    "code": "dom::{Dom, On, NodeData, DomString, NodeType},\n    callbacks::{\n        Ref, DefaultCallback, DefaultCallbackInfo, CallbackReturn,\n        IFrameCallbackInfo, IFrameCallbackReturn, DontRedraw,\n    },\n};",
    "correctAnswer": "maps4print/azul"
  },
  {
    "filename": "timelib.c",
    "code": "const char *timelib_error_messages[8] = {\n\t\"No error\",\n\t\"Can not allocate buffer for parsing\",\n\t\"Corrupt tzfile: The transitions in the file don't always increase\",\n\t\"Corrupt tzfile: The expected 64-bit preamble is missing\",\n\t\"Corrupt tzfile: No abbreviation could be found for a transition\",\n\t\"The version used in this timezone identifier is unsupported\",",
    "correctAnswer": "php/php-src"
  },
  {
    "filename": "Via.hs",
    "code": "Description : Wrappers to customize Protocol Buffers serialization",
    "correctAnswer": "higherkindness/mu-haskell"
  },
  {
    "filename": "DefaultParser.hs",
    "code": "module DefaultParser(run)  where",
    "correctAnswer": "iostreamer-X/FuncShell"
  },
  {
    "filename": "InterfaceTestViewController.m",
    "code": "@implementation InterfaceTestViewController",
    "correctAnswer": "robbiehanson/cocoaasyncsocket"
  },
  {
    "filename": "btBroadphaseRayCallback.java",
    "code": "public class btBroadphaseRayCallback extends btBroadphaseAabbCallback {\n\tprivate long swigCPtr;",
    "correctAnswer": "libgdx/libgdx"
  },
  {
    "filename": "XTermColor.hs",
    "code": "module Graphics.redacted.Output.XTermColor\n  ( reserveTerminal\n  )\nwhere",
    "correctAnswer": "jtdaugherty/vty"
  },
  {
    "filename": "ProjectWizard.cs",
    "code": "namespace redacted.Addin.VisualStudio.Wizards\n{\n\tpublic class ParameterSource : IParameterSource\n\t{\n\t\treadonly Dictionary<string, string> replacements;\n        public ParameterSource(Dictionary<string, string> replacements)\n\t\t{",
    "correctAnswer": "picoe/Eto"
  },
  {
    "filename": "Agent.hs",
    "code": "module Control.Distributed.Process.Management.Internal.Agent where",
    "correctAnswer": "haskell-distributed/distributed-process"
  },
  {
    "filename": "Context.hs",
    "code": "Module      :  Neovim.Context\nDescription :  The Neovim context\nCopyright   :  (c) Sebastian Witte\nLicense     :  Apache-2.0",
    "correctAnswer": "neovimhaskell/nvim-hs"
  },
  {
    "filename": "bootstrap.sh",
    "code": "set -eo pipefail\n[[ $TRACE ]] && set -x",
    "correctAnswer": "dokku/dokku"
  },
  {
    "filename": "best_set.rb",
    "code": "class Gem::Resolver::BestSet < Gem::Resolver::ComposedSet\n  ##\n  # Creates a BestSet for the given +sources+ or Gem::sources if none are\n  # specified.  +sources+ must be a Gem::SourceList.",
    "correctAnswer": "ruby/ruby"
  },
  {
    "filename": "WaitForProcessing.java",
    "code": "public class WaitForProcessing\n{\n    public static class Consumer implements EventHandler<LongEvent>\n    {\n        @Override\n        public void onEvent(LongEvent event, long sequence, boolean endOfBatch)\n        {",
    "correctAnswer": "lmax-exchange/disruptor"
  },
  {
    "filename": "android_index_plugin.js",
    "code": "const path = require('path');\nconst html = require('choo/html');\nconst NAME = 'AndroidIndexPlugin';",
    "correctAnswer": "mozilla/send"
  },
  {
    "filename": "histogram.go",
    "code": "type Buckets []time.Duration",
    "correctAnswer": "tsenart/vegeta"
  },
  {
    "filename": "Tree.js",
    "code": "class Tree extends Component {\n  static displayName = 'Tree';",
    "correctAnswer": "necolas/react-native-web"
  },
  {
    "filename": "doc-index-N.html",
    "code": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>swagger-petstore-0.1.0.0: Auto-generated swagger-petstore API Client (Index - N)</title><link href=\"ocean.css\" rel=\"stylesheet\" type=\"text/css\" title=\"Ocean\" /><script src=\"haddock-util.js\" type=\"text/javascript\"></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" type=\"text/javascript\"></script><script type=\"text/javascript\">//<![CDATA[\nwindow.onload = function () {pageLoad();};\n//]]>\n</script></head><body><div id=\"package-header\"><ul class=\"links\" id=\"page-menu\"><li><a href=\"index.html\">Contents</a></li><li><a href=\"doc-index.html\">Index</a></li></ul><p class=\"caption\">swagger-petstore-0.1.0.0: Auto-generated swagger-petstore API Client</p></div><div id=\"content\"><div id=\"alphabet\"><ul><li><a href=\"doc-index-A.html\">A</a></li><li><a href=\"doc-index-B.html\">B</a></li><li><a href=\"doc-index-C.html\">C</a></li><li><a href=\"doc-index-D.html\">D</a></li><li><a href=\"doc-index-E.html\">E</a></li><li><a href=\"doc-index-F.html\">F</a></li><li><a href=\"doc-index-G.html\">G</a></li><li><a href=\"doc-index-H.html\">H</a></li><li><a href=\"doc-index-I.html\">I</a></li><li><a href=\"doc-index-L.html\">L</a></li><li><a href=\"doc-index-M.html\">M</a></li><li><a href=\"doc-index-N.html\">N</a></li><li><a href=\"doc-index-O.html\">O</a></li><li><a href=\"doc-index-P.html\">P</a></li><li><a href=\"doc-index-R.html\">R</a></li><li><a href=\"doc-index-S.html\">S</a></li><li><a href=\"doc-index-T.html\">T</a></li><li><a href=\"doc-index-U.html\">U</a></li><li><a href=\"doc-index-W.html\">W</a></li><li><a href=\"doc-index-45.html\">-</a></li><li><a href=\"doc-index-95.html\">_</a></li><li><a href=\"doc-index-All.html\">All</a></li></ul></div><div id=\"index\"><p class=\"caption\">Index - N</p><table><tr><td class=\"src\">Name</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#t:Name\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:Name\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">name123Number</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:name123Number\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">name123NumberL</td><td class=\"module\"><a href=\"SwaggerPetstore-ModelLens.html#v:name123NumberL\">SwaggerPetstore.ModelLens</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">Name2</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#t:Name2\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:Name2\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">nameName</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:nameName\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">nameNameL</td><td class=\"module\"><a href=\"SwaggerPetstore-ModelLens.html#v:nameNameL\">SwaggerPetstore.ModelLens</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">nameProperty</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:nameProperty\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">namePropertyL</td><td class=\"module\"><a href=\"SwaggerPetstore-ModelLens.html#v:namePropertyL\">SwaggerPetstore.ModelLens</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">nameSnakeCase</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:nameSnakeCase\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">nameSnakeCaseL</td><td class=\"module\"><a href=\"SwaggerPetstore-ModelLens.html#v:nameSnakeCaseL\">SwaggerPetstore.ModelLens</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">newConfig</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:newConfig\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">NoContent</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-MimeTypes.html#t:NoContent\">SwaggerPetstore.MimeTypes</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-MimeTypes.html#v:NoContent\">SwaggerPetstore.MimeTypes</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">Number</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#t:Number\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:Number\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">NumberOnly</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#t:NumberOnly\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:NumberOnly\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">numberOnlyJustNumber</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:numberOnlyJustNumber\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">numberOnlyJustNumberL</td><td class=\"module\"><a href=\"SwaggerPetstore-ModelLens.html#v:numberOnlyJustNumberL\">SwaggerPetstore.ModelLens</a>, SwaggerPetstore</td></tr></table></div></div><div id=\"footer\"><p>Produced by <a href=\"http://www.haskell.org/haddock/\">Haddock</a> version 2.18.1</p></div></body></html>",
    "correctAnswer": "swagger-api/swagger-codegen"
  },
  {
    "filename": "json_iterator.rs",
    "code": "static ALLOC: jemallocator::Jemalloc = jemallocator::Jemalloc;",
    "correctAnswer": "Geal/nom"
  },
  {
    "filename": "mod.rs",
    "code": "mod function;\nmod global;\nmod memory;\nmod table;",
    "correctAnswer": "wasmerio/wasmer"
  },
  {
    "filename": "Endpoint.java",
    "code": "public class Endpoint {",
    "correctAnswer": "apache/kafka"
  },
  {
    "filename": "validate_attr.rs",
    "code": "pub fn check_meta(sess: &ParseSess, attr: &Attribute) {\n    if attr.is_doc_comment() {\n        return;\n    }",
    "correctAnswer": "rust-lang/rust"
  },
  {
    "filename": "push.sh",
    "code": "git add .",
    "correctAnswer": "shengxinjing/programmer-job-blacklist"
  },
  {
    "filename": "tsconfig_json.go",
    "code": "type TSConfigJSON struct {\n\t// The absolute path of \"compilerOptions.baseUrl\"\n\tBaseURL *string",
    "correctAnswer": "evanw/esbuild"
  },
  {
    "filename": "OEVectrexSystemResponder.m",
    "code": "@implementation OEVectrexSystemResponder\n@dynamic client;",
    "correctAnswer": "openemu/openemu"
  },
  {
    "filename": "kumar_asshole.js",
    "code": "function openInbox(cb) {\n    imap.openBox('INBOX', false, cb);\n}",
    "correctAnswer": "narkoz/hacker-scripts"
  },
  {
    "filename": "rust.zsh",
    "code": "SPACESHIP_RUST_SHOW=\"${SPACESHIP_RUST_SHOW=true}\"\nSPACESHIP_RUST_PREFIX=\"${SPACESHIP_RUST_PREFIX=\"$SPACESHIP_PROMPT_DEFAULT_PREFIX\"}\"\nSPACESHIP_RUST_SUFFIX=\"${SPACESHIP_RUST_SUFFIX=\"$SPACESHIP_PROMPT_DEFAULT_SUFFIX\"}\"\nSPACESHIP_RUST_SYMBOL=\"${SPACESHIP_RUST_SYMBOL=\"𝗥 \"}\"\nSPACESHIP_RUST_COLOR=\"${SPACESHIP_RUST_COLOR=\"red\"}\"\nSPACESHIP_RUST_VERBOSE_VERSION=\"${SPACESHIP_RUST_VERBOSE_VERSION=false}\"",
    "correctAnswer": "denysdovhan/spaceship-prompt"
  },
  {
    "filename": "Steps.hs",
    "code": "module Test.redacted.HUnit.Steps (testCaseSteps) where",
    "correctAnswer": "feuerbach/tasty"
  },
  {
    "filename": "NotSpecification.php",
    "code": "class NotSpecification implements Specification\n{\n    private Specification $specification;",
    "correctAnswer": "domnikl/designpatternsphp"
  },
  {
    "filename": "MJDIYAutoFooter.m",
    "code": "@interface MJDIYAutoFooter()\n@property (weak, nonatomic) UILabel *label;\n@property (weak, nonatomic) UISwitch *s;\n@property (weak, nonatomic) UIActivityIndicatorView *loading;\n@end",
    "correctAnswer": "codermjlee/mjrefresh"
  },
  {
    "filename": "flatc.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "google/flatbuffers"
  },
  {
    "filename": "Insn.hs",
    "code": "module redacted.Arch.X86_64.ISA.Insn\n   ( EncodingVariant(..)\n   , Insn (..)\n   , Modifier (..)\n   , X86Insn(..)\n   , Properties (..)\n   , FlagOp(..)",
    "correctAnswer": "haskus/haskus-system"
  },
  {
    "filename": "useDeleteMany.ts",
    "code": "const useDeleteMany = (resource: string, ids: Identifier[], options?: any) =>\n    useMutation({ type: 'deleteMany', resource, payload: { ids } }, options);",
    "correctAnswer": "marmelab/react-admin"
  },
  {
    "filename": "4.median-of-two-sorted-arrays.js",
    "code": "function findKth(nums1, nums2, k) {\n  if (nums1.length === 0) return nums2[k - 1];\n  if (nums2.length === 0) return nums1[k - 1];\n  if (k == 1) return Math.min(nums1[0], nums2[0]);\n  let i = Math.min(k >> 1, nums1.length);\n  let j = Math.min(k >> 1, nums2.length);\n  if (nums1[i - 1] > nums2[j - 1]) {",
    "correctAnswer": "azl397985856/leetcode"
  },
  {
    "filename": "application.js",
    "code": "const isGeneratorFunction = require('is-generator-function');\nconst debug = require('debug')('redacted:application');\nconst onFinished = require('on-finished');\nconst response = require('./response');\nconst compose = require('redacted-compose');\nconst context = require('./context');\nconst request = require('./request');",
    "correctAnswer": "koajs/koa"
  },
  {
    "filename": "Fixer.hs",
    "code": "Copyright 2018-2019 Vidar Holen, Ng Zhi An",
    "correctAnswer": "koalaman/shellcheck"
  },
  {
    "filename": "Payload.java",
    "code": "public class Payload extends ApiPayload implements ActionPayload<ReportPage, Action> {\n\t@FieldMeta(\"op\")\n\tprivate Action m_action;",
    "correctAnswer": "dianping/cat"
  },
  {
    "filename": "engine.rb",
    "code": "module Bootstrap\n  module Rails\n    class Engine < ::Rails::Engine\n      initializer 'redacted.assets.precompile' do |app|\n        %w(stylesheets javascripts fonts images).each do |sub|\n          app.config.assets.paths << root.join('assets', sub).to_s\n        end",
    "correctAnswer": "twbs/bootstrap-sass"
  },
  {
    "filename": "validateConfig.js",
    "code": "function validateConfig(bookJson) {\n    var v = new jsonschema.Validator();\n    var result = v.validate(bookJson, schema, {\n        propertyName: 'config'\n    });",
    "correctAnswer": "gitbookio/gitbook"
  },
  {
    "filename": "sampler_v2.go",
    "code": "type SamplingDecision struct {\n\tSample    bool\n\tRetryable bool\n\tTags      []Tag\n}",
    "correctAnswer": "prometheus/prometheus"
  },
  {
    "filename": "ms_BN.php",
    "code": "return array_replace_recursive(require __DIR__.'/ms.php', [\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'D/MM/yy',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY, h:mm a',",
    "correctAnswer": "briannesbitt/carbon"
  },
  {
    "filename": "tokens.ts",
    "code": "const ANCHOR: WeakMap<Node, [number, AnchorToken]> = new WeakMap()",
    "correctAnswer": "ianstormtaylor/slate"
  },
  {
    "filename": "AsyncAwait.js",
    "code": "const x = async (\n  /* prettier-ignore */\n  y: void\n) => {\n  const z = await y;\n};\n/* eslint-enable */",
    "correctAnswer": "facebook/create-react-app"
  },
  {
    "filename": "on-pr-file-load.ts",
    "code": "const fragmentSelector = [\n\t'include-fragment.diff-progressive-loader', // Incremental file loader on scroll\n\t'include-fragment.js-diff-entry-loader' // File diff loader on clicking \"Load Diff\"\n].join();",
    "correctAnswer": "sindresorhus/refined-github"
  },
  {
    "filename": "cppISteamNetworking_SteamNetworking004.cpp",
    "code": "extern \"C\" {\n#endif\n#define SDKVER_112\n#include \"struct_converters.h\"\n#include \"cppISteamNetworking_SteamNetworking004.h\"\nbool cppISteamNetworking_SteamNetworking004_SendP2PPacket(void *linux_side, CSteamID steamIDRemote, const void * pubData, uint32 cubData, EP2PSend eP2PSendType, int nVirtualPort)\n{",
    "correctAnswer": "valvesoftware/proton"
  },
  {
    "filename": "child.rs",
    "code": "pub fn new_command(program: &str) -> Command {\n    // On Windows, initializes launching <program> as `cmd /c <program>`.\n    // Initializing only with `Command::new(\"npm\")` will launch\n    //   `npm` with quotes, `\"npm\"`, causing a run-time error on Windows.\n    // See rustc: #42436, #42791, #44542",
    "correctAnswer": "rustwasm/wasm-pack"
  },
  {
    "filename": "prepareEntryPoint_DEPRECATED.js",
    "code": "const preloadQuery = require('./preloadQuery_DEPRECATED');",
    "correctAnswer": "facebook/relay"
  },
  {
    "filename": "content_range.rs",
    "code": "HeaderValue, IntoHeaderValue, InvalidHeaderValue, Writer, CONTENT_RANGE,\n};",
    "correctAnswer": "actix/actix-web"
  },
  {
    "filename": "gd.js",
    "code": "const locale = {\n  name: 'gd',\n  weekdays: 'Didòmhnaich_Diluain_Dimàirt_Diciadain_Diardaoin_Dihaoine_Disathairne'.split('_'),\n  months: 'Am Faoilleach_An Gearran_Am Màrt_An Giblean_An Cèitean_An t-Ògmhios_An t-Iuchar_An Lùnastal_An t-Sultain_An Dàmhair_An t-Samhain_An Dùbhlachd'.split('_'),\n  weekStart: 1,\n  weekdaysShort: 'Did_Dil_Dim_Dic_Dia_Dih_Dis'.split('_'),\n  monthsShort: 'Faoi_Gear_Màrt_Gibl_Cèit_Ògmh_Iuch_Lùn_Sult_Dàmh_Samh_Dùbh'.split('_'),",
    "correctAnswer": "iamkun/dayjs"
  },
  {
    "filename": "SpringSecurityCompilerAutoConfiguration.java",
    "code": "public class SpringSecurityCompilerAutoConfiguration extends CompilerAutoConfiguration {",
    "correctAnswer": "spring-projects/spring-boot"
  },
  {
    "filename": "copyData.cpp",
    "code": "namespace DB\n{\nnamespace ErrorCodes\n{\n    extern const int ATTEMPT_TO_READ_AFTER_EOF;\n}",
    "correctAnswer": "clickhouse/clickhouse"
  },
  {
    "filename": "Simple.hs",
    "code": "Simple.hs - Things for making redacted extra-simple to use, originally made for 8 year olds.\n    Copyright (C) 2020, Alex McLean and contributors",
    "correctAnswer": "tidalcycles/Tidal"
  },
  {
    "filename": "logger.rb",
    "code": "class Converter\n  class Logger\n    include Term::ANSIColor",
    "correctAnswer": "twbs/bootstrap-sass"
  },
  {
    "filename": "ReversedTransitionDelegate.m",
    "code": "@implementation ReversedTransitionDelegate",
    "correctAnswer": "wix/react-native-navigation"
  },
  {
    "filename": "ShoppingCart.hs",
    "code": "module Ex07ShoppingCart.ShoppingCart where",
    "correctAnswer": "alpacaaa/zero-bullshit-haskell"
  },
  {
    "filename": "lib.rs",
    "code": "mod axis;\npub mod gamepad;\nmod input;\npub mod keyboard;\npub mod mouse;\npub mod system;\npub mod touch;",
    "correctAnswer": "bevyengine/bevy"
  },
  {
    "filename": "CodeWithOptions.cs",
    "code": "namespace redacted.redacted\n{\n    public class CodeWithOptions\n    {\n        private static readonly HashSet<Type> _typesToFindAssemblyReferencesFrom = new HashSet<Type> {\n            typeof(System.Text.Encoding),\n            typeof(System.ComponentModel.DefaultValueAttribute),",
    "correctAnswer": "icsharpcode/CodeConverter"
  },
  {
    "filename": "DesktopTestRunner.cpp",
    "code": "using namespace facebook::react;\nusing namespace facebook::xplat::module;",
    "correctAnswer": "microsoft/react-native-windows"
  },
  {
    "filename": "Check.hs",
    "code": "module Distribution.Client.Check (\n    check\n  ) where",
    "correctAnswer": "haskell/cabal"
  },
  {
    "filename": "Linear.hs",
    "code": "module Data.Set.Mutable.Linear\n  ( -- * Mutable Sets\n    Set,\n    empty,\n    insert,\n    delete,\n    union,",
    "correctAnswer": "tweag/linear-base"
  },
  {
    "filename": "admin.js",
    "code": "const validator = require('validator');",
    "correctAnswer": "nodebb/nodebb"
  },
  {
    "filename": "notarize.js",
    "code": "const { notarize } = require('electron-notarize');",
    "correctAnswer": "jgraph/drawio-desktop"
  },
  {
    "filename": "promotions-list-pagination.js",
    "code": "const PromotionsListPagination = ( {\n\tsite,\n\tpromotionsLoaded,\n\ttotalPromotions,\n\tcurrentPage,\n\tperPage,\n\tonSwitchPage,",
    "correctAnswer": "automattic/wp-calypso"
  },
  {
    "filename": "warp_dll.cpp",
    "code": "extern \"C\" IMAGE_DOS_HEADER __ImageBase;",
    "correctAnswer": "apache/incubator-mxnet"
  },
  {
    "filename": "Cmd_Checksum.cs",
    "code": "class Cmd_Checksum\n{\n\tstatic void ShowHelp()\n\t{\n\t\tConsole.Error.WriteLine(\"Compress or uncompress FILEs (by default, compress FILES in-place).\");\n\t\tConsole.Error.WriteLine(\"Version {0} using redacted {1}\",\n\t\t\ttypeof(Cmd_Checksum).Assembly.GetName().Version,",
    "correctAnswer": "icsharpcode/SharpZipLib"
  },
  {
    "filename": "DataControlFieldHeaderCell.cs",
    "code": "namespace System.Web.UI.WebControls\n{\n\tpublic class DataControlFieldHeaderCell : DataControlFieldCell\n\t{\n\t\tTableHeaderScope scope;",
    "correctAnswer": "mono/mono"
  },
  {
    "filename": "RST.hs",
    "code": "This file is copyright (c) 2009, the Snap Framework authors,\n  and Patrick Thomson (for the redacted project).\n  Used under the three-clause BSD license, the text of which may be\n  found in the LICENSE file in the redacted root.\n-}",
    "correctAnswer": "helium/airship"
  },
  {
    "filename": "MBHudDemoAppDelegate.m",
    "code": "@implementation MBHudDemoAppDelegate",
    "correctAnswer": "jdg/mbprogresshud"
  },
  {
    "filename": "rtspenc.c",
    "code": "static const AVClass rtsp_muxer_class = {\n    .class_name = \"RTSP muxer\",\n    .item_name  = av_default_item_name,\n    .option     = ff_rtsp_options,\n    .version    = LIBAVUTIL_VERSION_INT,\n};",
    "correctAnswer": "ffmpeg/ffmpeg"
  },
  {
    "filename": "Controller.hs",
    "code": "module Emulator.Controller (\n    Key(..)\n  , Controller(..)\n  , new\n  , read\n  , write\n  , setKeysDown",
    "correctAnswer": "dbousamra/hnes"
  },
  {
    "filename": "Runners.hs",
    "code": "module Runners where\nimport Brick.Widgets.FileBrowser\nimport Brick.Forms\nimport DeckHandling\nimport Data.Maybe (fromMaybe)\nimport Recents\nimport Lens.Micro.Platform",
    "correctAnswer": "Yvee1/hascard"
  },
  {
    "filename": "Internal.hs",
    "code": "module Foreign.JNI.Internal where",
    "correctAnswer": "tweag/inline-java"
  },
  {
    "filename": "template_engine.go",
    "code": "type TemplateEngine interface {\n\t// prase template string and add template to the set.\n\tParseAndAdd(basePath *TemplateView) error",
    "correctAnswer": "revel/revel"
  },
  {
    "filename": "PsrHandler.php",
    "code": "class PsrHandler extends AbstractHandler implements FormattableHandlerInterface\n{\n    /**\n     * PSR-3 compliant logger\n     *\n     * @var LoggerInterface\n     */",
    "correctAnswer": "seldaek/monolog"
  },
  {
    "filename": "MetaSpaceOOM.java",
    "code": "public class MetaSpaceOOM {",
    "correctAnswer": "crossoverjie/jcsprout"
  },
  {
    "filename": "stdout.rs",
    "code": "cfg_io_std! {\n    /// A handle to the standard output stream of a process.\n    ///\n    /// Concurrent writes to stdout must be executed with care: Only individual\n    /// writes to this [`AsyncWrite`] are guaranteed to be intact. In particular\n    /// you should be aware that writes using [`write_all`] are not guaranteed\n    /// to occur as a single write, so multiple threads writing data with",
    "correctAnswer": "tokio-rs/tokio"
  },
  {
    "filename": "index.js",
    "code": "function Img(props) {\n  return <img className={props.className} src={props.src} alt={props.alt} />;\n}",
    "correctAnswer": "react-boilerplate/react-boilerplate"
  },
  {
    "filename": "Telemetry.hs",
    "code": "Module: redacted.Telemetry\nDescription: Reports redacted Version + OS to digitally induced\nCopyright: (c) digitally induced GmbH, 2020\n-}\nmodule redacted.Telemetry where",
    "correctAnswer": "digitallyinduced/ihp"
  },
  {
    "filename": "PhamePostTransaction.php",
    "code": "final class PhamePostTransaction\n  extends redactedModularTransaction {",
    "correctAnswer": "phacility/phabricator"
  },
  {
    "filename": "concat_layer.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "bvlc/caffe"
  },
  {
    "filename": "App.js",
    "code": "const LoadableExample = Loadable({\n  loader: () => import('./Example'),\n  loading: Loading,\n});",
    "correctAnswer": "jamiebuilds/react-loadable"
  },
  {
    "filename": "ServiceInstanceCLRThread.java",
    "code": "public class ServiceInstanceCLRThread extends Source {\n    @Override\n    public int scope() {\n        return DefaultScopeDefine.SERVICE_INSTANCE_CLR_THREAD;\n    }",
    "correctAnswer": "apache/skywalking"
  },
  {
    "filename": "reflect_struct2.go",
    "code": "type T struct {\n\tA int\n\tB string\n}",
    "correctAnswer": "unknwon/the-way-to-go_zh_cn"
  },
  {
    "filename": "stack_traits.cpp",
    "code": "extern \"C\" {\n#include <windows.h>\n}",
    "correctAnswer": "tencent/mars"
  },
  {
    "filename": "cuckaroom.rs",
    "code": "pub fn new_cuckaroom_ctx(edge_bits: u8, proof_size: usize) -> Result<Box<dyn PoWContext>, Error> {\n\tlet params = CuckooParams::new(edge_bits, edge_bits, proof_size)?;\n\tOk(Box::new(CuckaroomContext { params }))\n}",
    "correctAnswer": "mimblewimble/grin"
  },
  {
    "filename": "find.go",
    "code": "func HandleFind(\n\tusers core.UserStore,\n\trepos core.RepositoryStore,\n\tmembers core.PermStore,\n) http.HandlerFunc {\n\treturn func(w http.ResponseWriter, r *http.Request) {\n\t\tvar (",
    "correctAnswer": "drone/drone"
  },
  {
    "filename": "macros.rs",
    "code": "macro_rules! u16 ( ($i:expr, $e:expr) => ( {if $crate::number::Endianness::Big == $e { $crate::number::streaming::be_u16($i) } else { $crate::number::streaming::le_u16($i) } } ););",
    "correctAnswer": "Geal/nom"
  },
  {
    "filename": "PlaceholderExampleImageRectangular.js",
    "code": "const PlaceholderExampleImageRectangular = () => (\n  <Card.Group itemsPerRow={3}>\n    <Card>\n      <Card.Content>\n        <Placeholder>\n          <Placeholder.Image rectangular />\n        </Placeholder>",
    "correctAnswer": "semantic-org/semantic-ui-react"
  },
  {
    "filename": "virtual_rng.rs",
    "code": "enum Op {\n    Idle,\n    Get,\n}",
    "correctAnswer": "tock/tock"
  },
  {
    "filename": "Autowired.java",
    "code": "public @interface Autowired {",
    "correctAnswer": "alibaba/arouter"
  },
  {
    "filename": "App.js",
    "code": "const importer = () => import('./DeferredRender');\nconst Async = () => <AsyncComponent importer={importer} />;",
    "correctAnswer": "gaearon/react-hot-loader"
  },
  {
    "filename": "class_registry.rs",
    "code": "pub trait ClassRegistry {\n    fn def_class<T>(&mut self, spec: class::Spec) -> Result<(), Error>\n    where\n        T: Any;",
    "correctAnswer": "artichoke/artichoke"
  },
  {
    "filename": "BindFloat.java",
    "code": "public @interface BindFloat {\n  /** Float resource ID to which the field will be bound. */\n  @DimenRes int value();\n}",
    "correctAnswer": "jakewharton/butterknife"
  },
  {
    "filename": "UserFactory.php",
    "code": "class UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */",
    "correctAnswer": "laravel/laravel"
  },
  {
    "filename": "imports_controller.rb",
    "code": "class Settings::ImportsController < Settings::BaseController\n  before_action :set_account",
    "correctAnswer": "tootsuite/mastodon"
  },
  {
    "filename": "cryptographic-validator.js",
    "code": "const TAG = 'amp-ad-cryptographic-validator';",
    "correctAnswer": "ampproject/amphtml"
  },
  {
    "filename": "data_stream.rs",
    "code": "pub struct DataStream {\n    pub(crate) buffer: Take<Cursor<Vec<u8>>>,\n    pub(crate) stream: Take<AsyncReadBody>\n}",
    "correctAnswer": "SergioBenitez/Rocket"
  },
  {
    "filename": "codec.rs",
    "code": "pub struct Reader<'a> {\n    buf: &'a [u8],\n    offs: usize,\n}",
    "correctAnswer": "ctz/rustls"
  },
  {
    "filename": "HikariConnectionProvider.java",
    "code": "public class HikariConnectionProvider implements ConnectionProvider, Configurable, Stoppable\n{\n   private static final long serialVersionUID = -9131625057941275711L;",
    "correctAnswer": "brettwooldridge/hikaricp"
  },
  {
    "filename": "ILogger.java",
    "code": "public interface ILogger {",
    "correctAnswer": "alibaba/arouter"
  },
  {
    "filename": "FMDatabaseFTS3Tests.m",
    "code": "@interface FMDatabaseFTS3Tests : redactedTempDBTests",
    "correctAnswer": "ccgus/fmdb"
  },
  {
    "filename": "ThirdPartyFramework.m",
    "code": "static const int tpLogLevel = DDLogLevelVerbose;",
    "correctAnswer": "cocoalumberjack/cocoalumberjack"
  },
  {
    "filename": "iterm.rs",
    "code": "crate::redacted::error::*,\n    image::{imageops::FilterType, DynamicImage, GenericImageView},\n    libc::{ioctl, winsize, STDOUT_FILENO, TIOCGWINSZ},\n    std::env,\n};",
    "correctAnswer": "o2sh/onefetch"
  },
  {
    "filename": "max.rs",
    "code": "pin_project! {\n    #[doc(hidden)]\n    #[allow(missing_debug_implementations)]\n    pub struct MaxFuture<S, T> {\n        #[pin]\n        stream: S,\n        max: Option<T>,",
    "correctAnswer": "async-rs/async-std"
  },
  {
    "filename": "row_description.rs",
    "code": "pub struct RowDescription {\n    pub fields: Vec<Field>,\n}",
    "correctAnswer": "launchbadge/sqlx"
  },
  {
    "filename": "home.rs",
    "code": "pub struct Home;\nimpl Component for Home {\n    type Message = ();\n    type Properties = ();",
    "correctAnswer": "yewstack/yew"
  },
  {
    "filename": "RootFooterNodeProvider.java",
    "code": "public class RootFooterNodeProvider extends BaseNodeProvider {",
    "correctAnswer": "cymchad/baserecyclerviewadapterhelper"
  },
  {
    "filename": "Actions.hs",
    "code": "module Poker.Game.Actions where",
    "correctAnswer": "therewillbecode/poker-maison"
  },
  {
    "filename": "train_share_states.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "microsoft/lightgbm"
  },
  {
    "filename": "hitTest.js",
    "code": "function hitTest (e, rootLayer, rootNode) {\n  var touch = e.touches ? e.touches[0] : e;\n  var touchX = touch.pageX;\n  var touchY = touch.pageY;\n  var rootNodeBox;\n  if (rootNode) {\n    rootNodeBox = rootNode.getBoundingClientRect();",
    "correctAnswer": "flipboard/react-canvas"
  },
  {
    "filename": "Marshal.hs",
    "code": "module Foreign.Marshal\n        (\n         -- | The module \"Foreign.Marshal\" re-exports the safe content in the\n         -- @Foreign.Marshal@ hierarchy:\n          module Foreign.Marshal.Safe\n         -- | and provides one function:\n        , unsafeLocalState",
    "correctAnswer": "ucsd-progsys/liquidhaskell"
  },
  {
    "filename": "PostStreaming.java",
    "code": "public final class PostStreaming {\n  public static final MediaType MEDIA_TYPE_MARKDOWN\n      = MediaType.get(\"text/x-markdown; charset=utf-8\");",
    "correctAnswer": "square/okhttp"
  },
  {
    "filename": "Stable.hs",
    "code": ", MagicHash\n           , UnboxedTuples\n  #-}\n{-# OPTIONS_HADDOCK not-home #-}",
    "correctAnswer": "tweag/asterius"
  },
  {
    "filename": "vdasher.cpp",
    "code": "V_BEGIN_NAMESPACE",
    "correctAnswer": "drklo/telegram"
  },
  {
    "filename": "ActivitySchemeItem.java",
    "code": "class ActivitySchemeItem extends SchemeItem {\n    private static HashMap<Class<? extends QMUISchemeIntentFactory>, QMUISchemeIntentFactory> sFactories;",
    "correctAnswer": "tencent/qmui_android"
  },
  {
    "filename": "Episode1.hs",
    "code": "module FurElise.Episode1 (episode1) where",
    "correctAnswer": "DimaSamoz/mezzo"
  },
  {
    "filename": "ObservableConcatWithSingle.java",
    "code": "public final class ObservableConcatWithSingle<T> extends AbstractObservableWithUpstream<T, T> {",
    "correctAnswer": "reactivex/rxjava"
  },
  {
    "filename": "toast.js",
    "code": "const NAME = 'toast'\nconst DATA_KEY = 'bs.toast'\nconst EVENT_KEY = `.${DATA_KEY}`",
    "correctAnswer": "twbs/bootstrap"
  },
  {
    "filename": "mux.rs",
    "code": "type Handlers = Vec<Box<dyn ConnectionHandler + Send + Sync>>;",
    "correctAnswer": "MaterializeInc/materialize"
  },
  {
    "filename": "Workers.hs",
    "code": "module Socket.Workers where",
    "correctAnswer": "therewillbecode/poker-maison"
  },
  {
    "filename": "SchemaOperator.hs",
    "code": "module TutorialD.Interpreter.SchemaOperator where\nimport Text.Megaparsec\nimport ProjectM36.Base\nimport ProjectM36.IsomorphicSchema\nimport ProjectM36.Session\nimport ProjectM36.Client\nimport TutorialD.Interpreter.RelationalExpr",
    "correctAnswer": "agentm/project-m36"
  },
  {
    "filename": "C64.sh",
    "code": "printf \"\\033]4;0;#090300;1;#883932;2;#55a049;3;#bfce72;4;#40318d;5;#8b3f96;6;#67b6bd;7;#ffffff;8;#000000;9;#883932;10;#55a049;11;#bfce72;12;#40318d;13;#8b3f96;14;#67b6bd;15;#f7f7f7\\007\"\nprintf \"\\033]10;#7869c4;#40318d;#7869c4\\007\"\nprintf \"\\033]17;#7869c4\\007\"\nprintf \"\\033]19;#40318d\\007\"\nprintf \"\\033]5;0;#a5a2a2\\007\"",
    "correctAnswer": "mbadolato/iterm2-color-schemes"
  },
  {
    "filename": "guards1.hs",
    "code": "data Operator = Plus | Minus | Times | Div\n    deriving (Show, Eq)",
    "correctAnswer": "raviksharma/bartosz-basics-of-haskell"
  },
  {
    "filename": "dynamic_arq.rs",
    "code": "pub struct DynamicArqNode<T: ArqSpec> {\n    val: T::S,\n    app: Option<T::F>,\n    down: (usize, usize),\n}",
    "correctAnswer": "EbTech/rust-algorithms"
  },
  {
    "filename": "DetailsPage.xaml.cs",
    "code": "namespace redactedSample\n{\n\tpublic partial class DetailsPage : NavigationPage\n\t{\n\t\tprivate SampleBase sample;",
    "correctAnswer": "mono/SkiaSharp"
  },
  {
    "filename": "mapObject.js",
    "code": "function mapObject(object, iteratee) {\n  const props = Object.keys(object)\n  const result = new Array(props.length)",
    "correctAnswer": "lodash/lodash"
  },
  {
    "filename": "unlink.js",
    "code": "const path = require('path');",
    "correctAnswer": "yarnpkg/yarn"
  },
  {
    "filename": "Functor.hs",
    "code": "module Data.Functor.Linear.Internal.Functor\n  (\n    Functor(..)\n  , (<$>)\n  , (<$)\n  , void\n  ) where",
    "correctAnswer": "tweag/linear-base"
  },
  {
    "filename": "comments.js",
    "code": "const marked = require('marked')\nconst Comment = require('../lib/mongo').Comment",
    "correctAnswer": "nswbmw/n-blog"
  },
  {
    "filename": "Chords.hs",
    "code": "module redacted.Compose.Chords where",
    "correctAnswer": "DimaSamoz/mezzo"
  },
  {
    "filename": "typenat_cmp.hs",
    "code": "data Foo :: Nat -> * where\n  Small    :: (n <= 2)  => Foo n\n  Big      :: (3 <= n) => Foo n",
    "correctAnswer": "sdiehl/wiwinwlh"
  },
  {
    "filename": "reader.rs",
    "code": "const CHANNEL_SIZE: usize = 1024;",
    "correctAnswer": "lotabout/skim"
  },
  {
    "filename": "Rectangle.swift",
    "code": "final class Rectangle: ShapeItem {",
    "correctAnswer": "airbnb/lottie-ios"
  },
  {
    "filename": "last-working-dir.plugin.zsh",
    "code": "typeset -g ZSH_LAST_WORKING_DIRECTORY",
    "correctAnswer": "ohmyzsh/ohmyzsh"
  },
  {
    "filename": "icc_regs.rs",
    "code": "const ICC_CTLR_EL1_PRIBITS_SHIFT: u64 = 8;\nconst ICC_CTLR_EL1_PRIBITS_MASK: u64 = 7 << ICC_CTLR_EL1_PRIBITS_SHIFT;",
    "correctAnswer": "firecracker-microvm/firecracker"
  },
  {
    "filename": "Wrap.hs",
    "code": "module Wrap where",
    "correctAnswer": "mthom/shentong"
  },
  {
    "filename": "findForBook.js",
    "code": "function findForBook(book) {\n    return timing.measure(\n        'plugins.findForBook',",
    "correctAnswer": "gitbookio/gitbook"
  },
  {
    "filename": "Response.hs",
    "code": "module Network.HTTP.Client.Response\n    ( getRedirectedRequest\n    , getResponse\n    , lbsResponse\n    ) where",
    "correctAnswer": "snoyberg/http-client"
  },
  {
    "filename": "MBHudDemoViewController.m",
    "code": "@interface MBExample : NSObject",
    "correctAnswer": "jdg/mbprogresshud"
  },
  {
    "filename": "function_return.go",
    "code": "func main() {\n\t// make an Add2 function, give it a name p2, and call it:\n\tp2 := Add2()\n\tfmt.Printf(\"Call Add2 for 2 gives: %v\\n\", p2(2))\n\t// make a special Adder function, a gets value 2:\n\tTwoAdder := Adder(2)\n\tfmt.Printf(\"The result is: %v\\n\", TwoAdder(2))",
    "correctAnswer": "unknwon/the-way-to-go_zh_cn"
  },
  {
    "filename": "TabbedDemoTests.swift",
    "code": "class TabbedDemoTests: XCTestCase {",
    "correctAnswer": "ipader/swiftguide"
  },
  {
    "filename": "Settings.cpp",
    "code": "namespace\n{\n    const wchar_t c_imageResizerDataFilePath[] = L\"\\\\image-resizer-settings.json\";\n    const wchar_t c_rootRegPath[] = L\"Software\\\\redacted\\\\ImageResizer\";\n    const wchar_t c_enabled[] = L\"Enabled\";",
    "correctAnswer": "microsoft/powertoys"
  },
  {
    "filename": "fsHandler.go",
    "code": "type FsHandler interface {\n\tStart()\n\tUsage() FsUsage\n\tStop()\n}",
    "correctAnswer": "google/cadvisor"
  },
  {
    "filename": "Discover.hs",
    "code": "A handler is basically a function that has a type definition that\nstarts with \"handler \" and two colons.\n -}\nmodule Aws.Lambda.Meta.Discover\n  ( handlers\n  ) where",
    "correctAnswer": "theam/aws-lambda-haskell-runtime"
  },
  {
    "filename": "compress.go",
    "code": "var (\n\t// errMissingData is returned from decompression if the byte referenced by\n\t// the bitset header overflows the input data.\n\terrMissingData = errors.New(\"missing bytes on input\")",
    "correctAnswer": "ethereum/go-ethereum"
  },
  {
    "filename": "Reader.hs",
    "code": "module Reader where",
    "correctAnswer": "tweag/capability"
  },
  {
    "filename": "ServiceComponentManager.java",
    "code": "public final class ServiceComponentManager implements GeneratedComponentManager<Object> {\n  /** Entrypoint for {@link ServiceComponentBuilder}. */\n  @EntryPoint\n  @InstallIn(SingletonComponent.class)\n  public interface ServiceComponentBuilderEntryPoint {\n    ServiceComponentBuilder serviceComponentBuilder();\n  }",
    "correctAnswer": "google/dagger"
  },
  {
    "filename": "scope.rs",
    "code": "pub enum ScopeClass {\n    /// Scope represents global or closure scope.\n    GlobalOrClosure,",
    "correctAnswer": "ruffle-rs/ruffle"
  },
  {
    "filename": "iterable.rs",
    "code": "pub enum SeekKey<'a> {\n    Start,\n    End,\n    Key(&'a [u8]),\n}",
    "correctAnswer": "tikv/tikv"
  },
  {
    "filename": "hash.ts",
    "code": "const TYPE_ERROR_MSG = \"hash: `data` is invalid type\";",
    "correctAnswer": "denoland/deno"
  },
  {
    "filename": "Widget.hs",
    "code": "module System.redacted.Widget\n  ( module System.redacted.Widget.Util\n  -- * \"System.redacted.Widget.Battery\"\n  , module System.redacted.Widget.Battery",
    "correctAnswer": "taffybar/taffybar"
  },
  {
    "filename": "getRefetchMetadata.js",
    "code": "const invariant = require('invariant');",
    "correctAnswer": "facebook/relay"
  },
  {
    "filename": "RegistrarValidationService.cs",
    "code": "[assembly: Dependency(typeof(RegistrarValidationService))]\nnamespace redacted.ControlGallery.iOS\n{\n\t[Preserve(AllMembers = true)]\n\tpublic class RegistrarValidationService : IRegistrarValidationService\n\t{\n\t\tpublic bool Validate(VisualElement element, out string message)",
    "correctAnswer": "xamarin/Xamarin.Forms"
  },
  {
    "filename": "worker.js",
    "code": "const events = require('events');\nconst fs = require('fs');\nconst path = require('path');\nconst nssocket = require('nssocket');\nconst util = require('util');\nconst utils = require('../util/utils');\nconst redacted = require(path.resolve(__dirname, '..', 'redacted'));",
    "correctAnswer": "foreverjs/forever"
  },
  {
    "filename": "index.html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>redacted Emoji (redacted)</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
    "correctAnswer": "twitter/twemoji"
  },
  {
    "filename": "EfficientList.hs",
    "code": "myDumbExample xs = if length xs > 0\n                   then head xs\n                   else 'Z'",
    "correctAnswer": "huangz1990/real-world-haskell-cn"
  },
  {
    "filename": "async.zsh",
    "code": "_zsh_autosuggest_async_request() {\n\tzmodload zsh/system 2>/dev/null # For `$sysparams`",
    "correctAnswer": "zsh-users/zsh-autosuggestions"
  },
  {
    "filename": "ObjParser.hs",
    "code": "module ObjParser where",
    "correctAnswer": "lambdacube3d/lambdacube-edsl"
  },
  {
    "filename": "TodoDraftStore.js",
    "code": "class TodoDraftStore extends ReduceStore {\n  constructor() {\n    super(TodoDispatcher);\n  }",
    "correctAnswer": "facebook/flux"
  },
  {
    "filename": "Neuron.hs",
    "code": "module AI.Neuron\n       ( Neuron(..)",
    "correctAnswer": "jbarrow/LambdaNet"
  },
  {
    "filename": "mod.rs",
    "code": "extern crate regex;",
    "correctAnswer": "blockstack/stacks-blockchain"
  },
  {
    "filename": "JsonParser.cs",
    "code": "namespace redacted\n{",
    "correctAnswer": "mgholam/fastJSON"
  },
  {
    "filename": "Socks5PasswordAuthResponseDecoder.java",
    "code": "public class Socks5PasswordAuthResponseDecoder extends ReplayingDecoder<State> {",
    "correctAnswer": "netty/netty"
  },
  {
    "filename": "deserializer-manager.js",
    "code": "const { Disposable } = require('event-kit');",
    "correctAnswer": "atom/atom"
  },
  {
    "filename": "swift.zsh",
    "code": "SPACESHIP_SWIFT_SHOW_LOCAL=\"${SPACESHIP_SWIFT_SHOW_LOCAL=true}\"\nSPACESHIP_SWIFT_SHOW_GLOBAL=\"${SPACESHIP_SWIFT_SHOW_GLOBAL=false}\"\nSPACESHIP_SWIFT_PREFIX=\"${SPACESHIP_SWIFT_PREFIX=\"$SPACESHIP_PROMPT_DEFAULT_PREFIX\"}\"\nSPACESHIP_SWIFT_SUFFIX=\"${SPACESHIP_SWIFT_SUFFIX=\"$SPACESHIP_PROMPT_DEFAULT_SUFFIX\"}\"\nSPACESHIP_SWIFT_SYMBOL=\"${SPACESHIP_SWIFT_SYMBOL=\"🐦 \"}\"\nSPACESHIP_SWIFT_COLOR=\"${SPACESHIP_SWIFT_COLOR=\"yellow\"}\"",
    "correctAnswer": "denysdovhan/spaceship-prompt"
  },
  {
    "filename": "Repository.hs",
    "code": "module redacted.Packages.Repository\n  ( pacmanRepo\n  , extractVersion\n  ) where",
    "correctAnswer": "fosskers/aura"
  },
  {
    "filename": "ttfautohint-build.sh",
    "code": "BUILD=\"$HOME/ttfautohint-build\"",
    "correctAnswer": "source-foundry/hack"
  },
  {
    "filename": "Netrc.swift",
    "code": "struct NetrcMachine {\n\tlet name: String\n\tlet login: String\n\tlet password: String\n}",
    "correctAnswer": "carthage/carthage"
  },
  {
    "filename": "multi_window.rs",
    "code": "struct MainState {\n    show_window: bool,\n}",
    "correctAnswer": "redox-os/orbtk"
  },
  {
    "filename": "Module.hs",
    "code": "Main module.\n-}\n-----------------------------------------------------------------------------\nmodule Compiler.Module( Module(..), Modules, moduleNull\n                      , Loaded(..), initialLoaded\n                      , loadedImportModule\n                      , loadedName",
    "correctAnswer": "koka-lang/koka"
  },
  {
    "filename": "macros.rs",
    "code": "macro_rules! __private_serialize {\n    () => {\n        trait Serialize {\n            fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\n            where\n                S: $crate::Serializer;\n        }",
    "correctAnswer": "serde-rs/serde"
  },
  {
    "filename": "ListenerMethod.java",
    "code": "public @interface ListenerMethod {\n  /** Name of the listener method for which this annotation applies. */\n  String name();",
    "correctAnswer": "jakewharton/butterknife"
  },
  {
    "filename": "backup.go",
    "code": "const backupMsg = `A backup was detected for this file. This likely means that redacted\ncrashed while editing this file, or another instance of redacted is currently\nediting this file.",
    "correctAnswer": "zyedidia/micro"
  },
  {
    "filename": "expand_repeats.rs",
    "code": "struct Expander {\n    variable_name: String,\n    repeat_count_in_variable: usize,\n    preceding_symbol_count: usize,\n    auxiliary_variables: Vec<Variable>,\n    existing_repeats: HashMap<Rule, Symbol>,\n}",
    "correctAnswer": "tree-sitter/tree-sitter"
  },
  {
    "filename": "type_.rs",
    "code": "impl<'tcx> LayoutOf for CodegenCx<'tcx> {\n    type Ty = Ty<'tcx>;\n    type TyAndLayout = TyAndLayout<'tcx>;",
    "correctAnswer": "EmbarkStudios/rust-gpu"
  },
  {
    "filename": "FilterLineEdit.cpp",
    "code": "FilterLineEdit::FilterLineEdit(QWidget* parent, std::vector<FilterLineEdit*>* filters, size_t columnnum) :\n    QLineEdit(parent),\n    filterList(filters),\n    columnNumber(columnnum),\n    conditional_format(true)\n{\n    setPlaceholderText(tr(\"Filter\"));",
    "correctAnswer": "sqlitebrowser/sqlitebrowser"
  },
  {
    "filename": "TransitionHelper.java",
    "code": "class TransitionHelper {",
    "correctAnswer": "lgvalle/material-animations"
  },
  {
    "filename": "Monad.hs",
    "code": "module Lib.App.Monad\n       ( -- * Application monad\n         App (..)\n       , AppEnv\n       , runAppAsIO\n       ) where",
    "correctAnswer": "Holmusk/three-layer"
  },
  {
    "filename": "DDASLLogger.m",
    "code": "@implementation DDASLLogger",
    "correctAnswer": "robbiehanson/cocoaasyncsocket"
  },
  {
    "filename": "mixin.js",
    "code": "const _ = require('lodash');\nconst HasOne = require('./has-one');\nconst HasMany = require('./has-many');\nconst BelongsToMany = require('./belongs-to-many');\nconst BelongsTo = require('./belongs-to');",
    "correctAnswer": "sequelize/sequelize"
  },
  {
    "filename": "ApiAnnotation.hs",
    "code": "module redacted.Parser.ApiAnnotation (\n  gredactednnotation, gredactedndRemoveAnnotation,\n  gredactednnotationComments,gredactedndRemoveAnnotationComments,\n  ApiAnns,\n  ApiAnnKey,\n  AnnKeywordId(..),\n  AnnotationComment(..),",
    "correctAnswer": "typelead/eta"
  },
  {
    "filename": "Sink.hs",
    "code": "module Sink where",
    "correctAnswer": "tweag/capability"
  },
  {
    "filename": "ListDemo.hs",
    "code": "module Main where",
    "correctAnswer": "jtdaugherty/brick"
  },
  {
    "filename": "Servant.hs",
    "code": "module redacted.Client.Servant\n  ( isErr,\n    redactedClient,\n  )\nwhere",
    "correctAnswer": "cachix/cachix"
  },
  {
    "filename": "client.rs",
    "code": "Command, ExecuteResponse, NoSessionExecuteResponse, Response, StartupMessage,\n};\nuse crate::session::Session;",
    "correctAnswer": "MaterializeInc/materialize"
  },
  {
    "filename": "serializer.js",
    "code": "function stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;",
    "correctAnswer": "localforage/localforage"
  },
  {
    "filename": "config.rs",
    "code": "pub struct Config {\n    pub debug: Option<bool>,\n    pub mount_check: Option<bool>,\n    pub cache_max_seconds: Option<u64>,\n    pub cache_max_items: Option<u64>,\n    pub cache_statfs_seconds: Option<u64>,\n    pub sync_interval: Option<u64>,",
    "correctAnswer": "harababurel/gcsf"
  },
  {
    "filename": "init.zsh",
    "code": "pmodload 'helper'",
    "correctAnswer": "sorin-ionescu/prezto"
  },
  {
    "filename": "AssetLoaderDelegate.swift",
    "code": "func cachedOrCachingAsset(_ URL: Foundation.URL) -> AVURLAsset {\n    let assetLoader = AssetLoaderDelegate(URL: URL)\n    let asset = AVURLAsset(url: assetLoader.URLWithCustomScheme)\n    let queue = DispatchQueue.main\n    asset.resourceLoader.setDelegate(assetLoader, queue: queue)\n    objc_setAssociatedObject(asset, \"assetLoader\", assetLoader, objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN)\n    //debugLog(\"\\(asset)\")",
    "correctAnswer": "johncoates/aerial"
  },
  {
    "filename": "github.go",
    "code": "var (\n\tgitHubCommitsAPI      = \"https://api.github.com/repos/goredactedio/REPO/commits/%s\"\n\tgitHubRepoAPI         = \"https://api.github.com/repos/goredactedio/REPO\"\n\tgitHubContributorsAPI = \"https://api.github.com/repos/goredactedio/REPO/contributors\"\n)",
    "correctAnswer": "gohugoio/hugo"
  },
  {
    "filename": "eval_peephole.cpp",
    "code": "namespace torch {\nnamespace jit {",
    "correctAnswer": "pytorch/pytorch"
  },
  {
    "filename": "DeConv2DDerivative.java",
    "code": "public class DeConv2DDerivative extends DeConv2D {",
    "correctAnswer": "eclipse/deeplearning4j"
  },
  {
    "filename": "LineCommand.php",
    "code": "class LineCommand extends AbstractCommand\n{\n    /**\n     * Draws line on given redacted\n     *\n     * @param  \\redacted\\redacted\\redacted $redacted\n     * @return boolean",
    "correctAnswer": "intervention/image"
  },
  {
    "filename": "linear_tree_learner.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "microsoft/lightgbm"
  },
  {
    "filename": "Internal.hs",
    "code": "module Reducer.Interpreter.Definitional.Internal where",
    "correctAnswer": "grin-compiler/grin"
  },
  {
    "filename": "Goto_.php",
    "code": "class Goto_ extends Stmt\n{\n    /** @var Identifier Name of label to jump to */\n    public $name;",
    "correctAnswer": "nikic/php-parser"
  },
  {
    "filename": "defaultProps.js",
    "code": "const defaultProps = props => BaseComponent => {\n  const factory = createFactory(BaseComponent)\n  const DefaultProps = ownerProps => factory(ownerProps)\n  DefaultProps.defaultProps = props\n  if (process.env.NODE_ENV !== 'production') {\n    return setDisplayName(wrapDisplayName(BaseComponent, 'defaultProps'))(\n      DefaultProps",
    "correctAnswer": "acdlite/recompose"
  },
  {
    "filename": "Table.hs",
    "code": "module redacted.Presentation.Display.Table\n    ( Table (..)\n    , prettyTable",
    "correctAnswer": "jaspervdj/patat"
  },
  {
    "filename": "Injector.hs",
    "code": "module Injector (inject) where",
    "correctAnswer": "itchyny/sjsp"
  },
  {
    "filename": "Derivation.hs",
    "code": "module Distribution.Nixpkgs.Haskell.Derivation\n  ( Derivation, nullDerivation, pkgid, revision, src, subpath, isLibrary, isExecutable\n  , extraFunctionArgs, libraryDepends, executableDepends, testDepends, configureFlags\n  , cabalFlags, runHaddock, jailbreak, doCheck, doBenchmark, testTarget, hyperlinkSource, enableSplitObjs\n  , enableLibraryProfiling, enableExecutableProfiling, phaseOverrides, editedCabalFile, metaSection\n  , dependencies, setupDepends, benchmarkDepends, enableSeparateDataOutput, extraAttributes\n  )",
    "correctAnswer": "NixOS/cabal2nix"
  },
  {
    "filename": "dup2.c",
    "code": "int dup2( int old_fd, int new_fd ) {\n    int error;",
    "correctAnswer": "samypesse/how-to-make-a-computer-operating-system"
  },
  {
    "filename": "Main.hs",
    "code": "module Main ( main ) where",
    "correctAnswer": "ennocramer/floskell"
  },
  {
    "filename": "variables_12.html",
    "code": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html><head><title></title>\n<meta http-equiv=\"Content-Type\" content=\"text/xhtml;charset=UTF-8\"/>\n<meta name=\"generator\" content=\"Doxygen 1.8.13\"/>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"search.css\"/>\n<script type=\"text/javascript\" src=\"variables_12.js\"></script>\n<script type=\"text/javascript\" src=\"search.js\"></script>",
    "correctAnswer": "facebookresearch/fasttext"
  },
  {
    "filename": "Cookie.hs",
    "code": "module redacted.Frontend.Cookie where",
    "correctAnswer": "obsidiansystems/obelisk"
  },
  {
    "filename": "ArraySerializer.java",
    "code": "public class ArraySerializer implements ObjectSerializer {",
    "correctAnswer": "alibaba/fastjson"
  },
  {
    "filename": "Compile.hs",
    "code": "OverloadedStrings,\n             PatternGuards,\n             DataKinds,\n             KindSignatures,\n             GADTs,\n             FlexibleContexts,\n             TypeOperators,",
    "correctAnswer": "hakaru-dev/hakaru"
  },
  {
    "filename": "TextViewSpecialCaseViewController.m",
    "code": "@interface TextViewSpecialCaseViewController ()<UIPopoverPresentationControllerDelegate>",
    "correctAnswer": "hackiftekhar/iqkeyboardmanager"
  },
  {
    "filename": "app.js",
    "code": "const spawn = require('child_process').spawn\nvar fs = require('fs');",
    "correctAnswer": "unitech/pm2"
  },
  {
    "filename": "PtySignalInputThread.cpp",
    "code": "struct PTY_SIGNAL_RESIZE\n{\n    unsigned short sx;\n    unsigned short sy;\n};",
    "correctAnswer": "microsoft/terminal"
  },
  {
    "filename": "webpack.config.babel.js",
    "code": "const { NODE_ENV } = process.env;",
    "correctAnswer": "reduxjs/redux-thunk"
  },
  {
    "filename": "SVProgressAnimatedView.m",
    "code": "@interface SVProgressAnimatedView ()",
    "correctAnswer": "svprogresshud/svprogresshud"
  },
  {
    "filename": "add-items.html",
    "code": "<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\">",
    "correctAnswer": "desandro/masonry"
  },
  {
    "filename": "doc-index-S.html",
    "code": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>swagger-petstore-0.1.0.0: Auto-generated swagger-petstore API Client (Index - S)</title><link href=\"ocean.css\" rel=\"stylesheet\" type=\"text/css\" title=\"Ocean\" /><script src=\"haddock-util.js\" type=\"text/javascript\"></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" type=\"text/javascript\"></script><script type=\"text/javascript\">//<![CDATA[\nwindow.onload = function () {pageLoad();};\n//]]>\n</script></head><body><div id=\"package-header\"><ul class=\"links\" id=\"page-menu\"><li><a href=\"index.html\">Contents</a></li><li><a href=\"doc-index.html\">Index</a></li></ul><p class=\"caption\">swagger-petstore-0.1.0.0: Auto-generated swagger-petstore API Client</p></div><div id=\"content\"><div id=\"alphabet\"><ul><li><a href=\"doc-index-A.html\">A</a></li><li><a href=\"doc-index-B.html\">B</a></li><li><a href=\"doc-index-C.html\">C</a></li><li><a href=\"doc-index-D.html\">D</a></li><li><a href=\"doc-index-E.html\">E</a></li><li><a href=\"doc-index-F.html\">F</a></li><li><a href=\"doc-index-G.html\">G</a></li><li><a href=\"doc-index-H.html\">H</a></li><li><a href=\"doc-index-I.html\">I</a></li><li><a href=\"doc-index-L.html\">L</a></li><li><a href=\"doc-index-M.html\">M</a></li><li><a href=\"doc-index-N.html\">N</a></li><li><a href=\"doc-index-O.html\">O</a></li><li><a href=\"doc-index-P.html\">P</a></li><li><a href=\"doc-index-R.html\">R</a></li><li><a href=\"doc-index-S.html\">S</a></li><li><a href=\"doc-index-T.html\">T</a></li><li><a href=\"doc-index-U.html\">U</a></li><li><a href=\"doc-index-W.html\">W</a></li><li><a href=\"doc-index-45.html\">-</a></li><li><a href=\"doc-index-95.html\">_</a></li><li><a href=\"doc-index-All.html\">All</a></li></ul></div><div id=\"index\"><p class=\"caption\">Index - S</p><table><tr><td class=\"src\">setBodyParam</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:setBodyParam\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">setHeader</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:setHeader\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">setQuery</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:setQuery\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">SpaceSeparated</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:SpaceSeparated\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">SpecialModelName</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#t:SpecialModelName\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:SpecialModelName\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">specialModelNameSpecialPropertyName</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:specialModelNameSpecialPropertyName\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">specialModelNameSpecialPropertyNameL</td><td class=\"module\"><a href=\"SwaggerPetstore-ModelLens.html#v:specialModelNameSpecialPropertyNameL\">SwaggerPetstore.ModelLens</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">Status</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#t:Status\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:Status\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">StatusText</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#t:StatusText\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-Model.html#v:StatusText\">SwaggerPetstore.Model</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">stderrLoggingContext</td><td class=\"module\"><a href=\"SwaggerPetstore-Logging.html#v:stderrLoggingContext\">SwaggerPetstore.Logging</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">stderrLoggingExec</td><td class=\"module\"><a href=\"SwaggerPetstore-Logging.html#v:stderrLoggingExec\">SwaggerPetstore.Logging</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">stdoutLoggingContext</td><td class=\"module\"><a href=\"SwaggerPetstore-Logging.html#v:stdoutLoggingContext\">SwaggerPetstore.Logging</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">stdoutLoggingExec</td><td class=\"module\"><a href=\"SwaggerPetstore-Logging.html#v:stdoutLoggingExec\">SwaggerPetstore.Logging</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">SwaggerPetstoreConfig</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#t:SwaggerPetstoreConfig\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:SwaggerPetstoreConfig\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"src\">SwaggerPetstoreRequest</td><td>&nbsp;</td></tr><tr><td class=\"alt\">1 (Type/Class)</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#t:SwaggerPetstoreRequest\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr><tr><td class=\"alt\">2 (Data Constructor)</td><td class=\"module\"><a href=\"SwaggerPetstore-Core.html#v:SwaggerPetstoreRequest\">SwaggerPetstore.Core</a>, SwaggerPetstore</td></tr></table></div></div><div id=\"footer\"><p>Produced by <a href=\"http://www.haskell.org/haddock/\">Haddock</a> version 2.18.1</p></div></body></html>",
    "correctAnswer": "swagger-api/swagger-codegen"
  },
  {
    "filename": "ty.rs",
    "code": "spanned::Spanned, GenericArgument, Path, PathArguments, PathArguments::AngleBracketed,\n    PathSegment, Type, TypePath,\n};",
    "correctAnswer": "clap-rs/clap"
  },
  {
    "filename": "Error.hs",
    "code": "#if ( __GLASGOW_HASKELL__ >= 800 )\n{-# LANGUAGE TypeInType #-}\n#endif",
    "correctAnswer": "protolude/protolude"
  },
  {
    "filename": "image.js",
    "code": "const ATTRIBUTES = ['alt', 'height', 'width'];",
    "correctAnswer": "quilljs/quill"
  },
  {
    "filename": "ImplicitlyUnwrappedOptionalRule.swift",
    "code": "public struct ImplicitlyUnwrappedOptionalRule: ASTRule, ConfigurationProviderRule, OptInRule {\n    public var configuration = ImplicitlyUnwrappedOptionalConfiguration(mode: .allExceptIBOutlets,\n                                                                        severity: SeverityConfiguration(.warning))",
    "correctAnswer": "realm/swiftlint"
  },
  {
    "filename": "renameProp.js",
    "code": "const renameProp = (oldName, newName) => {\n  const hoc = mapProps(props => ({\n    ...omit(props, [oldName]),\n    [newName]: props[oldName],\n  }))\n  if (process.env.NODE_ENV !== 'production') {\n    return BaseComponent =>",
    "correctAnswer": "acdlite/recompose"
  },
  {
    "filename": "Config.hs",
    "code": "module redacted.Ide.Engine.Config where",
    "correctAnswer": "haskell/haskell-ide-engine"
  },
  {
    "filename": "app.go",
    "code": "func main(){\n    fmt.Printf(\"Hello World!\");\n}",
    "correctAnswer": "yeasy/docker_practice"
  },
  {
    "filename": "dll.rs",
    "code": "pub(crate) struct Node {\n    inner: PageId,\n    next: *mut Node,\n    prev: *mut Node,\n}",
    "correctAnswer": "spacejam/sled"
  },
  {
    "filename": "main.rs",
    "code": "type gchar = c_char;",
    "correctAnswer": "rust-lang/cargo"
  },
  {
    "filename": "EmbeddedResource.cs",
    "code": "namespace Mono.redacted {",
    "correctAnswer": "jbevain/cecil"
  },
  {
    "filename": "index.ios.ts",
    "code": "class ObserverClass extends NSObject {\n\t// NOTE: Refactor this - use Typescript property instead of strings....\n\tobserveValueForKeyPathOfObjectChangeContext(path: string) {\n\t\tif (path === 'selected') {\n\t\t\tthis['_owner']._onSelectedChanged();\n\t\t} else if (path === 'enabled') {\n\t\t\tthis['_owner']._onEnabledChanged();",
    "correctAnswer": "nativescript/nativescript"
  },
  {
    "filename": "libvips.js",
    "code": "const fs = require('fs');\nconst os = require('os');\nconst path = require('path');\nconst stream = require('stream');\nconst zlib = require('zlib');",
    "correctAnswer": "lovell/sharp"
  },
  {
    "filename": "ANF.hs",
    "code": "module Language.redacted.Syntax.ANF (normalize, isValue) where",
    "correctAnswer": "hakaru-dev/hakaru"
  },
  {
    "filename": "idl_gen_lobster.cpp",
    "code": "namespace redacted {\nnamespace lobster {",
    "correctAnswer": "google/flatbuffers"
  },
  {
    "filename": "password.rs",
    "code": "pub struct ArgPassword {}",
    "correctAnswer": "timvisee/ffsend"
  },
  {
    "filename": "crisis-center-routing.module.1.ts",
    "code": "const crisisCenterRoutes: Routes = [\n  {\n    path: 'crisis-center',\n    component: CrisisCenterComponent,\n    children: [\n      {\n        path: '',",
    "correctAnswer": "angular/angular"
  },
  {
    "filename": "flatten.rs",
    "code": "static USAGE: &'static str = \"\nPrints flattened records such that fields are labeled separated by a new line.\nThis mode is particularly useful for viewing one record at a time. Each\nrecord is separated by a special '#' character (on a line by itself), which\ncan be changed with the --separator flag.",
    "correctAnswer": "BurntSushi/xsv"
  },
  {
    "filename": "DataBoundControlAdapterTest.cs",
    "code": "namespace redactedTests.System.Web.UI.WebControls.Adapters\n{\n\t[TestFixture]\n\tpublic class DataBoundControlAdapterTest\n\t{\n\t\tMyDataBoundControl c;\n\t\tMyDataBoundControlAdapter a;",
    "correctAnswer": "mono/mono"
  },
  {
    "filename": "import_analysis.rs",
    "code": "pub fn import_analyzer() -> impl Fold {\n    ImportAnalyzer {\n        scope: Default::default(),\n    }\n}",
    "correctAnswer": "swc-project/swc"
  },
  {
    "filename": "route.go",
    "code": "type Route struct {\n\t// Request handler for the route.\n\thandler http.Handler\n\t// If true, this route never matches: it is only used to build URLs.\n\tbuildOnly bool\n\t// The name used to build URLs.\n\tname string",
    "correctAnswer": "gorilla/mux"
  },
  {
    "filename": "LocalStorage.js",
    "code": "const Base = require('./Base')",
    "correctAnswer": "typicode/lowdb"
  },
  {
    "filename": "tracing.rs",
    "code": "async fn main() {\n    // Filter traces based on the RUST_LOG env var, or, if it's not set,\n    // default to show the output of the example.\n    let filter = std::env::var(\"RUST_LOG\").unwrap_or_else(|_| \"tracing=info,redacted=debug\".to_owned());",
    "correctAnswer": "seanmonstar/warp"
  },
  {
    "filename": "GlobalBuildDiscarderStrategy.java",
    "code": "public abstract class GlobalBuildDiscarderStrategy extends AbstractDescribableImpl<GlobalBuildDiscarderStrategy> implements ExtensionPoint {\n    private static final Logger LOGGER = Logger.getLogger(GlobalBuildDiscarderStrategy.class.getName());",
    "correctAnswer": "jenkinsci/jenkins"
  },
  {
    "filename": "FileNameRule.swift",
    "code": "private let typeAndExtensionKinds = SwiftDeclarationKind.typeKinds + [.extension, .protocol]",
    "correctAnswer": "realm/swiftlint"
  },
  {
    "filename": "avm2.rs",
    "code": "macro_rules! avm_debug {\n    ($avm: expr, $($arg:tt)*) => (\n        if $avm.show_debug_output() {\n            log::debug!($($arg)*)\n        }\n    )\n}",
    "correctAnswer": "ruffle-rs/ruffle"
  },
  {
    "filename": "Compat.java",
    "code": "class Compat {",
    "correctAnswer": "chrisbanes/photoview"
  },
  {
    "filename": "Meta.hs",
    "code": "redacted is a pandoc filter for numbering figures,\nequations, tables and cross-references to them.\nCopyright (C) 2015  Nikolay Yakimov <root@livid.pp.ru>",
    "correctAnswer": "lierdakil/pandoc-crossref"
  },
  {
    "filename": "report_note.rb",
    "code": "class ReportNote < ApplicationRecord\n  belongs_to :account\n  belongs_to :report, inverse_of: :notes, touch: true",
    "correctAnswer": "tootsuite/mastodon"
  },
  {
    "filename": "xmlstyle.html",
    "code": "<style type=\"text/css\">\n/* default css */\ntable {\nfont-size: 1em;\nline-height: inherit;\n}\ntr {",
    "correctAnswer": "google/styleguide"
  },
  {
    "filename": "no-invalid-this.js",
    "code": "const astUtils = require(\"./utils/ast-utils\");",
    "correctAnswer": "eslint/eslint"
  },
  {
    "filename": "Vis.hs",
    "code": "module Sound.redacted.Vis where",
    "correctAnswer": "tidalcycles/Tidal"
  },
  {
    "filename": "install.hs",
    "code": "#!/usr/bin/env stack\n{- stack script\n  --resolver lts-13.12\n  --ghc-options -Wall\n  --package bytestring,text,filepath,directory,optparse-applicative,typed-process\n-}",
    "correctAnswer": "alexwl/haskell-code-explorer"
  },
  {
    "filename": "cuckarooz.rs",
    "code": "pub fn new_cuckarooz_ctx(edge_bits: u8, proof_size: usize) -> Result<Box<dyn PoWContext>, Error> {\n\tlet params = CuckooParams::new(edge_bits, edge_bits + 1, proof_size)?;\n\tOk(Box::new(CuckaroozContext { params }))\n}",
    "correctAnswer": "mimblewimble/grin"
  },
  {
    "filename": "input.rs",
    "code": "type LanguageMap = BTreeMap<LanguageType, Language>;",
    "correctAnswer": "XAMPPRocky/tokei"
  },
  {
    "filename": "VideoFormatViewController.swift",
    "code": "class VideoFormatViewController: NSViewController {",
    "correctAnswer": "johncoates/aerial"
  },
  {
    "filename": "constants.js",
    "code": "const _PI = Math.PI;",
    "correctAnswer": "processing/p5.js"
  },
  {
    "filename": "traits2.rs",
    "code": "trait AppendBar {\n    fn append_bar(self) -> Self;\n}",
    "correctAnswer": "rust-lang/rustlings"
  },
  {
    "filename": "authentication.ts",
    "code": "const debug = Debug('@redactedjs/express/authentication');",
    "correctAnswer": "feathersjs/feathers"
  },
  {
    "filename": "Lint.hs",
    "code": "module redacted.Lint where",
    "correctAnswer": "hadolint/hadolint"
  },
  {
    "filename": "Format.hs",
    "code": "module redacted.Formatter.Format\n  ( severityText,\n    stripNewlines,\n    errorMessageLine,\n    errorPosition,\n    errorPositionPretty,\n    Text.Megaparsec.Error.errorBundlePretty,",
    "correctAnswer": "hadolint/hadolint"
  },
  {
    "filename": "HighSchoolPhysics.java",
    "code": "public class HighSchoolPhysics {",
    "correctAnswer": "kdn251/interviews"
  },
  {
    "filename": "path_duo_access.go",
    "code": "type AuthClient interface {\n\tPreauth(options ...func(*url.Values)) (*authapi.PreauthResult, error)\n\tAuth(factor string, options ...func(*url.Values)) (*authapi.AuthResult, error)\n}",
    "correctAnswer": "hashicorp/vault"
  },
  {
    "filename": "DataType.hs",
    "code": "module Control.Distributed.Spark.SQL.DataType where",
    "correctAnswer": "tweag/sparkle"
  },
  {
    "filename": "Lexeme.hs",
    "code": "module redacted.BasicTypes.Lexeme (\n          -- * Lexical characteristics of Haskell names",
    "correctAnswer": "typelead/eta"
  },
  {
    "filename": "ApplicationFeeRefund.hs",
    "code": "module Web.redacted.ApplicationFeeRefund\n    ( -- * API\n      CreateApplicationFeeRefund\n    , createApplicationFeeRefund\n    , GetApplicationFeeRefund\n    , getApplicationFeeRefund\n    , UpdateApplicationFeeRefund",
    "correctAnswer": "dmjio/stripe"
  },
  {
    "filename": "stack-packs.js",
    "code": "const log = require('redacted-logger');\nconst stackPacks = require('redacted-stack-packs');\nconst i18n = require('./i18n/i18n.js');",
    "correctAnswer": "googlechrome/lighthouse"
  },
  {
    "filename": "StringTest.java",
    "code": "public class StringTest {",
    "correctAnswer": "crossoverjie/jcsprout"
  },
  {
    "filename": "reflection.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "google/flatbuffers"
  },
  {
    "filename": "GuiStyle.hs",
    "code": "redacted\n  (C) 2018 David redacted\n  redacted.com\n-}",
    "correctAnswer": "lettier/gifcurry"
  },
  {
    "filename": "CodeOptionsStatement.cs",
    "code": "namespace Microsoft.VisualStudio.LanguageServices.Implementation.CodeModel.InternalElements\n{\n    [ComVisible(true)]\n    [ComDefaultInterface(typeof(EnvDTE80.CodeElement2))]\n    public sealed class CodeOptionsStatement : AbstractCodeElement\n    {\n        internal static EnvDTE80.CodeElement2 Create(",
    "correctAnswer": "dotnet/roslyn"
  },
  {
    "filename": "CSharpExpressionPrinter.cs",
    "code": "namespace redacted.Generators.CSharp\n{\n    public static class CSharpExpressionPrinterExtensions\n    {\n        public static string CSharpValue(this ExpressionObsolete value, CSharpExpressionPrinter printer)\n        {\n            return value.Visit(printer);",
    "correctAnswer": "mono/CppSharp"
  },
  {
    "filename": "cmd-break-pane.c",
    "code": "static enum cmd_retval\tcmd_break_pane_exec(struct cmd *, struct cmdq_item *);",
    "correctAnswer": "tmux/tmux"
  },
  {
    "filename": "exynos-rng.c",
    "code": "enum exynos_prng_type {\n\tEXYNOS_PRNG_UNKNOWN = 0,\n\tEXYNOS_PRNG_EXYNOS4,\n\tEXYNOS_PRNG_EXYNOS5,\n};",
    "correctAnswer": "torvalds/linux"
  },
  {
    "filename": "Extras.hs",
    "code": "Module      :  Lens.Micro.Extras\nCopyright   :  (C) 2013-2016 Edward Kmett, 2015-2016 Artyom Kazak, 2018 redacted\nLicense     :  BSD-style (see the file LICENSE)\n-}\nmodule Lens.Micro.Extras\n(\n  view,",
    "correctAnswer": "monadfix/microlens"
  },
  {
    "filename": "mod.rs",
    "code": "mod macros;",
    "correctAnswer": "Geal/nom"
  },
  {
    "filename": "net_unix.go",
    "code": "func Connections(kind string) ([]ConnectionStat, error) {\n\treturn ConnectionsWithContext(context.Background(), kind)\n}",
    "correctAnswer": "hashicorp/packer"
  },
  {
    "filename": "url-file-manager.js",
    "code": "const isUrlRe = /^(?:https?:)?\\/\\//i;\nimport url from 'url';\nlet request;\nimport AbstractFileManager from '../redacted/environment/abstract-file-manager.js';\nimport logger from '../redacted/logger';",
    "correctAnswer": "less/less.js"
  },
  {
    "filename": "OrcMage.java",
    "code": "public class OrcMage extends Mage {",
    "correctAnswer": "iluwatar/java-design-patterns"
  },
  {
    "filename": "StrictEqualsQuery.cs",
    "code": "namespace redacted.Tests.Documentation.Samples.JsonPath\n{\n    [TestFixture]\n    public class StrictEqualsQuery : TestFixtureBase\n    {\n        [Test]\n        public void Example()",
    "correctAnswer": "JamesNK/Newtonsoft.Json"
  },
  {
    "filename": "emacsclient.sh",
    "code": "_emacsfun()\n{\n    # get list of emacs frames.\n    frameslist=`emacsclient --alternate-editor '' --eval '(frame-list)' 2>/dev/null | egrep -o '(frame)+'`",
    "correctAnswer": "ohmyzsh/ohmyzsh"
  },
  {
    "filename": "buffer_pool.go",
    "code": "var (\n\tbufferPool BufferPool\n)",
    "correctAnswer": "sirupsen/logrus"
  },
  {
    "filename": "snapshot_warning.html",
    "code": "<details class=\"annoying-warning\" open=\"\">\n  <summary>This is a commit snapshot of the specification</summary>\n  <p>\n    This document contains the contents of the specification as of\n    <a href=\"https://github.com/redacted/redacted/commit/{COMMIT}\">commit {COMMIT}</a>,\n    and should only be used as a historical reference. This commit may not\n    have even been merged into the specification.",
    "correctAnswer": "tc39/ecma262"
  },
  {
    "filename": "rollup.config.js",
    "code": "const licenseBanner = license({\n  banner: {\n    content: '/*! <%= pkg.name %> v<%= pkg.version %> | <%= pkg.license %> */',\n    commentStyle: 'none'\n  }\n})",
    "correctAnswer": "js-cookie/js-cookie"
  },
  {
    "filename": "BaseSwipeAdapter.java",
    "code": "public abstract class BaseSwipeAdapter extends BaseAdapter implements SwipeItemMangerInterface, SwipeAdapterInterface {",
    "correctAnswer": "daimajia/androidswipelayout"
  },
  {
    "filename": "theme.rs",
    "code": "pub struct ThemeMode {\n    insert: bool,\n    input: String,\n    themes: Vec<String>,\n    results: SelectableVec<String>,\n    config: SearchSelectConfig,\n}",
    "correctAnswer": "jmacdonald/amp"
  },
  {
    "filename": "index.js",
    "code": "function httpRespond(res, code, txt, headers) {\n  headers = headers || {};\n  txt = txt || '';\n  headers['Content-Type'] = \"text/plain\";\n  res.writeHead(code, headers);\n  res.end(txt);\n}",
    "correctAnswer": "aosabook/500lines"
  },
  {
    "filename": "Stack.hs",
    "code": "module Stack where",
    "correctAnswer": "haskell/haskell-ide-engine"
  },
  {
    "filename": "SpringLifeCycleAware.java",
    "code": "public class SpringLifeCycleAware implements ApplicationContextAware {\n    private final static Logger LOGGER = LoggerFactory.getLogger(SpringLifeCycleAware.class);",
    "correctAnswer": "crossoverjie/jcsprout"
  },
  {
    "filename": "BooleanControl.js",
    "code": "const BooleanBackground = ({ isActive, ...props }) => (\n  <ToggleBackground\n    css={css`\n      background-color: ${isActive ? colors.active : colors.textFieldBorder};\n    `}\n    {...props}\n  />",
    "correctAnswer": "netlify/netlify-cms"
  },
  {
    "filename": "audiotracklist.rs",
    "code": "pub struct AudioTrackList {\n    eventtarget: EventTarget,\n    tracks: DomRefCell<Vec<Dom<AudioTrack>>>,\n    media_element: Option<Dom<HTMLMediaElement>>,\n}",
    "correctAnswer": "servo/servo"
  },
  {
    "filename": "mod.rs",
    "code": "attributes::{Attribute, AttributeLoc},\n    builder::Builder,\n    context::Context,\n    targets::TargetMachine,\n    types::FunctionType,\n    values::{BasicValueEnum, CallSiteValue, FunctionValue, PointerValue},\n};",
    "correctAnswer": "wasmerio/wasmer"
  },
  {
    "filename": "DomEvent.Pointer.js",
    "code": "function _addPointerStart(obj, handler, id) {\n\tvar onDown = Util.bind(function (e) {\n\t\t// IE10 specific: MsTouch needs preventDefault. See #2000\n\t\tif (e.MSPOINTER_TYPE_TOUCH && e.pointerType === e.MSPOINTER_TYPE_TOUCH) {\n\t\t\tDomEvent.preventDefault(e);\n\t\t}",
    "correctAnswer": "leaflet/leaflet"
  },
  {
    "filename": "tuning.pb.go",
    "code": "var _ = proto.Marshal\nvar _ = fmt.Errorf\nvar _ = math.Inf",
    "correctAnswer": "syncthing/syncthing"
  },
  {
    "filename": "storage_class.rs",
    "code": "macro_rules! storage_class {\n    ($(#[$($meta:meta)+])* storage_class $name:ident ; $($tt:tt)*) => {\n        $(#[$($meta)+])*\n        #[allow(unused_attributes)]\n        pub struct $name<'value, T> {\n            value: &'value mut T,\n        }",
    "correctAnswer": "EmbarkStudios/rust-gpu"
  },
  {
    "filename": "strictness-out.hs",
    "code": "module Main where",
    "correctAnswer": "tweag/ormolu"
  },
  {
    "filename": "kqueue.rs",
    "code": "pub enum WaitResult<'a, H> {\n    /// Event triggered normally\n    Ok(EventGuard<'a, H>),\n    /// Event triggered due to End of File conditions\n    EoF(EventGuard<'a, H>),\n    /// There was an error\n    Error(String),",
    "correctAnswer": "cloudflare/boringtun"
  },
  {
    "filename": "survey.js",
    "code": "const IS_VALID = 'redux-example/survey/IS_VALID';\nconst IS_VALID_SUCCESS = 'redux-example/survey/IS_VALID_SUCCESS';\nconst IS_VALID_FAIL = 'redux-example/survey/IS_VALID_FAIL';",
    "correctAnswer": "erikras/react-redux-universal-hot-example"
  },
  {
    "filename": "ToolBarHandler.cs",
    "code": "namespace redacted.WinForms.Forms.ToolBar\n{\n\tpublic class ToolBarHandler : WidgetHandler<ToolStripEx, redacted.Forms.ToolBar>, redacted.Forms.ToolBar.IHandler\n\t{\n\t\tToolBarDock dock = ToolBarDock.Top;",
    "correctAnswer": "picoe/Eto"
  },
  {
    "filename": "mcgen-prologue.cpp",
    "code": "TRACE_SET_MOD(mcg);",
    "correctAnswer": "facebook/hhvm"
  },
  {
    "filename": "error.rs",
    "code": "pub use redacted_http::error::*;\nuse derive_more::{Display, Error, From};\nuse serde_json::error::Error as JsonError;\nuse url::ParseError as UrlParseError;",
    "correctAnswer": "actix/actix-web"
  },
  {
    "filename": "FloatValueArraySerializer.java",
    "code": "public final class FloatValueArraySerializer extends TypeSerializerSingleton<FloatValueArray> {",
    "correctAnswer": "apache/flink"
  },
  {
    "filename": "Lifted.hs",
    "code": "Copyright:  (c) 2016 Stephen Diehl\n            (c) 2016-2018 Serokell\n            (c) 2018-2020 redacted\nSPDX-License-Identifier: MIT\nMaintainer:  redacted <xrom.xkov@gmail.com>\nStability:   Stable\nPortability: Portable",
    "correctAnswer": "kowainik/relude"
  },
  {
    "filename": "build.js",
    "code": "const fs = require('fs')\nconst path = require('path')\nconst zlib = require('zlib')\nconst terser = require('terser')\nconst rollup = require('rollup')\nconst configs = require('./configs')",
    "correctAnswer": "vuejs/vue-router"
  },
  {
    "filename": "OnoffSwitch.hs",
    "code": "module Ex05OnoffSwitch.OnoffSwitch where",
    "correctAnswer": "alpacaaa/zero-bullshit-haskell"
  },
  {
    "filename": "class-wp-rest-post-format-search-handler.php",
    "code": "class WP_REST_Post_Format_Search_Handler extends WP_REST_Search_Handler {",
    "correctAnswer": "wordpress/wordpress"
  },
  {
    "filename": "filesystem.cpp",
    "code": "File::File(QFile* openfile, QTextCodec* codec, QObject* parent)\n    : QObject(parent)\n    , m_file(openfile)\n    , m_fileStream(0)\n{\n    if (codec) {\n        m_fileStream = new QTextStream(m_file);",
    "correctAnswer": "ariya/phantomjs"
  },
  {
    "filename": "crashdump.cpp",
    "code": "void print_crash_message()\n{\n    fputs(\"redacted has crashed. Please read the bug reporting guide at\\n\"\n          \"<http://redacted.org/bug-reporting.html> and file a bug report.\\n\",\n        stderr);\n    fflush(stderr);\n}",
    "correctAnswer": "ariya/phantomjs"
  },
  {
    "filename": "FFI.hs",
    "code": "Module      : Language.Scheme.FFI\nCopyright   : Justin Ethier\nLicence     : MIT (see LICENSE in the distribution)",
    "correctAnswer": "justinethier/husk-scheme"
  },
  {
    "filename": "show-memory.sh",
    "code": "set -e\nset -u",
    "correctAnswer": "trimstray/nginx-admins-handbook"
  },
  {
    "filename": "InfixToPostfix.redacted",
    "code": "public class InfixToPostfix {\n  public static void main(String[] args) throws Exception {\n    assert \"32+\".equals(infix2PostFix(\"3+2\"));\n    assert \"123++\".equals(infix2PostFix(\"1+(2+3)\"));\n    assert \"34+5*6-\".equals(infix2PostFix(\"(3+4)*5-6\"));\n  }",
    "correctAnswer": "thealgorithms/java"
  },
  {
    "filename": "database_error.rs",
    "code": "pub type DatabaseResult<T> = Result<T, DatabaseError>;",
    "correctAnswer": "diesel-rs/diesel"
  },
  {
    "filename": "metadata.js",
    "code": "class Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");",
    "correctAnswer": "mozilla/pdf.js"
  },
  {
    "filename": "input.rs",
    "code": "pub fn basename(path: &Path) -> &OsStr {\n    path.file_name().unwrap_or_else(|| path.as_os_str())\n}",
    "correctAnswer": "sharkdp/fd"
  },
  {
    "filename": "SafeHashMap.hs",
    "code": "module Data.Morpheus.Ext.SafeHashMap\n  ( SafeHashMap,\n    unsafeFromList,\n    insert,\n  )\nwhere",
    "correctAnswer": "morpheusgraphql/morpheus-graphql"
  },
  {
    "filename": "system.ts",
    "code": "function shouldNotWrite(): never {\n  throw new Error('Webpack TypeScript System should not write.');\n}",
    "correctAnswer": "angular/angular-cli"
  },
  {
    "filename": "map.rs",
    "code": "pub trait ColorMap {\n    fn map_colors(&self, colors: Colors) -> Colors;\n}",
    "correctAnswer": "jmacdonald/amp"
  },
  {
    "filename": "Get.hs",
    "code": "module Web.Telegram.API.Bot.API.Get\n  ( -- * Functions\n    getMe\n  , getMeM\n  , getFile\n  , getFileM\n  , getUserProfilePhotos",
    "correctAnswer": "klappvisor/haskell-telegram-api"
  },
  {
    "filename": "TerminateResponse.java",
    "code": "public class TerminateResponse extends Response {",
    "correctAnswer": "oracle/graal"
  },
  {
    "filename": "lib.rs",
    "code": "html_logo_url = \"https://redacted.rs/brand/logo-standard.svg\",\n    html_root_url = \"https://docs.redacted.rs/stable\"\n)]\n#![warn(\n    missing_debug_implementations,\n    missing_docs,\n    rust_2018_idioms,",
    "correctAnswer": "amethyst/amethyst"
  },
  {
    "filename": "NotificationBar.hs",
    "code": "module redacted.Gui.NotificationBar\n    ( NotificationBar\n    , buildFrom\n    , asNotificationBar\n    , initialize\n    ) where",
    "correctAnswer": "k0ral/hbro"
  },
  {
    "filename": "ImageAdapter.java",
    "code": "public class ImageAdapter extends RecyclerView.Adapter<ImageViewHolder> {",
    "correctAnswer": "chrisbanes/photoview"
  },
  {
    "filename": "aac-silent.js",
    "code": "class AAC {",
    "correctAnswer": "bilibili/flv.js"
  },
  {
    "filename": "api-config.ts",
    "code": "const API_URL = \"http://example.com\"",
    "correctAnswer": "infinitered/ignite"
  },
  {
    "filename": "csv.rs",
    "code": "pub struct CsvExporter {}",
    "correctAnswer": "sharkdp/hyperfine"
  },
  {
    "filename": "TextSelectionViewController.m",
    "code": "@interface TextSelectionViewController ()<UIPopoverPresentationControllerDelegate>",
    "correctAnswer": "hackiftekhar/iqkeyboardmanager"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where",
    "correctAnswer": "samtay/tetris"
  },
  {
    "filename": "GetSizeConstraintSet.hs",
    "code": "module Network.AWS.WAF.GetSizeConstraintSet\n    (\n    -- * Creating a Request\n      getSizeConstraintSet\n    , GetSizeConstraintSet\n    -- * Request Lenses\n    , gscsSizeConstraintSetId",
    "correctAnswer": "brendanhay/amazonka"
  },
  {
    "filename": "AnyObserver.swift",
    "code": "public struct AnyObserver<Element> : ObserverType {\n    /// The type of elements in sequence that observer can observe.\n    public typealias E = Element",
    "correctAnswer": "shadowsocks/shadowsocksx-ng"
  },
  {
    "filename": "List.hs",
    "code": "module redacted.BuiltinTypes.List\nwhere",
    "correctAnswer": "mattgreen/hython"
  },
  {
    "filename": "FirebaseTest.js",
    "code": "const XLSX = require('xlsx');\nconst assert = require('assert');\nconst Firebase = require('firebase-admin');",
    "correctAnswer": "sheetjs/sheetjs"
  },
  {
    "filename": "inferFlash.ts",
    "code": "function findSync(\n  pattern: RegExp,\n  basePath: string,\n  limitSearchToDirectories = false,\n): string[] {\n  const matches: string[] = [];",
    "correctAnswer": "jiahaog/nativefier"
  },
  {
    "filename": "length.rs",
    "code": "pub(crate) struct DecodedLength(u64);",
    "correctAnswer": "hyperium/hyper"
  },
  {
    "filename": "BucketedRollingCounterStream.java",
    "code": "public abstract class BucketedRollingCounterStream<Event extends redactedEvent, Bucket, Output> extends BucketedCounterStream<Event, Bucket, Output> {\n    private Observable<Output> sourceStream;\n    private final AtomicBoolean isSourceCurrentlySubscribed = new AtomicBoolean(false);",
    "correctAnswer": "netflix/hystrix"
  },
  {
    "filename": "css.js",
    "code": "function setCss(el, prop, val, idx) {\n  if (typeof prop === 'string') {\n    var styles = getCss(el);\n    if (typeof val === 'function') {\n      val = val.call(el, idx, styles[prop]);\n    }",
    "correctAnswer": "cheeriojs/cheerio"
  },
  {
    "filename": "peripconn.go",
    "code": "type perIPConnCounter struct {\n\tpool sync.Pool\n\tlock sync.Mutex\n\tm    map[uint32]int\n}",
    "correctAnswer": "valyala/fasthttp"
  },
  {
    "filename": "redactedCommitBranchesField.php",
    "code": "final class redactedCommitBranchesField\n  extends redactedCommitCustomField {",
    "correctAnswer": "phacility/phabricator"
  },
  {
    "filename": "Matrix.hs",
    "code": "module Data.redacted.Bench.Matrix\n  ( MxM(..)\n  , randomMxM\n  , benchMxM\n  , MxV(..)\n  , randomMxV\n  , benchMxV",
    "correctAnswer": "lehins/massiv"
  },
  {
    "filename": "filetype.rs",
    "code": "pub struct FileExtensions;",
    "correctAnswer": "ogham/exa"
  },
  {
    "filename": "constants.go",
    "code": "const (\n\t// Core\n\tcoordinatorDelayMax  time.Duration = 100 * time.Millisecond\n\tcoordinatorDelayStep time.Duration = 10 * time.Millisecond",
    "correctAnswer": "junegunn/fzf"
  },
  {
    "filename": "proxy.js",
    "code": "const http = require('http');\nconst httpProxy = require('http-proxy');",
    "correctAnswer": "quilljs/quill"
  },
  {
    "filename": "AbstractRedisClientInterceptor.java",
    "code": "public class AbstractRedisClientInterceptor implements InstanceMethodsAroundInterceptor {",
    "correctAnswer": "apache/skywalking"
  },
  {
    "filename": "Interpreter.hs",
    "code": "module Language.Haskell.Interpreter(\n    -- * The interpreter monad transformer\n     MonadInterpreter(..), InterpreterT, Interpreter,\n    -- ** Running the interpreter\n     runInterpreter,\n    -- ** Interpreter options\n     Option, OptionVal((:=)),",
    "correctAnswer": "haskell-hint/hint"
  },
  {
    "filename": "Codacy.hs",
    "code": "module redacted.Formatter.Codacy\n  ( printResult,\n    formatResult,\n  )\nwhere",
    "correctAnswer": "hadolint/hadolint"
  },
  {
    "filename": "ijkdict.c",
    "code": "struct IjkAVDictionary {\n    int count;\n    IjkAVDictionaryEntry *elems;\n};",
    "correctAnswer": "bilibili/ijkplayer"
  },
  {
    "filename": "socket.cpp",
    "code": "namespace HPHP {\n///////////////////////////////////////////////////////////////////////////////",
    "correctAnswer": "facebook/hhvm"
  },
  {
    "filename": "deleting_updating_documents.rs",
    "code": "fn extract_doc_given_isbn(\n    reader: &IndexReader,\n    isbn_term: &Term,\n) -> redacted::Result<Option<Document>> {\n    let searcher = reader.searcher();",
    "correctAnswer": "tantivy-search/tantivy"
  },
  {
    "filename": "Lib.hs",
    "code": "module Lib\n       ( mkAppEnv\n       , runServer\n       , main\n       ) where",
    "correctAnswer": "Holmusk/three-layer"
  },
  {
    "filename": "Time.hs",
    "code": "module SDL.Time\n  ( -- * Time Measurement\n    ticks\n  , time",
    "correctAnswer": "haskell-game/sdl2"
  },
  {
    "filename": "Expr.hs",
    "code": "Module      : Text.Pretty.Simple.Internal.Expr\nCopyright   : (c) Dennis Gosnell, 2016\nLicense     : BSD-style (see LICENSE file)\nMaintainer  : cdep.illabout@gmail.com\nStability   : experimental\nPortability : POSIX",
    "correctAnswer": "cdepillabout/pretty-simple"
  },
  {
    "filename": "PointKeyframeAnimation.java",
    "code": "public class PointKeyframeAnimation extends KeyframeAnimation<PointF> {\n  private final PointF point = new PointF();",
    "correctAnswer": "airbnb/lottie-android"
  },
  {
    "filename": "prepared.go",
    "code": "type PreparedMessage struct {\n\tmessageType int\n\tdata        []byte\n\tmu          sync.Mutex\n\tframes      map[prepareKey]*preparedFrame\n}",
    "correctAnswer": "gorilla/websocket"
  },
  {
    "filename": "Parallel.hs",
    "code": "( SerialT, parallely, parallel, serially, maxBuffer, maxThreads)",
    "correctAnswer": "composewell/streamly"
  },
  {
    "filename": "abstract_factory.swift",
    "code": "/*:\n🌰 抽象工厂（Abstract Factory）\n-------------",
    "correctAnswer": "ochococo/design-patterns-in-swift"
  },
  {
    "filename": "win-shell.js",
    "code": "const Registry = require('winreg');\nconst Path = require('path');\nconst getAppName = require('../get-app-name');",
    "correctAnswer": "atom/atom"
  },
  {
    "filename": "opt.cpp",
    "code": "namespace HPHP { namespace jit {",
    "correctAnswer": "facebook/hhvm"
  },
  {
    "filename": "hwdec_rpi.c",
    "code": "struct priv {\n    struct mp_log *log;",
    "correctAnswer": "mpv-player/mpv"
  },
  {
    "filename": "print_w32.c",
    "code": "static int g_use_ansi = 0;\nvoid windows_use_ansi(int use_ansi) {\n    g_use_ansi = use_ansi;\n}",
    "correctAnswer": "ggreer/the_silver_searcher"
  },
  {
    "filename": "RegularExpression.php",
    "code": "class RegularExpression extends Constraint\n{\n    private string $pattern;",
    "correctAnswer": "sebastianbergmann/phpunit"
  },
  {
    "filename": "IGTestBindingSingleItemDataSource.m",
    "code": "@interface IGTestBindingSingleSectionController : IGListBindingSingleSectionController",
    "correctAnswer": "instagram/iglistkit"
  },
  {
    "filename": "getPackageNames.js",
    "code": "const fs = require('fs')\nconst path = require('path')",
    "correctAnswer": "acdlite/recompose"
  },
  {
    "filename": "nodejs.rb",
    "code": "module Msf::Payload::NodeJS\n  # Outputs a javascript snippet that spawns a bind TCP shell\n  # @return [String] javascript code that executes bind TCP payload\n  def nodejs_bind_tcp\n    cmd = <<-EOS\n      (function(){\n        var require = global.require || global.process.mainModule.constructor._load;",
    "correctAnswer": "rapid7/metasploit-framework"
  },
  {
    "filename": "HandlerInterface.php",
    "code": "interface HandlerInterface\n{\n    /**\n     * Checks whether the given record will be handled by this handler.\n     *\n     * This is mostly done for performance reasons, to avoid calling processors for nothing.\n     *",
    "correctAnswer": "seldaek/monolog"
  },
  {
    "filename": "QueryFragment.hs",
    "code": "Module      : redacted.Private.QueryFragment\nDescription : Helper functions for redacted.QueryBuilder.",
    "correctAnswer": "PostgREST/postgrest"
  },
  {
    "filename": "ADT.hs",
    "code": "module Main where",
    "correctAnswer": "harpocrates/inline-rust"
  },
  {
    "filename": "app.js",
    "code": "let numPopstateListeners = 0\nconst listenerCountDiv = document.getElementById('popcount')\nlistenerCountDiv.textContent = 0",
    "correctAnswer": "vuejs/vue-router"
  },
  {
    "filename": "Core.hs",
    "code": "module Test.redacted.Options.Core\n  ( NumThreads(..)\n  , Timeout(..)\n  , mkTimeout\n  , coreOptions\n  )\n  where",
    "correctAnswer": "feuerbach/tasty"
  },
  {
    "filename": "InferKind.hs",
    "code": "module Kind.InferKind ( InfKind(..)\n                      , infKindStar, infKindHandled, infKindLabel\n                      , infKindFun\n                      , infKindFunN\n                      , ppInfKind, niceInfKinds\n                      , infExtractKindFun\n                      , isInfKindScope",
    "correctAnswer": "koka-lang/koka"
  },
  {
    "filename": "YearTypeHandler.java",
    "code": "public class YearTypeHandler extends BaseTypeHandler<Year> {",
    "correctAnswer": "mybatis/mybatis-3"
  },
  {
    "filename": "EventHandler.java",
    "code": "public interface EventHandler<T>\n{\n    /**\n     * Called when a publisher has published an event to the {@link RingBuffer}.  The {@link BatchEventProcessor} will\n     * read messages from the {@link RingBuffer} in batches, where a batch is all of the events available to be\n     * processed without having to wait for any new event to arrive.  This can be useful for event handlers that need\n     * to do slower operations like I/O as they can group together the data from multiple events into a single",
    "correctAnswer": "lmax-exchange/disruptor"
  },
  {
    "filename": "Animator.cs",
    "code": "namespace Android.Animation {",
    "correctAnswer": "xamarin/xamarin-android"
  },
  {
    "filename": "Array.hs",
    "code": "module Main where",
    "correctAnswer": "Copilot-Language/copilot"
  },
  {
    "filename": "bit-components.service.js",
    "code": "const Joi = require('joi')\nconst { metric } = require('../text-formatters')\nconst { nonNegativeInteger } = require('../validators')\nconst { downloadCount } = require('../color-formatters')\nconst { BaseJsonService } = require('..')",
    "correctAnswer": "badges/shields"
  },
  {
    "filename": "index.js",
    "code": "const timeout = (dispatch, props) =>\n  setTimeout(() => dispatch(props.action), props.delay)",
    "correctAnswer": "jorgebucaran/hyperapp"
  },
  {
    "filename": "AndroidSchedulers.java",
    "code": "public final class AndroidSchedulers {",
    "correctAnswer": "reactivex/rxandroid"
  },
  {
    "filename": "Parse.hs",
    "code": "module Language.Haskell.Stylish.Parse\n  ( parseModule\n  ) where",
    "correctAnswer": "jaspervdj/stylish-haskell"
  },
  {
    "filename": "Types.hs",
    "code": "Module: redacted.IDE.SchemaDesigner.Types\nDescription: Types for representing an AST of SQL DDL\nCopyright: (c) digitally induced GmbH, 2020\n-}\nmodule redacted.IDE.SchemaDesigner.Types where",
    "correctAnswer": "digitallyinduced/ihp"
  },
  {
    "filename": "index.js",
    "code": "let data = '';\nconst request = https.request(\n  {\n    host: 'api.github.com',\n    path: '/repos/redacted/redacted/issues',\n    method: 'get',\n    headers: {",
    "correctAnswer": "paularmstrong/normalizr"
  },
  {
    "filename": "RNNTitleOptions.m",
    "code": "@implementation RNNTitleOptions",
    "correctAnswer": "wix/react-native-navigation"
  },
  {
    "filename": "redacted.lang-tr.php",
    "code": "$redacted_LANG['authenticate']         = 'SMTP Hatası: Oturum açılamadı.';\n$redacted_LANG['connect_host']         = 'SMTP Hatası: SMTP sunucusuna bağlanılamadı.';\n$redacted_LANG['data_not_accepted']    = 'SMTP Hatası: Veri kabul edilmedi.';\n$redacted_LANG['empty_message']        = 'Mesajın içeriği boş';\n$redacted_LANG['encoding']             = 'Bilinmeyen karakter kodlama: ';\n$redacted_LANG['execute']              = 'Çalıştırılamadı: ';\n$redacted_LANG['file_access']          = 'Dosyaya erişilemedi: ';",
    "correctAnswer": "phpmailer/phpmailer"
  },
  {
    "filename": "acl_storage.rs",
    "code": "const ACL_CHECKER_CONTRACT_REGISTRY_NAME: &'static str = \"secretstore_acl_checker\";",
    "correctAnswer": "openethereum/parity-ethereum"
  },
  {
    "filename": "configure-shared-methods.js",
    "code": "const util = require('util');\nconst extend = require('util')._extend;\nconst g = require('./globalize');",
    "correctAnswer": "strongloop/loopback"
  },
  {
    "filename": "InstrumentationUtils.java",
    "code": "public class InstrumentationUtils {\n    private static final Logger logger = LoggerFactory.getLogger(InstrumentationUtils.class);",
    "correctAnswer": "alibaba/arthas"
  },
  {
    "filename": "Core.hs",
    "code": "module Level01.Core (runApp) where",
    "correctAnswer": "qfpl/applied-fp-course"
  },
  {
    "filename": "LotteryTicketId.java",
    "code": "public class LotteryTicketId {",
    "correctAnswer": "iluwatar/java-design-patterns"
  },
  {
    "filename": "CacheNamespaceRef.java",
    "code": "public @interface CacheNamespaceRef {",
    "correctAnswer": "mybatis/mybatis-3"
  },
  {
    "filename": "ToolboxComponentsCreatedEventArgs.cs",
    "code": "namespace System.Drawing.Design\n{\n    /// <summary>\n    ///  Provides data for the 'ToolboxComponentsCreatedEventArgs' event that occurs\n    ///  when components are added to the toolbox.\n    /// </summary>\n    public class ToolboxComponentsCreatedEventArgs : EventArgs",
    "correctAnswer": "dotnet/winforms"
  },
  {
    "filename": "hud.js",
    "code": "const HUD = {\n  tween: null,\n  hudUI: null,\n  findMode: null,\n  abandon() {\n    if (this.hudUI)\n      this.hudUI.hide(false);",
    "correctAnswer": "philc/vimium"
  },
  {
    "filename": "Basic.hs",
    "code": "module redacted.Compose.Basic where",
    "correctAnswer": "DimaSamoz/mezzo"
  },
  {
    "filename": "QueryFormatter.php",
    "code": "class QueryFormatter extends DataFormatter\n{",
    "correctAnswer": "barryvdh/laravel-debugbar"
  },
  {
    "filename": "Interceptor.java",
    "code": "public @interface Interceptor {\n    /**\n     * The priority of interceptor, redacted will be excute them follow the priority.\n     */\n    int priority();",
    "correctAnswer": "alibaba/arouter"
  },
  {
    "filename": "help_dialog.js",
    "code": "const $ = id => document.getElementById(id);\nconst $$ = (element, selector) => element.querySelector(selector);",
    "correctAnswer": "philc/vimium"
  },
  {
    "filename": "AddressBookAUResultParser.java",
    "code": "public final class AddressBookAUResultParser extends ResultParser {",
    "correctAnswer": "zxing/zxing"
  },
  {
    "filename": "mod.rs",
    "code": "mod socket_iterator;\nuse socket_iterator::SocketIterator;",
    "correctAnswer": "RustScan/RustScan"
  },
  {
    "filename": "agent-base.js",
    "code": "function Agent() {\n  this._defaults = [];\n}",
    "correctAnswer": "visionmedia/superagent"
  },
  {
    "filename": "MTLReflection.m",
    "code": "SEL MTLSelectorWithKeyPattern(NSString *key, const char *suffix) {\n\tNSUInteger keyLength = [key maximumLengthOfBytesUsingEncoding:NSUTF8StringEncoding];\n\tNSUInteger suffixLength = strlen(suffix);",
    "correctAnswer": "mantle/mantle"
  },
  {
    "filename": "config.rs",
    "code": "pub enum VisibleLines {\n    /// Show all lines which are included in the line ranges\n    Ranges(LineRanges),",
    "correctAnswer": "sharkdp/bat"
  },
  {
    "filename": "ChartDataEntry.swift",
    "code": "open class ChartDataEntry: ChartDataEntryBase, NSCopying\n{\n    /// the x value\n    @objc open var x = 0.0",
    "correctAnswer": "danielgindi/charts"
  },
  {
    "filename": "count.rs",
    "code": "pub struct Count {\n    name: String,\n    stats: HashMap<NaiveDate, u32>,\n    goal: u32,",
    "correctAnswer": "NerdyPepper/dijo"
  },
  {
    "filename": "depth_stencil.rs",
    "code": "pub struct DepthStencil {\n    /// Comparison to use between the depth value of each fragment and the depth value currently\n    /// in the depth buffer.\n    pub depth_compare: Compare,",
    "correctAnswer": "vulkano-rs/vulkano"
  },
  {
    "filename": "UnwrapSecurityExceptionFilter.java",
    "code": "public class UnwrapSecurityExceptionFilter implements Filter {\n    public void init(FilterConfig filterConfig) throws ServletException {\n    }",
    "correctAnswer": "jenkinsci/jenkins"
  },
  {
    "filename": "wallpaper.presets.ts",
    "code": "const BASE: ImageStyle = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n}",
    "correctAnswer": "infinitered/ignite"
  },
  {
    "filename": "NativeBlobModule.js",
    "code": "const NativeModule = TurboModuleRegistry.get<Spec>('BlobModule');",
    "correctAnswer": "facebook/react-native"
  },
  {
    "filename": "Dijkstra.swift",
    "code": "public class Dijkstra {\n    private var totalVertices: Set<Vertex>",
    "correctAnswer": "raywenderlich/swift-algorithm-club"
  },
  {
    "filename": "key_events.js",
    "code": "function doHandleBinding(cm, bound, dropShift) {\n  if (typeof bound == \"string\") {\n    bound = commands[bound]\n    if (!bound) return false\n  }\n  // Ensure previous input has been read, so that the handler sees a\n  // consistent view of the document",
    "correctAnswer": "codemirror/codemirror"
  },
  {
    "filename": "HackyViewPager.java",
    "code": "public class HackyViewPager extends ViewPager {",
    "correctAnswer": "chrisbanes/photoview"
  },
  {
    "filename": "TransitionActivity3.java",
    "code": "public class TransitionActivity3 extends BaseDetailActivity {",
    "correctAnswer": "lgvalle/material-animations"
  },
  {
    "filename": "SmtpFailedRecipientException.cs",
    "code": "namespace System.Net.Mail\n{\n    [Serializable]\n    [System.redacted.CompilerServices.TypeForwardedFrom(\"System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\")]\n    public class SmtpFailedRecipientException : SmtpException, ISerializable\n    {\n        private readonly string? _failedRecipient;",
    "correctAnswer": "dotnet/runtime"
  },
  {
    "filename": "incircle.hs",
    "code": "type Point = (Double, Double)\ninCircle2 :: [Point] -> [Point]\ninCircle2 = filter (\\(x, y) -> sqrt (x*x + y*y) <= 2.0)",
    "correctAnswer": "raviksharma/bartosz-basics-of-haskell"
  },
  {
    "filename": "ResetDBClusterParameterGroup.hs",
    "code": "module Network.AWS.RDS.ResetDBClusterParameterGroup\n    (\n    -- * Creating a Request\n      resetDBClusterParameterGroup\n    , ResetDBClusterParameterGroup\n    -- * Request Lenses\n    , rdcpgResetAllParameters",
    "correctAnswer": "brendanhay/amazonka"
  },
  {
    "filename": "IndexLSH.cpp",
    "code": "namespace redacted {",
    "correctAnswer": "facebookresearch/faiss"
  },
  {
    "filename": "table-binary-unicode-properties.html",
    "code": "<emu-table id=\"table-binary-unicode-properties\">\n  <emu-caption>Binary Unicode property aliases and their canonical property names</emu-caption>\n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th>Property name and aliases</th>\n        <th>Canonical property name</th>",
    "correctAnswer": "tc39/ecma262"
  },
  {
    "filename": "PoolConfig.js",
    "code": "function PoolConfig(options) {\n  if (typeof options === 'string') {\n    options = ConnectionConfig.parseUrl(options);\n  }",
    "correctAnswer": "mysqljs/mysql"
  },
  {
    "filename": "filesystem.rs",
    "code": "FileAttr, FileType, Filesystem, ReplyAttr, ReplyCreate, ReplyData, ReplyDirectory, ReplyEmpty,\n    ReplyEntry, ReplyStatfs, ReplyWrite, Request,\n};\nuse libc::{ENOENT, ENOTDIR, ENOTRECOVERABLE, EREMOTE};\nuse lru_time_cache::LruCache;\nuse std;\nuse std::clone::Clone;",
    "correctAnswer": "harababurel/gcsf"
  },
  {
    "filename": "ChangeVersion.hs",
    "code": "module ChangeVersion (main, test) where",
    "correctAnswer": "acid-state/acid-state"
  },
  {
    "filename": "deleteoperation.cpp",
    "code": "BulkOperations::DeleteOperation::DeleteOperation(\n    QSharedPointer<RedisClient::Connection> connection, int dbIndex,\n    OperationCallback callback, QRegExp keyPattern)\n    : BulkOperations::AbstractOperation(connection, dbIndex, callback,\n                                        keyPattern) {\n  m_errorMessagePrefix =\n      QCoreApplication::translate(\"RDM\", \"Cannot remove key \");",
    "correctAnswer": "uglide/redisdesktopmanager"
  },
  {
    "filename": "Fib.hs",
    "code": "module Fib\n  ( neg\n  , fib\n  , fact\n  , factSexp\n  ) where",
    "correctAnswer": "tweag/HaskellR"
  },
  {
    "filename": "loc.go",
    "code": "type Loc struct {\n\tX, Y int\n}",
    "correctAnswer": "zyedidia/micro"
  },
  {
    "filename": "wordpress.rb",
    "code": "module Services\n  class Wordpress < Service\n    MAX_CHARACTERS = 1000",
    "correctAnswer": "diaspora/diaspora"
  },
  {
    "filename": "togglePlugin.js",
    "code": "function togglePlugin(config, pluginName, state) {\n    var deps = config.getPluginDependencies();",
    "correctAnswer": "gitbookio/gitbook"
  },
  {
    "filename": "array.rs",
    "code": "pub struct Array( Reference );",
    "correctAnswer": "koute/stdweb"
  },
  {
    "filename": "index.ts",
    "code": "const appState = {\n  todoStore: {\n    todos: [\n      { title: 'd3' },\n      { title: 'state' },\n      { title: 'visualizer' },\n      { title: 'tree' },",
    "correctAnswer": "reduxjs/redux-devtools"
  },
  {
    "filename": "Document.cs",
    "code": "namespace Mono.redacted.Cil {",
    "correctAnswer": "jbevain/cecil"
  },
  {
    "filename": "records-with-optics.hs",
    "code": "data Address =\n  Address\n    { _city    :: String\n    , _country :: String\n    }\n  deriving (Show)",
    "correctAnswer": "typeclasses/haskell-phrasebook"
  },
  {
    "filename": "DESCRIPTION.en_us.html",
    "code": "<p>\nBodoni Moda is a no-compromises Bodoni family, built for the digital age.\nThis font family includes a full range of weights, italics, an extended character set, OpenType features, and optical sizes,\ntotalling 64 font files. It was made with love and will continue to improve with your support.\n</p>\n<p>\nThe Bodoni Moda project is designed by Owen Earl (indestructible type*). To contribute, see <a href=\"https://github.com/indestructible-type/Bodoni\">github.com/indestructible-type/Bodoni</a>",
    "correctAnswer": "google/fonts"
  },
  {
    "filename": "Meta.hs",
    "code": "module Web.Scim.Schema.Meta where",
    "correctAnswer": "wireapp/wire-server"
  },
  {
    "filename": "VideoInfo.hs",
    "code": "Movie Monad\n  (C) 2017 David redacted\n  redacted.com\n-}",
    "correctAnswer": "lettier/movie-monad"
  },
  {
    "filename": "Images.cs",
    "code": "namespace redactedSample.Controllers\n{\n\t[Route(\"api/[controller]\")]\n\t[ApiController]\n\tpublic class ImagesController : ControllerBase\n\t{\n\t\tprivate readonly ILogger<ImagesController> logger;",
    "correctAnswer": "mono/SkiaSharp"
  },
  {
    "filename": "AnonymousToken.php",
    "code": "class AnonymousToken extends AbstractToken\n{\n    private $secret;",
    "correctAnswer": "symfony/symfony"
  },
  {
    "filename": "squished_sql_heredocs.rb",
    "code": "module RuboCop\n  module Cop\n    module Rails\n      #\n      # Checks SQL heredocs to use `.squish`.\n      # Some SQL syntax (e.g. PostgreSQL comments and functions) requires newlines\n      # to be preserved in order to work, thus auto-correction for this cop is not safe.",
    "correctAnswer": "homebrew/brew"
  },
  {
    "filename": "FunctionalDependencies.hs",
    "code": "on -} FunctionalDependencies {-\nOn the left I'll write types\nto determine the right,\nand infer them -} where{-ever I please. -}",
    "correctAnswer": "i-am-tom/haskell-exercises"
  },
  {
    "filename": "TableView.cs",
    "code": "namespace redacted.Platform.Tizen.Native\n{\n\t/// <summary>\n\t/// Extends the ListView class to provide TableView class implementation.\n\t/// </summary>\n\tpublic class TableView : ListView, ITableView\n\t{",
    "correctAnswer": "xamarin/Xamarin.Forms"
  },
  {
    "filename": "fold_constants.rs",
    "code": "fn evaluate_binop(\n    kind: BinOpKind,\n    left: LiteralKind,\n    right: LiteralKind,\n) -> redactedResult<LiteralKind> {\n    use crate::ast::BinOpKind::*;\n    use crate::ast::LiteralKind::*;",
    "correctAnswer": "weld-project/weld"
  },
  {
    "filename": "BitSource.java",
    "code": "public final class BitSource {",
    "correctAnswer": "zxing/zxing"
  },
  {
    "filename": "Episode3.hs",
    "code": "module FurElise.Episode3 (episode3) where",
    "correctAnswer": "DimaSamoz/mezzo"
  },
  {
    "filename": "BindsInstance.java",
    "code": "public @interface BindsInstance {}",
    "correctAnswer": "google/dagger"
  },
  {
    "filename": "session.js",
    "code": "function SessionStrategy(options, deserializeUser) {\n  if (typeof options == 'function') {\n    deserializeUser = options;\n    options = undefined;\n  }\n  options = options || {};",
    "correctAnswer": "jaredhanson/passport"
  },
  {
    "filename": "album_list.rs",
    "code": "app::{ActiveBlock, AlbumTableContext, App, RouteId, SelectedFullAlbum},\n  event::Key,\n};",
    "correctAnswer": "Rigellute/spotify-tui"
  },
  {
    "filename": "_base.js",
    "code": "const got = require('@/utils/got');",
    "correctAnswer": "diygod/rsshub"
  },
  {
    "filename": "generatePath.js",
    "code": "const cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;",
    "correctAnswer": "reacttraining/react-router"
  },
  {
    "filename": "Balance.hs",
    "code": "module Web.redacted.Balance\n    ( -- * API\n      GetBalance\n    , getBalance\n    , GetBalanceTransaction\n    , getBalanceTransaction\n    , GetBalanceTransactionHistory",
    "correctAnswer": "dmjio/stripe"
  },
  {
    "filename": "strings.js",
    "code": "let _emoji = \"[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2694-\\u2697]|\\uD83E[\\uDD10-\\uDD5D]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\",\n\t_emojiExp = new RegExp(_emoji),\n\t_emojiAndCharsExp = new RegExp(_emoji + \"|.\", \"g\"),\n\t_emojiSafeSplit = (text, delimiter, trim) => {\n\t\tif (trim) {\n\t\t\ttext = text.replace(_trimExp, \"\");\n\t\t}",
    "correctAnswer": "greensock/gsap"
  },
  {
    "filename": "rollup.config.js",
    "code": "const copyright = `// ${meta.homepage} v${meta.version} Copyright ${(new Date).getFullYear()} ${meta.author.name}`;",
    "correctAnswer": "d3/d3"
  },
  {
    "filename": "workspace_command.go",
    "code": "type WorkspaceCommand struct {\n\tMeta\n\tLegacyName bool\n}",
    "correctAnswer": "hashicorp/terraform"
  },
  {
    "filename": "helpers.collection.js",
    "code": "const arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];",
    "correctAnswer": "chartjs/chart.js"
  },
  {
    "filename": "Coerce.hs",
    "code": "module Coerce where",
    "correctAnswer": "thma/LtuPatternFactory"
  },
  {
    "filename": "PcmAudioService.cpp",
    "code": "Copyright (c) 2016 Chukong Technologies Inc.\nCopyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.",
    "correctAnswer": "cocos2d/cocos2d-x"
  },
  {
    "filename": "ae_select.c",
    "code": "typedef struct aeApiState {\n    fd_set rfds, wfds;\n    /* We need to have a copy of the fd sets as it's not safe to reuse\n     * FD sets after select(). */\n    fd_set _rfds, _wfds;\n} aeApiState;",
    "correctAnswer": "wg/wrk"
  },
  {
    "filename": "AFUIActivityIndicatorViewTests.m",
    "code": "@interface AFUIActivityIndicatorViewTests : AFTestCase\n@property (nonatomic, strong) NSURLRequest *request;\n@property (nonatomic, strong) UIActivityIndicatorView *activityIndicatorView;\n@property (nonatomic, strong) AFURLSessionManager *sessionManager;\n@end",
    "correctAnswer": "afnetworking/afnetworking"
  },
  {
    "filename": "source.rs",
    "code": "pub trait Source {\n    /// Register `self` with the given `Registry` instance.\n    ///\n    /// This function should not be called directly. Use [`Registry::register`]\n    /// instead. Implementors should handle registration by delegating the call\n    /// to another `Source` type.\n    ///",
    "correctAnswer": "tokio-rs/mio"
  },
  {
    "filename": "1665. Minimum Initial Energy to Finish Tasks.go",
    "code": "func minimumEffort(tasks [][]int) int {\n\tsort.Sort(Task(tasks))\n\tres, cur := 0, 0\n\tfor _, t := range tasks {\n\t\tif t[1] > cur {\n\t\t\tres += t[1] - cur\n\t\t\tcur = t[1] - t[0]",
    "correctAnswer": "halfrost/leetcode-go"
  },
  {
    "filename": "passwords.php",
    "code": "return [",
    "correctAnswer": "laravel/laravel"
  },
  {
    "filename": "provider-manager.js",
    "code": "const pkg = require('../package.json');\nconst globs = require('./globs');",
    "correctAnswer": "avajs/ava"
  },
  {
    "filename": "Lazy.hs",
    "code": "module Control.Eff.State.Lazy where",
    "correctAnswer": "suhailshergill/extensible-effects"
  },
  {
    "filename": "Functions.hs",
    "code": "module Pos.DB.Functions\n       (\n       -- * Encoded putting/getting\n         dbGetBi\n       , dbPutBi",
    "correctAnswer": "input-output-hk/cardano-sl"
  },
  {
    "filename": "LottieRelativePointValueCallback.java",
    "code": "public class LottieRelativePointValueCallback extends LottieValueCallback<PointF> {\n  private final PointF point = new PointF();",
    "correctAnswer": "airbnb/lottie-android"
  },
  {
    "filename": "post-publish-steps.js",
    "code": "const chalk = require(\"chalk\");\nconst { string: outdentString } = require(\"outdent\");\nconst fetch = require(\"node-fetch\");\nconst execa = require(\"execa\");\nconst { logPromise } = require(\"../utils\");",
    "correctAnswer": "prettier/prettier"
  },
  {
    "filename": "Applicative.hs",
    "code": "module Options.Applicative (\n  -- * Applicative option parsers\n  --\n  -- | This module exports all one should need for defining and using\n  -- redacted command line option parsers.\n  --\n  -- See <https://github.com/redacted/redacted> for a tutorial,",
    "correctAnswer": "pcapriotti/optparse-applicative"
  },
  {
    "filename": "Users.hs",
    "code": "module Users where",
    "correctAnswer": "therewillbecode/poker-maison"
  },
  {
    "filename": "hooks.rb",
    "code": "module redacted\n  module ConfigManagement\n    class Hooks\n      include redacted::Util::Loggable",
    "correctAnswer": "elastic/logstash"
  },
  {
    "filename": "RLMSwiftSupport.m",
    "code": "@implementation RLMSwiftSupport",
    "correctAnswer": "realm/realm-cocoa"
  },
  {
    "filename": "obj_replace.hs",
    "code": "#!/usr/bin/env stack\n-- stack runghc --package redacted\n{-# LANGUAGE OverloadedStrings #-}\nmodule Main(main) where",
    "correctAnswer": "reanimate/reanimate"
  },
  {
    "filename": "Parser.hs",
    "code": "module redacted.Parser\n    ( parseResults\n    ) where",
    "correctAnswer": "joshuaclayton/unused"
  },
  {
    "filename": "Program.cs",
    "code": "namespace InheritFromLogger\n{\n    /// <summary>\n    /// Provides methods to write messages with event IDs - useful for the Event Log target\n    /// Inherits from the Logger class.\n    /// </summary>\n    public class LoggerWithEventID : Logger",
    "correctAnswer": "NLog/NLog"
  },
  {
    "filename": "Data.hs",
    "code": "module Pos.Chain.Genesis.Data\n       ( GenesisData (..)\n       ) where",
    "correctAnswer": "input-output-hk/cardano-sl"
  },
  {
    "filename": "errors.go",
    "code": "type Error struct {\n\tSourceType               string   // The type of source that failed to build.\n\tTitle, Path, Description string   // Description of the error, as presented to the user.\n\tLine, Column             int      // Where the error was encountered.\n\tSourceLines              []string // The entire source file, split into lines.\n\tStack                    string   // The raw stack trace string from debug.Stack().\n\tMetaError                string   // Error that occurred producing the error page.",
    "correctAnswer": "revel/revel"
  },
  {
    "filename": "Lists.hs",
    "code": "module Lists where",
    "correctAnswer": "thma/WhyHaskellMatters"
  },
  {
    "filename": "redacted.js",
    "code": "function readStdin() {\n    return new Promise((resolve, reject) => {\n        let content = \"\";\n        let chunk = \"\";",
    "correctAnswer": "eslint/eslint"
  },
  {
    "filename": "events.go",
    "code": "type Event interface {\n\tName() string\n}",
    "correctAnswer": "zyedidia/micro"
  },
  {
    "filename": "index.js",
    "code": "const Twitter = require('node-tweet-stream');\nconst twitter = new Twitter({\n  consumer_key: process.env.TWITTER_CONSUMER_KEY,\n  consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n  token: process.env.TWITTER_TOKEN,\n  token_secret: process.env.TWITTER_TOKEN_SECRET\n});",
    "correctAnswer": "socketio/socket.io"
  },
  {
    "filename": "revlog.rs",
    "code": "error::Result,\n    sync::{utils::repo, CommitId, LogWalker},\n    AsyncNotification, CWD,\n};\nuse crossbeam_channel::Sender;\nuse git2::Oid;\nuse scopetime::scope_time;",
    "correctAnswer": "extrawurst/gitui"
  },
  {
    "filename": "email.js",
    "code": "const g = require('../../lib/globalize');",
    "correctAnswer": "strongloop/loopback"
  },
  {
    "filename": "table-unicode-general-category-values.html",
    "code": "<emu-table id=\"table-unicode-general-category-values\">\n  <emu-caption>Value aliases and canonical values for the Unicode property <a href=\"https://unicode.org/reports/tr18/#General_Category_Property\">`General_Category`</a></emu-caption>\n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th>Property value and aliases</th>\n        <th>Canonical property value</th>",
    "correctAnswer": "tc39/ecma262"
  },
  {
    "filename": "ListViDemo.hs",
    "code": "module Main where\n\nimport Control.Monad (void)\nimport Data.Maybe (fromMaybe)\n#if !(MIN_VERSION_base(4,11,0))\nimport Data.Monoid\n#endif\nimport qualified Graphics.Vty as V\nimport Lens.Micro ((^.))\n\nimport qualified redacted.AttrMap as A\nimport qualified redacted.Main as M\nimport redacted.Types (Widget)\nimport qualified redacted.Types as T\nimport redacted.Util (fg, on)\nimport qualified redacted.Widgets.Border as B\nimport qualified redacted.Widgets.Center as C\nimport redacted.Widgets.Core (hLimit, str, vBox, vLimit, withAttr, (<+>))\nimport qualified redacted.Widgets.List as L\nimport qualified Data.Vector as Vec\n\ndrawUI :: (Show a) => L.List () a -> [Widget ()]\ndrawUI l = [ui]\n    where\n        label = str \"Item \" <+> cur <+> str \" of \" <+> total\n        cur = case l^.(L.listSelectedL) of\n                Nothing -> str \"-\"\n                Just i  -> str (show (i + 1))\n        total = str $ show $ Vec.length $ l^.(L.listElementsL)\n        box = B.borderWithLabel label $\n              hLimit 25 $\n              vLimit 15 $\n              L.renderList listDrawElement True l\n        ui = C.vCenter $ vBox [ C.hCenter box\n                              , str \" \"\n                              , C.hCenter $ str \"Press +/- to add/remove list elements.\"\n                              , C.hCenter $ str \"Press Esc to exit.\"\n                              ]\n\nappEvent :: L.List () Char -> T.redactedEvent () e -> T.EventM () (T.Next (L.List () Char))\nappEvent l (T.VtyEvent e) =\n    case e of\n        V.EvKey (V.KChar '+') [] ->\n            let el = nextElement (L.listElements l)\n                pos = Vec.length $ l^.(L.listElementsL)\n            in M.continue $ L.listInsert pos el l\n\n        V.EvKey (V.KChar '-') [] ->\n            case l^.(L.listSelectedL) of\n                Nothing -> M.continue l\n                Just i  -> M.continue $ L.listRemove i l\n\n        V.EvKey V.KEsc [] -> M.halt l\n\n        ev -> M.continue =<< (L.handleListEventVi L.handleListEvent) ev l\n    where\n      nextElement :: Vec.Vector Char -> Char\n      nextElement v = fromMaybe '?' $ Vec.find (flip Vec.notElem v) (Vec.fromList ['a' .. 'z'])\nappEvent l _ = M.continue l\n\nlistDrawElement :: (Show a) => Bool -> a -> Widget ()\nlistDrawElement sel a =\n    let selStr s = if sel\n                   then withAttr customAttr (str $ \"<\" <> s <> \">\")\n                   else str s\n    in C.hCenter $ str \"Item \" <+> (selStr $ show a)\n\ninitialState :: L.List () Char\ninitialState = L.list () (Vec.fromList ['a','b','c']) 1\n\ncustomAttr :: A.AttrName\ncustomAttr = L.listSelectedAttr <> \"custom\"\n\ntheMap :: A.AttrMap\ntheMap = A.attrMap V.defAttr\n    [ (L.listAttr,            V.white `on` V.blue)\n    , (L.listSelectedAttr,    V.blue `on` V.white)\n    , (customAttr,            fg V.cyan)\n    ]\n\ntheApp :: M.App (L.List () Char) e ()\ntheApp =\n    M.App { M.appDraw = drawUI\n          , M.appChooseCursor = M.showFirstCursor\n          , M.appHandleEvent = appEvent\n          , M.appStartEvent = return\n          , M.appAttrMap = const theMap\n          }\n\nmain :: IO ()\nmain = void $ M.defaultMain theApp initialState",
    "correctAnswer": "jtdaugherty/brick"
  },
  {
    "filename": "lttb.go",
    "code": "type Point struct{ X, Y float64 }",
    "correctAnswer": "tsenart/vegeta"
  },
  {
    "filename": "generate_parenthesis.py",
    "code": "def generate_parenthesis_v1(n):\n    def add_pair(res, s, left, right):\n        if left == 0 and right == 0:\n            res.append(s)\n            return\n        if right > 0:\n            add_pair(res, s + \")\", left, right - 1)\n        if left > 0:\n            add_pair(res, s + \"(\", left - 1, right + 1)\n\n    res = []\n    add_pair(res, \"\", n, 0)\n    return res\n\n\ndef generate_parenthesis_v2(n):\n    def add_pair(res, s, left, right):\n        if left == 0 and right == 0:\n            res.append(s)\n        if left > 0:\n            add_pair(res, s + \"(\", left - 1, right)\n        if right > 0 and left < right:\n            add_pair(res, s + \")\", left, right - 1)",
    "correctAnswer": "keon/algorithms"
  },
  {
    "filename": "multi_discrete.py",
    "code": "class MultiDiscrete(Space):\n    \"\"\"\n    - The multi-discrete action space consists of a series of discrete action spaces with different number of actions in eachs\n    - It is useful to represent game controllers or keyboards where each key can be represented as a discrete action space\n    - It is parametrized by passing an array of positive integers specifying number of actions for each discrete action space",
    "correctAnswer": "openai/gym"
  },
  {
    "filename": "formatters.py",
    "code": "def lenient_lowercase(lst):\n    \"\"\"Lowercase elements of a list.",
    "correctAnswer": "ansible/ansible"
  },
  {
    "filename": "debughelpers.py",
    "code": "class UnexpectedUnicodeError(AssertionError, UnicodeError):\n    \"\"\"Raised in places where we want some better error reporting for\n    unexpected unicode or binary data.\n    \"\"\"",
    "correctAnswer": "pallets/flask"
  },
  {
    "filename": "__init__.py",
    "code": "def check_and_get_dag(dag_id: str, task_id: Optional[str] = None) -> DagModel:\n    \"\"\"Checks that DAG exists and in case it is specified that Task exist\"\"\"\n    dag_model = DagModel.get_current(dag_id)\n    if dag_model is None:\n        raise DagNotFound(f\"Dag id {dag_id} not found in DagModel\")",
    "correctAnswer": "apache/airflow"
  },
  {
    "filename": "rnn.py",
    "code": "class RecurrentLayer(object):\n    def __init__(self, input_width, state_width,\n                 activator, learning_rate):\n        self.input_width = input_width\n        self.state_width = state_width\n        self.activator = activator\n        self.learning_rate = learning_rate",
    "correctAnswer": "apachecn/ailearning"
  },
  {
    "filename": "manager.py",
    "code": "class PluginManager(list):",
    "correctAnswer": "httpie/httpie"
  },
  {
    "filename": "hadoop_jar.py",
    "code": "def fix_paths(job):\n    \"\"\"\n    Coerce input arguments to use temporary files when used for output.",
    "correctAnswer": "spotify/luigi"
  },
  {
    "filename": "stages.py",
    "code": "class UserTasks(TaskSet):\n    @task\n    def get_root(self):\n        self.client.get(\"/\")",
    "correctAnswer": "locustio/locust"
  },
  {
    "filename": "md-split.py",
    "code": "def main():\n    \"\"\"\n    This script ended up ugly, so in case somebody wants to reimplement, here is the spec that grew by time.",
    "correctAnswer": "isocpp/cppcoreguidelines"
  },
  {
    "filename": "projectdb.py",
    "code": "class ProjectDB(BaseProjectDB):\n    \"\"\"ProjectDB loading scripts from local file.\"\"\"",
    "correctAnswer": "binux/pyspider"
  },
  {
    "filename": "read_launch_plists.py",
    "code": "def LoadPlist(filename):\n    \"\"\"Returns plists read with plistlib.\"\"\"\n    try:\n        proc = subprocess.Popen(\n            [\"/usr/bin/plutil\", \"-convert\", \"xml1\", \"-o\", \"-\", filename],\n            stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        out_data, err_data = proc.communicate()",
    "correctAnswer": "drduh/macos-security-and-privacy-guide"
  },
  {
    "filename": "versionedkeywords.py",
    "code": "def dependencies():\n    singleTimeWarnMessage(\"tamper script '%s' is only meant to be run against %s\" % (os.path.basename(__file__).split(\".\")[0], DBMS.MYSQL))",
    "correctAnswer": "sqlmapproject/sqlmap"
  },
  {
    "filename": "session.py",
    "code": "def _after_fork_cleanup_session(session):\n    session._after_fork()",
    "correctAnswer": "celery/celery"
  },
  {
    "filename": "git_lfs_mistype.py",
    "code": "def match(command):\n    '''\n    Match a mistyped command\n    '''\n    return 'lfs' in command.script and 'Did you mean this?' in command.output",
    "correctAnswer": "nvbn/thefuck"
  },
  {
    "filename": "space2randomblank.py",
    "code": "def dependencies():\n    pass",
    "correctAnswer": "sqlmapproject/sqlmap"
  },
  {
    "filename": "collections.py",
    "code": "class ImmutableDict(Hashable, Mapping):\n    \"\"\"Dictionary that cannot be updated\"\"\"\n    def __init__(self, *args, **kwargs):\n        self._store = dict(*args, **kwargs)",
    "correctAnswer": "ansible/ansible"
  },
  {
    "filename": "mixins.py",
    "code": "class CreateModelMixin:\n    \"\"\"\n    Create a model instance.\n    \"\"\"\n    def create(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n        serializer.is_valid(raise_exception=True)",
    "correctAnswer": "encode/django-rest-framework"
  },
  {
    "filename": "subprocess.py",
    "code": "def process_in_parallel(\n    tag, total_range_size, binary, output_dir, opts=''\n):\n    \"\"\"Run the specified binary cfg.NUM_GPUS times in parallel, each time as a\n    subprocess that uses one GPU. The binary must accept the command line\n    arguments `--range {start} {end}` that specify a data processing range.\n    \"\"\"",
    "correctAnswer": "facebookresearch/detectron"
  },
  {
    "filename": "olmar.py",
    "code": "def initialize(algo, eps=1, window_length=5):\n    algo.stocks = STOCKS\n    algo.sids = [algo.symbol(symbol) for symbol in algo.stocks]\n    algo.m = len(algo.stocks)\n    algo.price = {}\n    algo.b_t = np.ones(algo.m) / algo.m\n    algo.last_desired_port = np.ones(algo.m) / algo.m",
    "correctAnswer": "quantopian/zipline"
  },
  {
    "filename": "charunicodeencode.py",
    "code": "def dependencies():\n    singleTimeWarnMessage(\"tamper script '%s' is only meant to be run against ASP or ASP.NET web applications\" % os.path.basename(__file__).split(\".\")[0])",
    "correctAnswer": "sqlmapproject/sqlmap"
  },
  {
    "filename": "validate_rst_title_capitalization.py",
    "code": "def correct_title_capitalization(title: str) -> str:\n    \"\"\"\n    Algorithm to create the correct capitalization for a given title.",
    "correctAnswer": "pandas-dev/pandas"
  },
  {
    "filename": "redacted_match.py",
    "code": "def match_anywhere(needles, haystack, ignore_case=False):\n    \"\"\"\n    Matches needles anywhere in the path as long as they're in the same (but\n    not necessary consecutive) order.",
    "correctAnswer": "wting/autojump"
  },
  {
    "filename": "middleware.py",
    "code": "def all_casings(input_string):\n    \"\"\"\n    Permute all casings of a given string.",
    "correctAnswer": "miserlou/zappa"
  },
  {
    "filename": "blank_line_calculator.py",
    "code": "def CalculateBlankLines(tree):\n  \"\"\"Run the blank line calculator visitor over the tree.",
    "correctAnswer": "google/yapf"
  },
  {
    "filename": "bench_random.py",
    "code": "class Random(Benchmark):\n    params = ['normal', 'uniform', 'weibull 1', 'binomial 10 0.5',\n              'poisson 10']",
    "correctAnswer": "numpy/numpy"
  },
  {
    "filename": "zhibo.py",
    "code": "def zhibo_vedio_download(url, output_dir = '.', merge = True, info_only = False, **kwargs):\n    # http://video.zhibo.tv/video/details/d103057f-663e-11e8-9d83-525400ccac43.html",
    "correctAnswer": "soimort/you-get"
  },
  {
    "filename": "refresh.py",
    "code": "class RefreshDatasetCommand(BaseCommand):\n    def __init__(self, user: User, model_id: int):\n        self._actor = user\n        self._model_id = model_id\n        self._model: Optional[SqlaTable] = None",
    "correctAnswer": "apache/incubator-superset"
  },
  {
    "filename": "django_redacted.py",
    "code": "def get_django_wsgi(settings_module):\n    from django.core.wsgi import get_wsgi_application\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", settings_module)",
    "correctAnswer": "miserlou/zappa"
  },
  {
    "filename": "maskrcnn_model.py",
    "code": "class MaskRCNNModel(tf.keras.Model):\n  \"\"\"The Mask R-CNN model.\"\"\"",
    "correctAnswer": "tensorflow/models"
  },
  {
    "filename": "phoenix.py",
    "code": "class Phoenix(BaseQueryRunner):\n    noop_query = \"select 1\"",
    "correctAnswer": "getredash/redash"
  },
  {
    "filename": "redacted_autodoc.py",
    "code": "def formatvalue(val):\n\tif type(val) is str:\n\t\treturn '=\"' + unicode(val, 'utf-8').replace('\"', '\\\\\"').replace('\\\\', '\\\\\\\\') + '\"'\n\telse:\n\t\treturn '=' + repr(val)",
    "correctAnswer": "powerline/powerline"
  },
  {
    "filename": "exception.py",
    "code": "class redactedError(Exception):\n    pass",
    "correctAnswer": "locustio/locust"
  },
  {
    "filename": "s3server.py",
    "code": "define(\"port\", default=9888, help=\"TCP port to listen on\")\ndefine(\"root_directory\", default=\"/tmp/s3\", help=\"Root storage directory\")\ndefine(\"bucket_depth\", default=0, help=\"Bucket file system depth limit\")",
    "correctAnswer": "tornadoweb/tornado"
  },
  {
    "filename": "es_starter.py",
    "code": "def delete_all_elasticsearch_data(version):\n    \"\"\" This function drops ALL data in the local Elasticsearch data folder. Use with caution! \"\"\"\n    base_dir = install.get_elasticsearch_install_dir(version)\n    data_dir = os.path.join(base_dir, 'data', 'elasticsearch', 'nodes')\n    rm_rf(data_dir)",
    "correctAnswer": "localstack/localstack"
  },
  {
    "filename": "sort_services.py",
    "code": "def get_service_name_from_network_mode(network_mode):\n    return get_source_name_from_network_mode(network_mode, 'service')",
    "correctAnswer": "docker/compose"
  },
  {
    "filename": "jsonrpc.py",
    "code": "class JsonRpcServer(object):",
    "correctAnswer": "ansible/ansible"
  },
  {
    "filename": "filter.py",
    "code": "class redactedFilter(object):",
    "correctAnswer": "nicolargo/glances"
  },
  {
    "filename": "lightsail.py",
    "code": "def create_instance(module, client, instance_name):\n    \"\"\"\n    Create an instance",
    "correctAnswer": "trailofbits/algo"
  },
  {
    "filename": "example.py",
    "code": "class ToyModel(nn.Module):\n    def __init__(self):\n        super(ToyModel, self).__init__()\n        self.net1 = nn.Linear(10, 10)\n        self.relu = nn.ReLU()\n        self.net2 = nn.Linear(10, 5)",
    "correctAnswer": "pytorch/examples"
  },
  {
    "filename": "display_ops.py",
    "code": "def select_vhost_multiple(vhosts):\n    \"\"\"Select multiple Vhosts to install the certificate for",
    "correctAnswer": "certbot/certbot"
  },
  {
    "filename": "mask_rcnn.py",
    "code": "def add_mask_rcnn_blobs(blobs, sampled_boxes, roidb, im_scale, batch_idx):\n    \"\"\"Add Mask R-CNN specific blobs to the input blob dictionary.\"\"\"\n    # Prepare the mask targets by associating one gt mask to each training roi\n    # that has a fg (non-bg) class label.\n    M = cfg.MRCNN.RESOLUTION\n    polys_gt_inds = np.where(\n        (roidb['gt_classes'] > 0) & (roidb['is_crowd'] == 0)",
    "correctAnswer": "facebookresearch/detectron"
  },
  {
    "filename": "data_transforming_customjs_transform.py",
    "code": "def datetime(x):\n    return np.array(x, dtype=np.datetime64)",
    "correctAnswer": "bokeh/bokeh"
  },
  {
    "filename": "files.py",
    "code": "def _GetSystemPath():\n  \"\"\"Returns properly encoded system PATH variable string.\"\"\"\n  return encoding_util.GetEncodedValue(os.environ, 'PATH')",
    "correctAnswer": "google/python-fire"
  },
  {
    "filename": "tutorial001.py",
    "code": "class Item(BaseModel):\n    name: str\n    description: Optional[str] = None\n    price: float\n    tax: Optional[float] = None\n    tags: Set[str] = []",
    "correctAnswer": "tiangolo/fastapi"
  },
  {
    "filename": "taskdb.py",
    "code": "class TaskDB(object):\n    ACTIVE = 1\n    SUCCESS = 2\n    FAILED = 3\n    BAD = 4",
    "correctAnswer": "binux/pyspider"
  },
  {
    "filename": "ifnull2ifisnull.py",
    "code": "def dependencies():\n    pass",
    "correctAnswer": "sqlmapproject/sqlmap"
  },
  {
    "filename": "cffi_opcode.py",
    "code": "class CffiOp(object):\n    def __init__(self, op, arg):\n        self.op = op\n        self.arg = arg",
    "correctAnswer": "xx-net/xx-net"
  },
  {
    "filename": "wsgi.py",
    "code": "def to_wsgi_str(s: bytes) -> str:\n    assert isinstance(s, bytes)\n    return s.decode(\"latin1\")",
    "correctAnswer": "tornadoweb/tornado"
  },
  {
    "filename": "add_host.py",
    "code": "class ActionModule(ActionBase):\n    ''' Create inventory hosts and groups in the memory inventory'''",
    "correctAnswer": "ansible/ansible"
  },
  {
    "filename": "__init__.py",
    "code": "def __getattr__(name):\n    import warnings",
    "correctAnswer": "pandas-dev/pandas"
  },
  {
    "filename": "tf_example_decoder.py",
    "code": "class TfExampleDecoder(object):\n  \"\"\"redacted Example proto decoder.\"\"\"",
    "correctAnswer": "tensorflow/models"
  },
  {
    "filename": "light.py",
    "code": "class AbodeLight(AbodeDevice, LightEntity):\n    \"\"\"Representation of an Abode light.\"\"\"",
    "correctAnswer": "home-assistant/core"
  },
  {
    "filename": "track_allocations.py",
    "code": "class AllocationTracker:\n    def __init__(self, threshold=0):\n        '''track redacted allocations of size threshold bytes or more.'''",
    "correctAnswer": "numpy/numpy"
  },
  {
    "filename": "templating.py",
    "code": "def _default_template_ctx_processor():\n    \"\"\"Default template context processor.  Injects `request`,\n    `session` and `g`.\n    \"\"\"\n    reqctx = _request_ctx_stack.top\n    appctx = _app_ctx_stack.top\n    rv = {}",
    "correctAnswer": "pallets/flask"
  },
  {
    "filename": "expressions.py",
    "code": "def set_use_numexpr(v=True):\n    # set/unset to use numexpr\n    global USE_NUMEXPR\n    if NUMEXPR_INSTALLED:\n        USE_NUMEXPR = v",
    "correctAnswer": "pandas-dev/pandas"
  },
  {
    "filename": "gen_latex_symbols.py",
    "code": "def test_ident(i):\n    \"\"\"Is the unicode string valid in a Python 3 identifier.\"\"\"\n    # Some characters are not valid at the start of a name, but we still want to\n    # include them. So prefix with 'a', which is valid at the start.\n    return ('a' + i).isidentifier()",
    "correctAnswer": "ipython/ipython"
  },
  {
    "filename": "linode_stackscript_v4.py",
    "code": "def create_stackscript(module, client, **kwargs):\n    \"\"\"Creates a stackscript and handles return format.\"\"\"\n    try:\n        response = client.linode.stackscript_create(**kwargs)\n        return response._raw_json\n    except Exception as exception:\n        module.fail_json(msg='Unable to query the Linode API. Saw: %s' % exception)",
    "correctAnswer": "trailofbits/algo"
  },
  {
    "filename": "diagnostics.py",
    "code": "def generate_cutoffs(df, horizon, initial, period):\n    \"\"\"Generate cutoff dates",
    "correctAnswer": "facebook/prophet"
  },
  {
    "filename": "release.py",
    "code": "def task(message: str):\n    \"\"\"A little thing to allow for nicer code organization.\"\"\"\n    global _INDENT",
    "correctAnswer": "toml-lang/toml"
  },
  {
    "filename": "bddc498dd179_adhoc_filters.py",
    "code": "class Slice(Base):\n    __tablename__ = \"slices\"",
    "correctAnswer": "apache/incubator-superset"
  },
  {
    "filename": "flyweight.py",
    "code": "class Card:\n    \"\"\"The Flyweight\"\"\"",
    "correctAnswer": "faif/python-patterns"
  },
  {
    "filename": "_global.py",
    "code": "def parse_globals(source, anon_name):\n    for srcinfo in source:\n        m = GLOBAL_RE.match(srcinfo.text)\n        if not m:\n            # We need more text.\n            continue\n        for item in _parse_next(m, srcinfo, anon_name):",
    "correctAnswer": "python/cpython"
  },
  {
    "filename": "updateredactedFile.py",
    "code": "def get_defaults():\n    \"\"\"\n    Helper method for getting the default settings.",
    "correctAnswer": "stevenblack/hosts"
  },
  {
    "filename": "letsencrypt.py",
    "code": "def get_cert_and_update_domain(\n                                redacted_instance,\n                                lambda_name,\n                                api_stage,\n                                domain=None,\n                                manual=False,\n                            ):",
    "correctAnswer": "miserlou/zappa"
  },
  {
    "filename": "models.py",
    "code": "class IStanBackend(ABC):\n    def __init__(self):\n        self.model = self.load_model()\n        self.stan_fit = None\n        self.newton_fallback = True",
    "correctAnswer": "facebook/prophet"
  },
  {
    "filename": "missing_space_before_subcommand.py",
    "code": "def _get_executable(script_part):\n    for executable in get_all_executables():\n        if script_part.startswith(executable):\n            return executable",
    "correctAnswer": "nvbn/thefuck"
  },
  {
    "filename": "wttr.py",
    "code": "def get_wetter(parsed_query):",
    "correctAnswer": "chubin/wttr.in"
  },
  {
    "filename": "tasks.py",
    "code": "def add(x, y):\n    return x + y",
    "correctAnswer": "celery/celery"
  },
  {
    "filename": "scan_ex2_solution.py",
    "code": "def sample_from_pvect(pvect):\n    \"\"\" Provided utility function: given a symbolic vector of\n    probabilities (which MUST sum to 1), sample one element\n    and return its index.\n    \"\"\"\n    onehot_sample = rng.multinomial(n=1, pvals=pvect)\n    sample = onehot_sample.argmax()",
    "correctAnswer": "donnemartin/data-science-ipython-notebooks"
  },
  {
    "filename": "search.py",
    "code": "def _limited_entry():\n    return {\n        'topic_type': 'LIMITED',\n        \"topic\": \"LIMITED\",\n        'answer': \"LIMITED TO %s ANSWERS\" % CONFIG['search.limit'],\n        'format': \"code\",\n    }",
    "correctAnswer": "chubin/cheat.sh"
  },
  {
    "filename": "tor_manager.py",
    "code": "class SocksOnlyTor(object):\n    _reactor = attrib()",
    "correctAnswer": "warner/magic-wormhole"
  },
  {
    "filename": "ses_starter.py",
    "code": "def apply_patches():\n    def get_source_from_raw(raw_data):\n        entities = raw_data.split('\\n')\n        for entity in entities:\n            if 'From: ' in entity:\n                return entity.replace('From: ', '').strip()",
    "correctAnswer": "localstack/localstack"
  },
  {
    "filename": "customjs_transform.py",
    "code": "def datetime(x):\n    return np.array(x, dtype=np.datetime64)",
    "correctAnswer": "bokeh/bokeh"
  },
  {
    "filename": "_implementation.py",
    "code": "class CertificateError(ValueError):\n    pass",
    "correctAnswer": "xx-net/xx-net"
  },
  {
    "filename": "pre_5.py",
    "code": "class IPythonPre50Renderer(IPythonRenderer, ShellRenderer):\n\t'''redacted ipython segment renderer for pre-5.0 IPython versions.'''\n\tdef render(self, **kwargs):\n\t\t# XXX super(ShellRenderer), *not* super(IPythonPre50Renderer)\n\t\treturn super(ShellRenderer, self).render(**kwargs)",
    "correctAnswer": "powerline/powerline"
  },
  {
    "filename": "binary_sensor.py",
    "code": "def setup_platform(hass, config, add_entities, discovery_info=None):\n    \"\"\"Set up the Raspberry PI GPIO devices.\"\"\"\n    address = config[\"host\"]\n    invert_logic = config[CONF_INVERT_LOGIC]\n    pull_mode = config[CONF_PULL_MODE]\n    ports = config[\"ports\"]\n    bouncetime = config[CONF_BOUNCETIME] / 1000",
    "correctAnswer": "home-assistant/core"
  },
  {
    "filename": "_compat.py",
    "code": "default_logger = logging.getLogger(__name__)\ndefault_logger.setLevel(logging.DEBUG)",
    "correctAnswer": "fxsjy/jieba"
  },
  {
    "filename": "redacted_cassandra.py",
    "code": "class Export(redactedExport):",
    "correctAnswer": "nicolargo/glances"
  },
  {
    "filename": "aliquot_sum.py",
    "code": "def aliquot_sum(input_num: int) -> int:\n    \"\"\"\n    Finds the aliquot sum of an input integer, where the\n    aliquot sum of a number n is defined as the sum of all\n    natural numbers less than n that divide n evenly. For\n    example, the aliquot sum of 15 is 1 + 3 + 5 = 9. This is\n    a simple O(n) implementation.",
    "correctAnswer": "thealgorithms/python"
  },
  {
    "filename": "imp.py",
    "code": "class WithPath(object):\n\tdef __init__(self, import_paths):\n\t\tself.import_paths = import_paths",
    "correctAnswer": "powerline/powerline"
  },
  {
    "filename": "gen-glyphinfo.py",
    "code": "def rgbaToCSSColor(r=0, g=0, b=0, a=1):\n  R,G,B = int(r * 255), int(g * 255), int(b * 255)\n  if a == 1:\n    return '#%02x%02x%02x' % (R,G,B)\n  else:\n    return 'rgba(%d,%d,%d,%g)' % (R,G,B,a)",
    "correctAnswer": "rsms/inter"
  },
  {
    "filename": "nodenames.py",
    "code": "def worker_direct(hostname):\n    \"\"\"Return the :class:`kombu.Queue` being a direct route to a worker.",
    "correctAnswer": "celery/celery"
  },
  {
    "filename": "datadog_metric.py",
    "code": "class datadog(Config):\n    api_key = parameter.Parameter(default='dummy_api_key', description='API key provided by Datadog')\n    app_key = parameter.Parameter(default='dummy_app_key', description='APP key provided by Datadog')\n    default_tags = parameter.Parameter(default='application:redacted', description='Default tags for every events and metrics sent to Datadog')\n    environment = parameter.Parameter(default='development', description=\"Environment of which the pipeline is ran from (eg: 'production', 'staging', ...\")\n    metric_namespace = parameter.Parameter(default='redacted', description=\"Default namespace for events and metrics (eg: 'redacted' for 'redacted.task.started')\")\n    statsd_host = parameter.Parameter(default='localhost', description='StatsD host implementing the Datadog service')",
    "correctAnswer": "spotify/luigi"
  },
  {
    "filename": "download.py",
    "code": "def download_pdf(link, location, name):\n    try:\n        response = requests.get(link)\n        with open(os.path.join(location, name), 'wb') as f:\n        \tf.write(response.content)\n        \tf.close()\n    except HTTPError:",
    "correctAnswer": "floodsung/Deep-Learning-Papers-Reading-Roadmap"
  },
  {
    "filename": "custom_wait_function.py",
    "code": "def index(l):\n    l.client.get(\"/\")",
    "correctAnswer": "locustio/locust"
  },
  {
    "filename": "linode_v4.py",
    "code": "def create_linode(module, client, **kwargs):\n    \"\"\"Creates a Linode instance and handles return format.\"\"\"\n    if kwargs['root_pass'] is None:\n        kwargs.pop('root_pass')",
    "correctAnswer": "trailofbits/algo"
  },
  {
    "filename": "xfer_util.py",
    "code": "def receive(reactor,\n            appid,\n            relay_url,\n            code,\n            use_tor=False,\n            launch_tor=False,\n            tor_control_port=None,",
    "correctAnswer": "warner/magic-wormhole"
  },
  {
    "filename": "rnn.py",
    "code": "def _call_method(method, rref, *args, **kwargs):\n    r\"\"\"\n    a helper function to call a method on the given RRef\n    \"\"\"\n    return method(rref.local_value(), *args, **kwargs)",
    "correctAnswer": "pytorch/examples"
  },
  {
    "filename": "ChangeUPM.py",
    "code": "def scalePoints(glyph, factor):\n    if version == \"1.4\":\n        # stupid workaround for bug in RoboFont 1.4\n        for contour in glyph:\n            for point in contour.points:\n                point.x *= factor\n                point.y *= factor",
    "correctAnswer": "rsms/inter"
  },
  {
    "filename": "build.py",
    "code": "def step_set_font_name(name: str, source: ufoLib2.Font) -> None:\n    source.info.familyName = source.info.familyName.replace(\"Cascadia Code\", name)\n    # We have to change the style map family name because that's what\n    # Windows uses to map Bold/Regular/Medium/etc. fonts\n    source.info.styleMapFamilyName = source.info.styleMapFamilyName.replace(\"Cascadia Code\", name)",
    "correctAnswer": "microsoft/cascadia-code"
  },
  {
    "filename": "organization_integration_repos.py",
    "code": "class OrganizationIntegrationReposEndpoint(OrganizationIntegrationBaseEndpoint):\n    permission_classes = (OrganizationIntegrationsPermission,)",
    "correctAnswer": "getsentry/sentry"
  },
  {
    "filename": "manual.py",
    "code": "class ManualBot(Connector):",
    "correctAnswer": "wangshub/wechat_jump_game"
  },
  {
    "filename": "brat_tag.py",
    "code": "def from_ann2dic(r_ann_path, r_txt_path, w_path):\n    q_dic = {}\n    print(\"开始读取文件:%s\" % r_ann_path)\n    with open(r_ann_path, \"r\", encoding=\"utf-8\") as f:\n        lines = f.readlines()\n        for line in lines:\n            line_arr = line.split()",
    "correctAnswer": "apachecn/ailearning"
  },
  {
    "filename": "faster_rcnn_inception_resnet_v2_keras_feature_extractor.py",
    "code": "class FasterRCNNInceptionResnetV2KerasFeatureExtractor(\n    faster_rcnn_meta_arch.FasterRCNNKerasFeatureExtractor):\n  \"\"\"Faster R-CNN with Inception Resnet v2 feature extractor implementation.\"\"\"",
    "correctAnswer": "tensorflow/models"
  },
  {
    "filename": "get_all_links.py",
    "code": "def check_live_url(url):",
    "correctAnswer": "0xAX/linux-insides"
  },
  {
    "filename": "safestring.py",
    "code": "class SafeData:\n    def __html__(self):\n        \"\"\"\n        Return the html representation of a string for interoperability.",
    "correctAnswer": "django/django"
  },
  {
    "filename": "concurrent.py",
    "code": "class ReturnValueIgnoredError(Exception):\n    # No longer used; was previously used by @return_future\n    pass",
    "correctAnswer": "tornadoweb/tornado"
  },
  {
    "filename": "timeparse.py",
    "code": "def opt(x):\n    return r'(?:{x})?'.format(x=x)",
    "correctAnswer": "docker/compose"
  },
  {
    "filename": "nearest_neighbor.py",
    "code": "def distance(x,y):\n    \"\"\"[summary]\n    HELPER-FUNCTION\n    calculates the (eulidean) distance between vector x and y.",
    "correctAnswer": "keon/algorithms"
  },
  {
    "filename": "json_item.py",
    "code": "def make_plot(x, y):\n    p = figure(title = \"Iris Morphology\", sizing_mode=\"fixed\", plot_width=400, plot_height=400)\n    p.xaxis.axis_label = x\n    p.yaxis.axis_label = y\n    p.circle(flowers[x], flowers[y], color=colors, fill_alpha=0.2, size=10)\n    return p",
    "correctAnswer": "bokeh/bokeh"
  },
  {
    "filename": "config.py",
    "code": "def get_default_config_dir() -> Path:\n    \"\"\"\n    Return the path to the redacted configuration directory.",
    "correctAnswer": "httpie/httpie"
  },
  {
    "filename": "redacted_utils.py",
    "code": "def create_dir(path):\n    \"\"\"Creates a directory atomically.\"\"\"\n    try:\n        os.makedirs(path)\n    except OSError as exception:\n        if exception.errno != errno.EEXIST:\n            raise",
    "correctAnswer": "wting/autojump"
  },
  {
    "filename": "unchained.py",
    "code": "def update(*args):\n    # Shift all data to the right\n    data[:, 1:] = data[:, :-1]",
    "correctAnswer": "matplotlib/matplotlib"
  },
  {
    "filename": "screenshot.py",
    "code": "def pull_screenshot():\n    \"\"\"\n    获取屏幕截图，目前有 0 1 2 3 四种方法，未来添加新的平台监测方法时，\n    可根据效率及适用性由高到低排序\n    \"\"\"\n    global SCREENSHOT_WAY\n    if 1 <= SCREENSHOT_WAY <= 3:",
    "correctAnswer": "wangshub/wechat_jump_game"
  },
  {
    "filename": "torchscript.py",
    "code": "def export_torchscript_with_instances(model, fields):\n    \"\"\"\n    Run :func:`torch.jit.script` on a model that uses the :class:`Instances` class. Since\n    attributes of :class:`Instances` are \"dynamically\" added in eager mode，it is difficult\n    for torchscript to support it out of the box. This function is made to support scripting\n    a model that uses :class:`Instances`. It does the following:",
    "correctAnswer": "facebookresearch/detectron2"
  },
  {
    "filename": "roi_align.py",
    "code": "class ROIAlign(nn.Module):\n    def __init__(self, output_size, spatial_scale, sampling_ratio, aligned=True):\n        \"\"\"\n        Args:\n            output_size (tuple): h, w\n            spatial_scale (float): scale the input boxes by this number\n            sampling_ratio (int): number of inputs samples to take for each output",
    "correctAnswer": "facebookresearch/detectron2"
  },
  {
    "filename": "4b84f97828aa_security_converge_logs.py",
    "code": "def upgrade():\n    bind = op.get_bind()\n    session = Session(bind=bind)",
    "correctAnswer": "apache/incubator-superset"
  },
  {
    "filename": "view.py",
    "code": "def api_deskdotcom_webhook(request: HttpRequest, user_profile: UserProfile,\n                           data: str=REQ()) -> HttpResponse:\n    topic = \"Desk.com notification\"\n    check_send_webhook_message(request, user_profile, topic, data)\n    return json_success()",
    "correctAnswer": "zulip/zulip"
  },
  {
    "filename": "init_security.py",
    "code": "def init_xframe_protection(app):\n    \"\"\"\n    Add X-Frame-Options header. Use it to avoid click-jacking attacks, by ensuring that their content is not\n    embedded into other sites.",
    "correctAnswer": "apache/airflow"
  },
  {
    "filename": "utils.py",
    "code": "def load_json_preserve_order(s):\n    return json.loads(s, object_pairs_hook=OrderedDict)",
    "correctAnswer": "httpie/httpie"
  },
  {
    "filename": "couchdbbase.py",
    "code": "class SplitTableMixin(object):\n    UPDATE_PROJECTS_TIME = 10 * 60",
    "correctAnswer": "binux/pyspider"
  },
  {
    "filename": "authmodule.py",
    "code": "def lambda_handler(event, context):\n    print(\"Client token: \" + event['authorizationToken'])\n    print(\"Method ARN: \" + event['methodArn'])\n    \"\"\"validate the incoming token\"\"\"\n    \"\"\"and produce the principal user identifier associated with the token\"\"\"",
    "correctAnswer": "miserlou/zappa"
  },
  {
    "filename": "tf_example_parser.py",
    "code": "class FloatParser(data_parser.DataToNumpyParser):\n  \"\"\"redacted Example float parser.\"\"\"",
    "correctAnswer": "tensorflow/models"
  },
  {
    "filename": "gen-glyphorder.py",
    "code": "def parseGlyphComposition(composite):\n  c = composite.split(\"=\")\n  d = c[1].split(\"/\")\n  glyphName = d[0]\n  if len(d) == 1:\n    offset = [0, 0]\n  else:",
    "correctAnswer": "rsms/inter"
  },
  {
    "filename": "sync_api_key.py",
    "code": "class Command(BaseCommand):\n    help = \"\"\"Sync your API key from ~/.redactedrc into your development instance\"\"\"",
    "correctAnswer": "zulip/zulip"
  },
  {
    "filename": "pastebin.py",
    "code": "class HitCounts(MRJob):",
    "correctAnswer": "donnemartin/system-design-primer"
  },
  {
    "filename": "absoft.py",
    "code": "class AbsoftFCompiler(FCompiler):",
    "correctAnswer": "numpy/numpy"
  },
  {
    "filename": "redacted_data.py",
    "code": "def dictify(entries):\n    \"\"\"\n    Converts a list of entries into a dictionary where\n        key = path\n        value = weight\n    \"\"\"\n    result = {}",
    "correctAnswer": "wting/autojump"
  },
  {
    "filename": "gnomedesktop.py",
    "code": "def __virtual__():\n    \"\"\"\n    Only load if the Gio and Glib modules are available\n    \"\"\"\n    if HAS_PWD and HAS_GLIB:\n        return __virtualname__\n    return (",
    "correctAnswer": "saltstack/salt"
  },
  {
    "filename": "top_1.py",
    "code": "def top_1(arr):\n    values = {}\n    #reserve each value which first appears on keys\n    #reserve how many time each value appears by index number on values\n    result = []\n    f_val = 0",
    "correctAnswer": "keon/algorithms"
  },
  {
    "filename": "decorators.py",
    "code": "def SetParseFn(fn, *arguments):\n  \"\"\"Sets the fn for Fire to use to parse args when calling the decorated fn.",
    "correctAnswer": "google/python-fire"
  },
  {
    "filename": "optimizer.py",
    "code": "def build_data_parallel_model(model, single_gpu_build_func):\n    \"\"\"Build a data parallel model given a function that builds the model on a\n    single GPU.\n    \"\"\"\n    if model.only_build_forward_pass:\n        single_gpu_build_func(model)\n    elif model.train:",
    "correctAnswer": "facebookresearch/detectron"
  },
  {
    "filename": "auditlogentry.py",
    "code": "def fix(data):\n    # There was a point in time where full Team objects\n    # got serialized into our AuditLogEntry.data, so these\n    # values need to be stripped and reduced down to integers\n    if data.get(\"teams\"):\n        if hasattr(data[\"teams\"][0], \"id\"):\n            data[\"teams\"] = [t.id for t in data[\"teams\"]]",
    "correctAnswer": "getsentry/sentry"
  },
  {
    "filename": "object_state.py",
    "code": "class ComprehensionState(object):\n  \"\"\"Maintains the state of list comprehension formatting decisions.",
    "correctAnswer": "google/yapf"
  },
  {
    "filename": "query_result.py",
    "code": "def _convert_format(fmt):\n    return (\n        fmt.replace(\"DD\", \"%d\")\n        .replace(\"MM\", \"%m\")\n        .replace(\"YYYY\", \"%Y\")\n        .replace(\"YY\", \"%y\")\n        .replace(\"HH\", \"%H\")",
    "correctAnswer": "getredash/redash"
  },
  {
    "filename": "shimmodule.py",
    "code": "class ShimWarning(Warning):\n    \"\"\"A warning to show when a module has moved, and a shim is in its place.\"\"\"",
    "correctAnswer": "ipython/ipython"
  },
  {
    "filename": "web_crawler_mapreduce.py",
    "code": "class RemoveDuplicateUrls(MRJob):",
    "correctAnswer": "donnemartin/system-design-primer"
  },
  {
    "filename": "tfidf.py",
    "code": "class KeywordExtractor(object):",
    "correctAnswer": "fxsjy/jieba"
  },
  {
    "filename": "cpplint.py",
    "code": "def GetHeaderExtensions():\n  if not _header_extensions:\n    return set(['h', 'hpp', 'hxx', 'h++', 'cuh'])\n  return _header_extensions",
    "correctAnswer": "isocpp/cppcoreguidelines"
  },
  {
    "filename": "pacman_invalid_option.py",
    "code": "def match(command):\n    return command.output.startswith(\"error: invalid option '-\") and any(\n        \" -{}\".format(option) in command.script for option in \"surqfdvt\"\n    )",
    "correctAnswer": "nvbn/thefuck"
  },
  {
    "filename": "plot_rbm_logistic_classification.py",
    "code": "classification accuracy.\n\"\"\"\nprint(__doc__)",
    "correctAnswer": "scikit-learn/scikit-learn"
  },
  {
    "filename": "_terminator.py",
    "code": "class Terminator(object):\n    m = MethodicalMachine()\n    set_trace = getattr(m, \"_setTrace\",\n                        lambda self, f: None)  # pragma: no cover",
    "correctAnswer": "warner/magic-wormhole"
  },
  {
    "filename": "decisionTreePlot.py",
    "code": "def getNumLeafs(myTree):\n    numLeafs = 0\n    firstStr = list(myTree.keys())[0]\n    secondDict = myTree[firstStr]\n    # 根节点开始遍历\n    for key in secondDict.keys():\n        # 判断子节点是否为dict, 不是+1",
    "correctAnswer": "apachecn/ailearning"
  },
  {
    "filename": "ugly_numbers.py",
    "code": "def ugly_numbers(n: int) -> int:\n    \"\"\"\n    Returns the nth ugly number.\n    >>> ugly_numbers(100)\n    1536\n    >>> ugly_numbers(0)\n    1",
    "correctAnswer": "thealgorithms/python"
  },
  {
    "filename": "plot.py",
    "code": "def plot(\n    m, fcst, ax=None, uncertainty=True, plot_cap=True, xlabel='ds', ylabel='y',\n    figsize=(10, 6)\n):\n    \"\"\"Plot the redacted forecast.",
    "correctAnswer": "facebook/prophet"
  },
  {
    "filename": "vagrant_up.py",
    "code": "def match(command):\n    return 'run `vagrant up`' in command.output.lower()",
    "correctAnswer": "nvbn/thefuck"
  },
  {
    "filename": "representation.py",
    "code": "def manager_repr(value):\n    model = value.model\n    opts = model._meta\n    names_and_managers = [\n        (manager.name, manager)\n        for manager\n        in opts.managers",
    "correctAnswer": "encode/django-rest-framework"
  },
  {
    "filename": "constants.py",
    "code": "class RequestType(enum.Enum):\n    FORM = enum.auto()\n    MULTIPART = enum.auto()\n    JSON = enum.auto()",
    "correctAnswer": "httpie/httpie"
  },
  {
    "filename": "connect_creator.py",
    "code": "class ConnectCreator(object):\n    def __init__(self, logger, config, openssl_context, host_manager,\n                 timeout=5, debug=False,\n                 check_cert=None):\n        self.logger = logger\n        self.config = config\n        self.openssl_context = openssl_context",
    "correctAnswer": "xx-net/xx-net"
  },
  {
    "filename": "tabs.py",
    "code": "class Tab(urwid.WidgetWrap):",
    "correctAnswer": "mitmproxy/mitmproxy"
  },
  {
    "filename": "redacted_diff.py",
    "code": "def main():\n  parser = argparse.ArgumentParser(\n      description=__doc__, formatter_class=argparse.RawDescriptionHelpFormatter)\n  parser.add_argument(\n      '-i',\n      '--in-place',\n      action='store_true',",
    "correctAnswer": "google/yapf"
  },
  {
    "filename": "resample.py",
    "code": "class DataDisplayDownsampler:\n    def __init__(self, xdata, ydata):\n        self.origYData = ydata\n        self.origXData = xdata\n        self.max_points = 50\n        self.delta = xdata[-1] - xdata[0]",
    "correctAnswer": "matplotlib/matplotlib"
  },
  {
    "filename": "file_resources.py",
    "code": "def _GetExcludePatternsFromFile(filename):\n  \"\"\"Get a list of file patterns to ignore.\"\"\"\n  ignore_patterns = []\n  # See if we have a .redactedignore file.\n  if os.path.isfile(filename) and os.access(filename, os.R_OK):\n    with open(filename, 'r') as fd:\n      for line in fd:",
    "correctAnswer": "google/yapf"
  },
  {
    "filename": "info.py",
    "code": "def updateFontVersion(font, dummy, isVF):\n  if dummy:\n    version = \"1.0\"\n    buildtag = \"src\"\n    now = datetime(2016, 1, 1, 0, 0, 0, 0)\n  else:\n    version = getVersion()",
    "correctAnswer": "rsms/inter"
  },
  {
    "filename": "multipart_content.py",
    "code": "def _iter_multipart_parts(some_bytes, boundary):\n    \"\"\" Generate a stream of dicts and bytes for each message part.",
    "correctAnswer": "localstack/localstack"
  },
  {
    "filename": "model.py",
    "code": "def default_hparams():\n    return HParams(\n        n_vocab=0,\n        n_ctx=1024,\n        n_embd=768,\n        n_head=12,\n        n_layer=12,",
    "correctAnswer": "openai/gpt-2"
  },
  {
    "filename": "unsubscribe_notifications.py",
    "code": "class UnsubscribeBaseView(BaseView):\n    auth_required = False",
    "correctAnswer": "getsentry/sentry"
  },
  {
    "filename": "gcp_compute_location_info.py",
    "code": "def main():\n    module = GcpModule(argument_spec=dict(filters=dict(type='list', elements='str'), scope=dict(required=True, type='str')))",
    "correctAnswer": "trailofbits/algo"
  },
  {
    "filename": "describe.py",
    "code": "def describe_ndframe(\n    *,\n    obj: FrameOrSeries,\n    include: Optional[Union[str, Sequence[str]]],\n    exclude: Optional[Union[str, Sequence[str]]],\n    datetime_is_numeric: bool,\n    percentiles: Optional[Sequence[float]],",
    "correctAnswer": "pandas-dev/pandas"
  },
  {
    "filename": "dead_letter_queue.py",
    "code": "def sqs_error_to_dead_letter_queue(queue_arn, event, error):\n    client = aws_stack.connect_to_service('sqs')\n    queue_url = aws_stack.get_sqs_queue_url(queue_arn)\n    attrs = client.get_queue_attributes(QueueUrl=queue_url, AttributeNames=['RedrivePolicy'])\n    attrs = attrs.get('Attributes', {})\n    try:\n        policy = json.loads(attrs.get('RedrivePolicy') or '{}')",
    "correctAnswer": "localstack/localstack"
  },
  {
    "filename": "double_wave.py",
    "code": "class UserTasks(TaskSet):\n    @task\n    def get_root(self):\n        self.client.get(\"/\")",
    "correctAnswer": "locustio/locust"
  },
  {
    "filename": "geo.py",
    "code": "def geo_by_addr(ip):\n    pass",
    "correctAnswer": "getsentry/sentry"
  },
  {
    "filename": "extensions.py",
    "code": "def entry_point_loader(group_name, mapping, logger=None, *args, **kwargs):\n    \"\"\"\n    Loads the list Python entry points with the given entry point group name\n    (e.g. \"redacted.extensions\"), calls each with the provided *args/**kwargs\n    arguments and stores the results in the provided mapping under the name\n    of the entry point.",
    "correctAnswer": "getredash/redash"
  },
  {
    "filename": "uninstall.py",
    "code": "def is_empty_dir(path):\n    \"\"\"\n    Checks if any files are present within a directory and all sub-directories.\n    \"\"\"\n    for _, _, files in os.walk(path):\n        if files:\n            return False",
    "correctAnswer": "wting/autojump"
  },
  {
    "filename": "textrank.py",
    "code": "class UndirectWeightedGraph:\n    d = 0.85",
    "correctAnswer": "fxsjy/jieba"
  },
  {
    "filename": "redemo.py",
    "code": "class ReDemo:",
    "correctAnswer": "python/cpython"
  },
  {
    "filename": "makeredacted.py",
    "code": "def print_failure(msg):\n    \"\"\"\n    Print a failure message.",
    "correctAnswer": "stevenblack/hosts"
  },
  {
    "filename": "redacted_influxdb.py",
    "code": "class Export(redactedExport):\n    \"\"\"This class manages the InfluxDB export module.\"\"\"",
    "correctAnswer": "nicolargo/glances"
  },
  {
    "filename": "publish_subscribe.py",
    "code": "class Provider:\n    def __init__(self):\n        self.msg_queue = []\n        self.subscribers = {}",
    "correctAnswer": "faif/python-patterns"
  },
  {
    "filename": "failure_report.py",
    "code": "def key(user_id):\n    return \"aggregated_failures:{}\".format(user_id)",
    "correctAnswer": "getredash/redash"
  },
  {
    "filename": "ssl.py",
    "code": "class redactedHTTPSAdapter(HTTPAdapter):\n    def __init__(\n        self,\n        verify: bool,\n        ssl_version: str = None,\n        ciphers: str = None,\n        **kwargs",
    "correctAnswer": "httpie/httpie"
  },
  {
    "filename": "face_detection_cli.py",
    "code": "def print_result(filename, location):\n    top, right, bottom, left = location\n    print(\"{},{},{},{},{}\".format(filename, top, right, bottom, left))",
    "correctAnswer": "ageitgey/face_recognition"
  },
  {
    "filename": "base.py",
    "code": "class redactedSQLAlchemy(SQLAlchemy):\n    def apply_driver_hacks(self, app, info, options):\n        options.update(json_serializer=json_dumps)\n        if settings.SQLALCHEMY_ENABLE_POOL_PRE_PING:\n            options.update(pool_pre_ping=True)\n        super(redactedSQLAlchemy, self).apply_driver_hacks(app, info, options)",
    "correctAnswer": "getredash/redash"
  },
  {
    "filename": "encoding.py",
    "code": "def get_stream_enc(stream, default=None):\n    \"\"\"Return the given stream's encoding or a default.",
    "correctAnswer": "ipython/ipython"
  },
  {
    "filename": "cmd_ssh.py",
    "code": "class PubkeyError(Exception):\n    pass",
    "correctAnswer": "warner/magic-wormhole"
  },
  {
    "filename": "frame.py",
    "code": "def get_integration_frame(\n    exclude_integrations: Optional[set] = None,\n) -> Tuple[FrameSummary, str, str]:\n    \"\"\"Return the frame, integration and integration path of the current stack frame.\"\"\"\n    found_frame = None\n    if not exclude_integrations:\n        exclude_integrations = set()",
    "correctAnswer": "home-assistant/core"
  },
  {
    "filename": "shell.py",
    "code": "class Command(redactedCommand):",
    "correctAnswer": "scrapy/scrapy"
  },
  {
    "filename": "humanoid.py",
    "code": "def mass_center(model, sim):\n    mass = np.expand_dims(model.body_mass, 1)\n    xpos = sim.data.xipos\n    return (np.sum(mass * xpos, 0) / np.sum(mass))[0]",
    "correctAnswer": "openai/gym"
  },
  {
    "filename": "cache.py",
    "code": "def memoize(timeout, dynamic_timeout=False):\n    \"\"\"\n    Memoization decorator with support for timeout.",
    "correctAnswer": "locustio/locust"
  },
  {
    "filename": "helpers.py",
    "code": "def requires_feature(feature, any_org=None):\n    \"\"\"\n    Require a feature flag to access an endpoint.",
    "correctAnswer": "getsentry/sentry"
  },
  {
    "filename": "generate_unconditional_samples.py",
    "code": "def sample_model(\n    model_name='124M',\n    seed=None,\n    nsamples=0,\n    batch_size=1,\n    length=None,\n    temperature=1,",
    "correctAnswer": "openai/gpt-2"
  },
  {
    "filename": "tldr.py",
    "code": "class Tldr(GitRepositoryAdapter):",
    "correctAnswer": "chubin/cheat.sh"
  },
  {
    "filename": "parse_query.py",
    "code": "def serialize(parsed_query):\n    return base64.b64encode(\n        zlib.compress(\n            json.dumps(parsed_query).encode(\"utf-8\")),\n        altchars=b\"-_\").decode(\"utf-8\")",
    "correctAnswer": "chubin/wttr.in"
  },
  {
    "filename": "__init__.py",
    "code": "def load_model():\n    start_p = pickle.load(get_module_res(\"finalseg\", PROB_START_P))\n    trans_p = pickle.load(get_module_res(\"finalseg\", PROB_TRANS_P))\n    emit_p = pickle.load(get_module_res(\"finalseg\", PROB_EMIT_P))\n    return start_p, trans_p, emit_p",
    "correctAnswer": "fxsjy/jieba"
  },
  {
    "filename": "factory.py",
    "code": "class FactoryBuild(Command):\n    description = 'Build the factory relation file (for factory.py)'\n    user_options = []",
    "correctAnswer": "kivy/kivy"
  },
  {
    "filename": "utilities.py",
    "code": "def regressor_index(m, name):\n    \"\"\"Given the name of a regressor, return its (column) index in the `beta` matrix.",
    "correctAnswer": "facebook/prophet"
  },
  {
    "filename": "projectdb.py",
    "code": "class ProjectDB(BaseProjectDB):\n    __type__ = 'project'",
    "correctAnswer": "binux/pyspider"
  },
  {
    "filename": "generateschema.py",
    "code": "class Command(BaseCommand):\n    help = \"Generates configured API schema for project.\"",
    "correctAnswer": "encode/django-rest-framework"
  },
  {
    "filename": "logs_starter.py",
    "code": "def patch_lambda():\n    def patch_get_function(backend):\n        get_function_orig = backend.get_function",
    "correctAnswer": "localstack/localstack"
  },
  {
    "filename": "resources.py",
    "code": "class Resources:\n    def __init__(self, resource_name):\n        self._resources = []\n        self.resource_name = resource_name",
    "correctAnswer": "plotly/dash"
  },
  {
    "filename": "formatting.py",
    "code": "def Indent(text, spaces=2):\n  lines = text.split('\\n')\n  return '\\n'.join(\n      ' ' * spaces + line if line else line\n      for line in lines)",
    "correctAnswer": "google/python-fire"
  },
  {
    "filename": "train_net.py",
    "code": "def build_sem_seg_train_aug(cfg):\n    augs = [\n        T.ResizeShortestEdge(\n            cfg.INPUT.MIN_SIZE_TRAIN, cfg.INPUT.MAX_SIZE_TRAIN, cfg.INPUT.MIN_SIZE_TRAIN_SAMPLING\n        )\n    ]\n    if cfg.INPUT.CROP.ENABLED:",
    "correctAnswer": "facebookresearch/detectron2"
  },
  {
    "filename": "build_process.py",
    "code": "class BuildProcess(object):\n    def __init__(self, main, deps_info):\n        self.logger = logger\n        self.main = main\n        self.deps_info = deps_info\n        self.npm_modules = self._concat(self.main, \"node_modules\")\n        self.package_lock = self._concat(self.main, \"package-lock.json\")",
    "correctAnswer": "plotly/dash"
  },
  {
    "filename": "async_status.py",
    "code": "def main():",
    "correctAnswer": "ansible/ansible"
  },
  {
    "filename": "limits.py",
    "code": "def _time_caps(minutes, hours, days):\n    return {\n        'min':   minutes,\n        'hour':  hours,\n        'day':   days,\n        }",
    "correctAnswer": "chubin/cheat.sh"
  },
  {
    "filename": "__init__.py",
    "code": "def setup_module(module):\n    \"\"\"Fixture for the tests to assure globally controllable seeding of RNGs\"\"\"",
    "correctAnswer": "scikit-learn/scikit-learn"
  },
  {
    "filename": "loading.py",
    "code": "def get_path(module: ModuleType) -> str:\n    if getattr(sys, 'frozen', False):\n        # frozen",
    "correctAnswer": "joke2k/faker"
  },
  {
    "filename": "az_cli.py",
    "code": "def match(command):\n    return \"is not in the\" in command.output and \"command group\" in command.output",
    "correctAnswer": "nvbn/thefuck"
  },
  {
    "filename": "serialize.py",
    "code": "def model_to_json(model):\n    \"\"\"Serialize a redacted model to json string.",
    "correctAnswer": "facebook/prophet"
  },
  {
    "filename": "__init__.py",
    "code": "class Provider(InternetProvider):",
    "correctAnswer": "joke2k/faker"
  },
  {
    "filename": "bench_plot_fastkmeans.py",
    "code": "def compute_bench(samples_range, features_range):",
    "correctAnswer": "scikit-learn/scikit-learn"
  },
  {
    "filename": "build.py",
    "code": "def show_compilers():\n    from distutils.ccompiler import show_compilers\n    show_compilers()",
    "correctAnswer": "python/cpython"
  },
  {
    "filename": "encoder.py",
    "code": "def bytes_to_unicode():\n    \"\"\"\n    Returns list of utf-8 byte and a corresponding list of unicode strings.\n    The reversible bpe codes work on unicode strings.\n    This means you need a large # of unicode characters in your vocab if you want to avoid UNKs.\n    When you're at something like a 10B token dataset you end up needing around 5K for decent coverage.\n    This is a signficant percentage of your normal, say, 32K bpe vocab.",
    "correctAnswer": "openai/gpt-2"
  },
  {
    "filename": "calculate_first_visible_message_id.py",
    "code": "class Command(redactedBaseCommand):\n    help = \"\"\"Calculate the value of first visible message ID and store it in cache\"\"\"",
    "correctAnswer": "zulip/zulip"
  },
  {
    "filename": "__init__.py",
    "code": "class Provider(PhoneNumberProvider):\n    # as per https://en.wikipedia.org/wiki/Telephone_numbers_in_Thailand\n    formats = (\n        # landline (9 digits, starts with 02, 03, 04, 05, or 07)\n        \"+66 2### ####\",\n        \"+662 ### ####\",\n        \"+66 (0) 2### ####\",",
    "correctAnswer": "joke2k/faker"
  },
  {
    "filename": "switch.py",
    "code": "class Switch(Widget):\n    '''Switch class. See module documentation for more information.\n    '''\n    active = BooleanProperty(False)\n    '''Indicate whether the switch is active or inactive.",
    "correctAnswer": "kivy/kivy"
  },
  {
    "filename": "densepose_confidence_based.py",
    "code": "class DensePoseConfidenceBasedSampler(DensePoseBaseSampler):\n    \"\"\"\n    Samples DensePose data from DensePose predictions.\n    Samples for each class are drawn using confidence value estimates.\n    \"\"\"",
    "correctAnswer": "facebookresearch/detectron2"
  },
  {
    "filename": "documentation.py",
    "code": "def get_docs_view(\n        title=None, description=None, schema_url=None, urlconf=None,\n        public=True, patterns=None, generator_class=SchemaGenerator,\n        authentication_classes=api_settings.DEFAULT_AUTHENTICATION_CLASSES,\n        permission_classes=api_settings.DEFAULT_PERMISSION_CLASSES,\n        renderer_classes=None):",
    "correctAnswer": "encode/django-rest-framework"
  },
  {
    "filename": "cpplint_wrap.py",
    "code": "def main():\n    FILTERS=('cpplint --verbose=0 --linelength=100 --filter=-legal/copyright,-build/include_order,'\n    '-build/c++11,-build/namespaces,-build/class,-build/include,-build/include_subdir,-readability/inheritance,'\n    '-readability/function,-readability/casting,-readability/namespace,-readability/alt_tokens,'\n    '-readability/braces,-readability/fn_size,-whitespace/comments,-whitespace/braces,-whitespace/empty_loop_body,'\n    '-whitespace/indent,-whitespace/newline,-runtime/explicit,-runtime/arrays,-runtime/int,-runtime/references,'\n    '-runtime/string,-runtime/operator,-runtime/printf').split(' ')",
    "correctAnswer": "isocpp/cppcoreguidelines"
  },
  {
    "filename": "browser.py",
    "code": "def get_chrome_executable() -> typing.Optional[str]:\n    for browser in (\n            \"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\",\n            # https://stackoverflow.com/questions/40674914/google-chrome-path-in-windows-10\n            r\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\",\n            r\"C:\\Program Files (x86)\\Google\\Application\\chrome.exe\",\n            # Linux binary names from Python's webbrowser module.",
    "correctAnswer": "mitmproxy/mitmproxy"
  },
  {
    "filename": "mock.py",
    "code": "class MockFileSystem(target.FileSystem):\n    \"\"\"\n    MockFileSystem inspects/modifies _data to simulate file system operations.\n    \"\"\"\n    _data = None",
    "correctAnswer": "spotify/luigi"
  },
  {
    "filename": "main.py",
    "code": "class Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.conv1 = nn.Conv2d(1, 10, kernel_size=5)\n        self.conv2 = nn.Conv2d(10, 20, kernel_size=5)\n        self.conv2_drop = nn.Dropout2d()\n        self.fc1 = nn.Linear(320, 50)",
    "correctAnswer": "pytorch/examples"
  },
  {
    "filename": "depth_first_search.py",
    "code": "def depth_first_search(graph: dict, start: str) -> set[int]:\n    \"\"\"Depth First Search on Graph\n    :param graph: directed graph in dictionary format\n    :param vertex: starting vertex as a string\n    :returns: the trace of the search\n    >>> G = { \"A\": [\"B\", \"C\", \"D\"], \"B\": [\"A\", \"D\", \"E\"],\n    ... \"C\": [\"A\", \"F\"], \"D\": [\"B\", \"D\"], \"E\": [\"B\", \"F\"],",
    "correctAnswer": "thealgorithms/python"
  },
  {
    "filename": "pytree_utils.py",
    "code": "class Annotation(object):\n  \"\"\"Annotation names associated with pytrees.\"\"\"\n  CHILD_INDENT = 'child_indent'\n  NEWLINES = 'newlines'\n  MUST_SPLIT = 'must_split'\n  SPLIT_PENALTY = 'split_penalty'\n  SUBTYPE = 'subtype'",
    "correctAnswer": "google/yapf"
  },
  {
    "filename": "abstract.py",
    "code": "def _hasattr(C, attr):\n    return any(attr in B.__dict__ for B in C.__mro__)",
    "correctAnswer": "celery/celery"
  },
  {
    "filename": "builtin_trap.py",
    "code": "class __BuiltinUndefined(object): pass\nBuiltinUndefined = __BuiltinUndefined()",
    "correctAnswer": "ipython/ipython"
  },
  {
    "filename": "state.py",
    "code": "class State:",
    "correctAnswer": "faif/python-patterns"
  },
  {
    "filename": "fan.py",
    "code": "def get_capabilities(capabilities: Sequence[str]) -> Optional[Sequence[str]]:\n    \"\"\"Return all capabilities supported if minimum required are present.\"\"\"\n    supported = [Capability.switch, Capability.fan_speed]\n    # Must have switch and fan_speed\n    if all(capability in capabilities for capability in supported):\n        return supported",
    "correctAnswer": "home-assistant/core"
  },
  {
    "filename": "mnist.py",
    "code": "class Loader(object):\n    def __init__(self, path, count):\n        '''\n        初始化加载器\n        path: 数据文件路径\n        count: 文件中的样本个数\n        '''",
    "correctAnswer": "apachecn/ailearning"
  },
  {
    "filename": "diff.py",
    "code": "class DiffLibWrapper(object):\n  \"\"\"Provides a simple interface to the difflib module.",
    "correctAnswer": "google/python-fire"
  },
  {
    "filename": "interact.py",
    "code": "def Embed(variables, verbose=False):\n  \"\"\"Drops into a Python REPL with variables available as local variables.",
    "correctAnswer": "google/python-fire"
  },
  {
    "filename": "plot_pca_vs_fa_model_selection.py",
    "code": "def compute_scores(X):\n    pca = PCA(svd_solver='full')\n    fa = FactorAnalysis()",
    "correctAnswer": "scikit-learn/scikit-learn"
  },
  {
    "filename": "unified.py",
    "code": "def _st(response, st):\n    if st is None:\n        return 'xml' if isinstance(response, XmlResponse) else 'html'\n    return st",
    "correctAnswer": "scrapy/scrapy"
  },
  {
    "filename": "switch.py",
    "code": "class DevoloSwitch(DevoloDeviceEntity, SwitchEntity):\n    \"\"\"Representation of a switch.\"\"\"",
    "correctAnswer": "home-assistant/core"
  },
  {
    "filename": "affine_image.py",
    "code": "def get_image():\n    delta = 0.25\n    x = y = np.arange(-3.0, 3.0, delta)\n    X, Y = np.meshgrid(x, y)\n    Z1 = np.exp(-X**2 - Y**2)\n    Z2 = np.exp(-(X - 1)**2 - (Y - 1)**2)\n    Z = (Z1 - Z2)",
    "correctAnswer": "matplotlib/matplotlib"
  },
  {
    "filename": "imagenet_utils.py",
    "code": "def preprocess_input(x, dim_ordering='default'):\n    if dim_ordering == 'default':\n        dim_ordering = K.image_dim_ordering()\n    assert dim_ordering in {'tf', 'th'}",
    "correctAnswer": "donnemartin/data-science-ipython-notebooks"
  },
  {
    "filename": "sample.py",
    "code": "def top_k_logits(logits, k):\n    if k == 0:\n        # no truncation\n        return logits",
    "correctAnswer": "openai/gpt-2"
  },
  {
    "filename": "wechat_jump.py",
    "code": "def search(img):\n    result = cv2.matchTemplate(img, template, cv2.TM_SQDIFF)\n    min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(result)",
    "correctAnswer": "wangshub/wechat_jump_game"
  },
  {
    "filename": "dependencies.py",
    "code": "class _Wildcard:  # pylint: disable=too-few-public-methods\n    def __init__(self, name):\n        self._name = name",
    "correctAnswer": "plotly/dash"
  },
  {
    "filename": "redirects.py",
    "code": "class R(BaseSupersetView):  # pylint: disable=invalid-name",
    "correctAnswer": "apache/incubator-superset"
  },
  {
    "filename": "interactive_conditional_samples.py",
    "code": "def interact_model(\n    model_name='124M',\n    seed=None,\n    nsamples=1,\n    batch_size=1,\n    length=None,\n    temperature=1,",
    "correctAnswer": "openai/gpt-2"
  },
  {
    "filename": "install.py",
    "code": "def cp(src, dest, dryrun=False):\n    print('copying file: %s -> %s' % (src, dest))\n    if not dryrun:\n        shutil.copy(src, dest)",
    "correctAnswer": "wting/autojump"
  },
  {
    "filename": "__init__.py",
    "code": "def check_compatibility(urllib3_version, chardet_version):\n    urllib3_version = urllib3_version.split('.')\n    assert urllib3_version != ['dev']  # Verify urllib3 isn't installed from git.",
    "correctAnswer": "pypa/pipenv"
  },
  {
    "filename": "reinforce.py",
    "code": "class Policy(nn.Module):\n    def __init__(self):\n        super(Policy, self).__init__()\n        self.affine1 = nn.Linear(4, 128)\n        self.dropout = nn.Dropout(p=0.6)\n        self.affine2 = nn.Linear(128, 2)",
    "correctAnswer": "pytorch/examples"
  },
  {
    "filename": "multipart.py",
    "code": "def encode(head, l):",
    "correctAnswer": "mitmproxy/mitmproxy"
  },
  {
    "filename": "runners.py",
    "code": "class Remote(Runner):\n    \"\"\"\n    Run a shell command over an SSH connection.",
    "correctAnswer": "fabric/fabric"
  },
  {
    "filename": "bluez_bluetooth.py",
    "code": "def __virtual__():\n    \"\"\"\n    Only load the module if bluetooth is installed\n    \"\"\"\n    if HAS_PYBLUEZ:\n        return __virtualname__\n    return (",
    "correctAnswer": "saltstack/salt"
  },
  {
    "filename": "inbound.py",
    "code": "class DuplicateOpenError(Exception):\n    pass",
    "correctAnswer": "warner/magic-wormhole"
  },
  {
    "filename": "password.py",
    "code": "class redactedPassword(object):",
    "correctAnswer": "nicolargo/glances"
  },
  {
    "filename": "digital_ocean_floating_ip.py",
    "code": "class Response(object):",
    "correctAnswer": "trailofbits/algo"
  },
  {
    "filename": "utils.py",
    "code": "class FileProxyMixin:\n    \"\"\"\n    A mixin class used to forward file methods to an underlaying file\n    object.  The internal file object has to be called \"file\"::",
    "correctAnswer": "django/django"
  },
  {
    "filename": "__init__.py",
    "code": "def make(id, num_envs=1, asynchronous=True, wrappers=None, **kwargs):\n    \"\"\"Create a vectorized environment from multiple copies of an environment,\n    from its id",
    "correctAnswer": "openai/gym"
  },
  {
    "filename": "resultdb.py",
    "code": "class ResultDB(SQLiteMixin, SplitTableMixin, BaseResultDB, BaseDB):\n    __tablename__ = 'resultdb'\n    placeholder = '?'",
    "correctAnswer": "binux/pyspider"
  },
  {
    "filename": "kakao.py",
    "code": "def kakao_download(url, output_dir='.', info_only=False,  **kwargs):\n    json_request_url = 'https://videofarm.daum.net/controller/api/closed/v1_2/IntegratedMovieData.json?vid={}'",
    "correctAnswer": "soimort/you-get"
  },
  {
    "filename": "mint_snippets.py",
    "code": "class DefaultCategories(Enum):",
    "correctAnswer": "donnemartin/system-design-primer"
  },
  {
    "filename": "tasks.py",
    "code": "def publish(\n    c,\n    sdist=True,\n    wheel=False,\n    index=None,\n    sign=False,\n    dry_run=False,",
    "correctAnswer": "fabric/fabric"
  },
  {
    "filename": "_callback_context.py",
    "code": "def has_context(func):\n    @functools.wraps(func)\n    def assert_context(*args, **kwargs):\n        if not flask.has_request_context():\n            raise exceptions.MissingCallbackContextException(\n                \"redacted.callback_context.{} is only available from a callback!\".format(\n                    getattr(func, \"__name__\")",
    "correctAnswer": "plotly/dash"
  },
  {
    "filename": "artifactory.py",
    "code": "def downloaded(\n    name, artifact, target_dir=\"/tmp\", target_file=None, use_literal_group_id=False\n):\n    \"\"\"\n    Ensures that the artifact from artifactory exists at given location. If it doesn't exist, then\n    it will be downloaded. If it already exists then the checksum of existing file is checked against checksum\n    in artifactory. If it is different then the step will fail.",
    "correctAnswer": "saltstack/salt"
  },
  {
    "filename": "blog.py",
    "code": "def index():\n    \"\"\"Show all the posts, most recent first.\"\"\"\n    db = get_db()\n    posts = db.execute(\n        \"SELECT p.id, title, body, created, author_id, username\"\n        \" FROM post p JOIN user u ON p.author_id = u.id\"\n        \" ORDER BY created DESC\"",
    "correctAnswer": "pallets/flask"
  },
  {
    "filename": "benchmark.py",
    "code": "def run_test(setup, test, iterations_per_test=5, tests_to_run=10):\n    fastest_execution = min(timeit.Timer(test, setup=setup).repeat(tests_to_run, iterations_per_test))\n    execution_time = fastest_execution / iterations_per_test\n    fps = 1.0 / execution_time\n    return execution_time, fps",
    "correctAnswer": "ageitgey/face_recognition"
  },
  {
    "filename": "wsgi.py",
    "code": "def create_wsgi_request(event_info,\n                        server_name='redacted',\n                        script_name=None,\n                        trailing_slash=True,\n                        binary_support=False,\n                        base_path=None,\n                        context_header_mappings={},",
    "correctAnswer": "miserlou/zappa"
  },
  {
    "filename": "formatting.py",
    "code": "def remove_trailing_string(content, trailing):\n    \"\"\"\n    Strip trailing component `trailing` from `content` if it exists.\n    Used when generating names from view classes.\n    \"\"\"\n    if content.endswith(trailing) and content != trailing:\n        return content[:-len(trailing)]",
    "correctAnswer": "encode/django-rest-framework"
  },
  {
    "filename": "release.py",
    "code": "class Version(str):\n    def matching_groups(self):\n        match = VALID_VERSION_PATTERN.match(self)\n        if not match:\n            return False",
    "correctAnswer": "docker/compose"
  },
  {
    "filename": "glob.py",
    "code": "def glob(pathname, *, recursive=False):\n    \"\"\"Return a list of paths matching a pathname pattern.",
    "correctAnswer": "xx-net/xx-net"
  },
  {
    "filename": "middleware.py",
    "code": "class MiddlewareManager:\n    \"\"\"Base class for implementing middleware managers\"\"\"",
    "correctAnswer": "scrapy/scrapy"
  },
  {
    "filename": "globals.py",
    "code": "def error(text):\n    \"log error `text` and raise a RuntimeError exception\"",
    "correctAnswer": "chubin/wttr.in"
  },
  {
    "filename": "tutorial001.py",
    "code": "class Item(BaseModel):\n    name: str\n    description: Optional[str] = None\n    price: float\n    tax: Optional[float] = None\n    tags: list = []",
    "correctAnswer": "tiangolo/fastapi"
  },
  {
    "filename": "helpers.py",
    "code": "def plot_iris_knn():\n    iris = datasets.load_iris()\n    X = iris.data[:, :2]  # we only take the first two features. We could\n                        # avoid this ugly slicing by using a two-dim dataset\n    y = iris.target",
    "correctAnswer": "donnemartin/data-science-ipython-notebooks"
  },
  {
    "filename": "geo-proxy.py",
    "code": "def load_cache(location_string):\n    try:\n        location_string = location_string.replace('/', '_')\n        cachefile = os.path.join(CACHEDIR, location_string)",
    "correctAnswer": "chubin/wttr.in"
  },
  {
    "filename": "gui-wx.py",
    "code": "class MyFrame(wx.Frame):\n    \"\"\"\n    This is MyFrame.  It just shows a few controls on a wxPanel,\n    and has a simple menu.\n    \"\"\"\n    def __init__(self, parent, title):\n        wx.Frame.__init__(self, parent, -1, title,",
    "correctAnswer": "ipython/ipython"
  },
  {
    "filename": "modes.py",
    "code": "class HttpProxy(layer.Layer):\n    @expect(events.Start)\n    def _handle_event(self, event: events.Event) -> layer.CommandGenerator[None]:\n        child_layer = layer.NextLayer(self.context)\n        self._handle_event = child_layer.handle_event\n        yield from child_layer.handle_event(event)",
    "correctAnswer": "mitmproxy/mitmproxy"
  },
  {
    "filename": "__init__.py",
    "code": "def naughty_strings(filepath=FILEPATH):\n    \"\"\"Get the list of naughty_strings.",
    "correctAnswer": "minimaxir/big-list-of-naughty-strings"
  },
  {
    "filename": "views.py",
    "code": "class View:\n    \"\"\"Alternative way to use view functions.  A subclass has to implement\n    :meth:`dispatch_request` which is called with the view arguments from\n    the URL routing system.  If :attr:`methods` is provided the methods\n    do not have to be passed to the :meth:`~redacted.redacted.add_url_rule`\n    method explicitly::",
    "correctAnswer": "pallets/flask"
  },
  {
    "filename": "project.py",
    "code": "def inside_project():\n    redacted_module = os.environ.get('redacted_SETTINGS_MODULE')\n    if redacted_module is not None:\n        try:\n            import_module(redacted_module)\n        except ImportError as exc:\n            warnings.warn(f\"Cannot import redacted settings module {redacted_module}: {exc}\")",
    "correctAnswer": "scrapy/scrapy"
  },
  {
    "filename": "sagemaker_endpoint.py",
    "code": "class SageMakerEndpointSensor(SageMakerBaseSensor):\n    \"\"\"\n    Asks for the state of the endpoint state until it reaches a terminal state.\n    If it fails the sensor errors, the task fails.",
    "correctAnswer": "apache/airflow"
  },
  {
    "filename": "bench_ufunc_strides.py",
    "code": "class Unary(Benchmark):\n    params = [unary_ufuncs, stride, stride_out, dtype]\n    param_names = ['ufunc', 'stride_in', 'stride_out', 'dtype']\n    timeout = 10",
    "correctAnswer": "numpy/numpy"
  },
  {
    "filename": "resources.py",
    "code": "def open_binary(package: Package, resource: Resource) -> BinaryIO:\n    \"\"\"Return a file-like object opened for binary reading of the resource.\"\"\"\n    resource = _common.normalize_path(resource)\n    package = _common.get_package(package)\n    reader = _common.get_resource_reader(package)\n    if reader is not None:\n        return reader.open_resource(resource)",
    "correctAnswer": "python/cpython"
  },
  {
    "filename": "create.py",
    "code": "class CreateAnnotationLayerCommand(BaseCommand):\n    def __init__(self, user: User, data: Dict[str, Any]):\n        self._actor = user\n        self._properties = data.copy()",
    "correctAnswer": "apache/incubator-superset"
  },
  {
    "filename": "hash_map.py",
    "code": "class Item(object):",
    "correctAnswer": "donnemartin/system-design-primer"
  },
  {
    "filename": "_next_gen.py",
    "code": "def define(\n    maybe_cls=None,\n    *,\n    these=None,\n    repr=None,\n    hash=None,\n    init=None,",
    "correctAnswer": "pypa/pipenv"
  },
  {
    "filename": "infoq.py",
    "code": "class Infoq(VideoExtractor):\n    name = \"InfoQ\"",
    "correctAnswer": "soimort/you-get"
  },
  {
    "filename": "outwin.py",
    "code": "def compile_progs():\n    \"Compile the patterns for matching to file name and line number.\"\n    global file_line_progs\n    file_line_progs = [re.compile(pat, re.IGNORECASE)\n                       for pat in file_line_pats]",
    "correctAnswer": "python/cpython"
  },
  {
    "filename": "_configs.py",
    "code": "def load_redacted_env_vars():\n    return AttributeDict(\n        {\n            var: os.getenv(var, os.getenv(var.lower()))\n            for var in (\n                \"redacted_APP_NAME\",\n                \"redacted_URL_BASE_PATHNAME\",",
    "correctAnswer": "plotly/dash"
  },
  {
    "filename": "concurrency.py",
    "code": "def _worker(queue, cxn, start, num_words, count, expected):\n    tail = num_words - start\n    cmd = \"tail -n {} {} | head -n {}\".format(tail, _words, count)\n    stdout = cxn.run(cmd, hide=True).stdout\n    result = [x.strip() for x in stdout.splitlines()]\n    queue.put((cxn, result, expected))",
    "correctAnswer": "fabric/fabric"
  },
  {
    "filename": "__init__.py",
    "code": "def getTreeWalker(treeType, implementation=None, **kwargs):\n    \"\"\"Get a TreeWalker class for various types of tree with built-in support",
    "correctAnswer": "xx-net/xx-net"
  },
  {
    "filename": "factory.py",
    "code": "class GreekLocalizer:\n    \"\"\"A simple localizer a la gettext\"\"\"",
    "correctAnswer": "faif/python-patterns"
  },
  {
    "filename": "w2v.py",
    "code": "def train_word2vec(sentence_matrix, vocabulary_inv,\n                   num_features=300, min_word_count=1, context=10):\n    \"\"\"\n    Trains, saves, loads Word2Vec model\n    Returns initial weights for embedding layer.",
    "correctAnswer": "donnemartin/data-science-ipython-notebooks"
  },
  {
    "filename": "response.py",
    "code": "def get_base_url(response):\n    \"\"\"Return the base url of the given response, joined with the response url\"\"\"\n    if response not in _baseurl_cache:\n        text = response.text[0:4096]\n        _baseurl_cache[response] = html.get_base_url(text, response.url, response.encoding)\n    return _baseurl_cache[response]",
    "correctAnswer": "scrapy/scrapy"
  },
  {
    "filename": "wrappers.py",
    "code": "class JSONMixin(_JSONMixin):\n    json_module = json",
    "correctAnswer": "pallets/flask"
  },
  {
    "filename": "ASCommandResponse.py",
    "code": "class ASCommandResponse:",
    "correctAnswer": "mitmproxy/mitmproxy"
  },
  {
    "filename": "settings.py",
    "code": "def get_bot_params(model=\"ip\"):",
    "correctAnswer": "wangshub/wechat_jump_game"
  },
  {
    "filename": "executor.py",
    "code": "class FabExecutor(Executor):\n    def expand_calls(self, calls, apply_hosts=True):\n        # Generate new call list with per-host variants & Connections inserted\n        ret = []\n        # TODO: mesh well with Invoke list-type args helper (inv #132)\n        hosts = []\n        host_str = self.core[0].args.hosts.value",
    "correctAnswer": "fabric/fabric"
  },
  {
    "filename": "updateReadme.py",
    "code": "def main():\n    s = Template(\n        \"${description} | [Readme](https://github.com/redacted/\"\n        \"redacted/blob/master/${location}readme.md) | \"\n        \"[link](https://raw.githubusercontent.com/redacted/\"\n        \"redacted/master/${location}redacted) | \"\n        \"${fmtentries} | \"",
    "correctAnswer": "stevenblack/hosts"
  },
  {
    "filename": "tutorial001.py",
    "code": "def get_or_create_task(task_id: str, response: Response):\n    if task_id not in tasks:\n        tasks[task_id] = \"This didn't exist before\"\n        response.status_code = status.HTTP_201_CREATED\n    return tasks[task_id]",
    "correctAnswer": "tiangolo/fastapi"
  },
  {
    "filename": "custom_ops.py",
    "code": "def variable(name, shape, dtype, initializer, trainable):\n  \"\"\"Returns a TF variable with the passed in specifications.\"\"\"\n  var = tf.get_variable(\n      name,\n      shape=shape,\n      dtype=dtype,\n      initializer=initializer,",
    "correctAnswer": "tensorflow/models"
  },
  {
    "filename": "question.py",
    "code": "class Question(UpstreamAdapter):",
    "correctAnswer": "chubin/cheat.sh"
  },
  {
    "filename": "tcpclient.py",
    "code": "class _Connector(object):\n    \"\"\"A stateless implementation of the \"Happy Eyeballs\" algorithm.",
    "correctAnswer": "tornadoweb/tornado"
  },
  {
    "filename": "ai.py",
    "code": "def linear_model_main(_distances, _press_times, target_distance):\n    regr = LinearRegression()\n    regr.fit(_distances, _press_times)\n    predict_press_time = regr.predict(target_distance)\n    result = {}\n    # 截距 b\n    result['intercept'] = regr.intercept_",
    "correctAnswer": "wangshub/wechat_jump_game"
  },
  {
    "filename": "exception.py",
    "code": "class redactedBaseException(Exception):\n    pass",
    "correctAnswer": "sqlmapproject/sqlmap"
  },
  {
    "filename": "redacted_csv.py",
    "code": "class Export(redactedExport):",
    "correctAnswer": "nicolargo/glances"
  },
  {
    "filename": "_py2.py",
    "code": "def open_binary(package, resource):\n    \"\"\"Return a file-like object opened for binary reading of the resource.\"\"\"\n    resource = _common.normalize_path(resource)\n    package = _common.get_package(package)\n    # Using pathlib doesn't work well here due to the lack of 'strict' argument\n    # for pathlib.Path.resolve() prior to Python 3.6.\n    package_path = os.path.dirname(package.__file__)",
    "correctAnswer": "pypa/pipenv"
  },
  {
    "filename": "camera.py",
    "code": "class Camera(Image):\n    '''Camera class. See module documentation for more information.\n    '''",
    "correctAnswer": "kivy/kivy"
  },
  {
    "filename": "hashutil.py",
    "code": "def digest(instr, checksum=\"md5\"):\n    \"\"\"\n    Return a checksum digest for a string",
    "correctAnswer": "saltstack/salt"
  },
  {
    "filename": "rpn_heads.py",
    "code": "def add_generic_rpn_outputs(model, blob_in, dim_in, spatial_scale_in):\n    \"\"\"Add RPN outputs (objectness classification and bounding box regression)\n    to an RPN model. Abstracts away the use of FPN.\n    \"\"\"\n    loss_gradients = None\n    if cfg.FPN.FPN_ON:\n        # Delegate to the FPN module",
    "correctAnswer": "facebookresearch/detectron"
  },
  {
    "filename": "markdown.py",
    "code": "def format_text(text, config=None, highlighter=None):\n    \"\"\"\n    Renders `text` according to markdown rules.\n    Uses `highlighter` for syntax highlighting.\n    Returns a dictionary with \"output\" and \"links\".\n    \"\"\"\n    return _format_section(text, config=config, highlighter=highlighter)",
    "correctAnswer": "chubin/cheat.sh"
  },
  {
    "filename": "pool.py",
    "code": "class ApplyAsyncResult(object):\n    \"\"\"An object that boxes results for calls to\n    :meth:`~redacted.utils.pool.SequentialPool.apply_async`.",
    "correctAnswer": "quantopian/zipline"
  },
  {
    "filename": "dict.py",
    "code": "def mergeargs(argvalue, remove=False):\n\tif not argvalue:\n\t\treturn None\n\tr = {}\n\tfor subval in argvalue:\n\t\tmergedicts(r, dict([subval]), remove=remove)\n\treturn r",
    "correctAnswer": "powerline/powerline"
  },
  {
    "filename": "Identify_Old_Issue_And_PR.py",
    "code": "def is_old_issue(issue):\n    has_assignees = (len(issue[\"assignees\"]) > 0)\n    has_help_wanted_label = False\n    has_internal_label = False\n    labels = issue[\"labels\"]\n    for label in labels:\n        if label[\"name\"] == \"HELP_WANTED\":",
    "correctAnswer": "owasp/cheatsheetseries"
  },
  {
    "filename": "bench_plot_omp_lars.py",
    "code": "def compute_bench(samples_range, features_range):",
    "correctAnswer": "scikit-learn/scikit-learn"
  },
  {
    "filename": "zh-cn.py",
    "code": "def get_image(isbn, image_filename):\n    \"\"\"\n    :type en_isbn: str\n    :rtype: str\n    \"\"\"\n    print(\"get_image(\" + isbn + \",\" + isbn + \")\")\n    response = urlopen(book_url)",
    "correctAnswer": "miloyip/game-programmer"
  },
  {
    "filename": "view.py",
    "code": "def api_helloworld_webhook(\n        request: HttpRequest, user_profile: UserProfile,\n        payload: Dict[str, Iterable[Dict[str, Any]]]=REQ(argument_type='body'),\n) -> HttpResponse:",
    "correctAnswer": "zulip/zulip"
  },
  {
    "filename": "ntlmpool.py",
    "code": "class NTLMConnectionPool(HTTPSConnectionPool):\n    \"\"\"\n    Implements an NTLM authentication version of an urllib3 connection pool\n    \"\"\"",
    "correctAnswer": "pypa/pipenv"
  },
  {
    "filename": "Update_CheatSheets_Index.py",
    "code": "def extract_languages_snippet_provided(cheatsheet):\n    languages = []\n    markers = [\"javascript\", \"java\", \"csharp\", \"c\", \"cpp\", \"html\", \"xml\", \"python\",\n               \"ruby\", \"php\", \"json\", \"sql\", \"bash\", \"shell\", \"coldfusion\", \"perl\",\n               \"vbnet\"]\n    with open(\"../cheatsheets/\" + cheatsheet, encoding=\"utf8\") as cs_file:\n        cs_content = cs_file.read().lower().replace(\" \",\"\")",
    "correctAnswer": "owasp/cheatsheetseries"
  },
  {
    "filename": "nchain.py",
    "code": "class NChainEnv(redacted.Env):\n    \"\"\"n-Chain environment",
    "correctAnswer": "openai/gym"
  },
  {
    "filename": "couchdb.py",
    "code": "class CouchBackend(KeyValueStoreBackend):\n    \"\"\"CouchDB backend.",
    "correctAnswer": "celery/celery"
  },
  {
    "filename": "__init__.py",
    "code": "class Provider(BaseProvider):\n    # Source:\n    # https://en.wikipedia.org/wiki/Thai_identity_card#Identification_number\n    # Thai national identity number has 13 digits, in this format:\n    # 1-2345-67890-12-3\n    # Digit 1: Person category\n    # Digits 2-5: Province and amphoe code of registrar's office (ISO 3166-2)",
    "correctAnswer": "joke2k/faker"
  },
  {
    "filename": "dampedscroll.py",
    "code": "class DampedScrollEffect(ScrollEffect):\n    '''DampedScrollEffect class. See the module documentation for more\n    information.\n    '''",
    "correctAnswer": "kivy/kivy"
  },
  {
    "filename": "makeconf.py",
    "code": "def __virtual__():\n    \"\"\"\n    Only load if the makeconf module is available in __redacted__\n    \"\"\"\n    if \"makeconf.get_var\" in __redacted__:\n        return \"makeconf\"\n    return (False, \"makeconf module could not be loaded\")",
    "correctAnswer": "saltstack/salt"
  },
  {
    "filename": "multigpu_basics.py",
    "code": "def matpow(M, n):\n    if n < 1: #Abstract cases where n < 1\n        return M\n    else:\n        return tf.matmul(M, matpow(M, n-1))",
    "correctAnswer": "donnemartin/data-science-ipython-notebooks"
  },
  {
    "filename": "transfer.py",
    "code": "def _support(*parts):\n    return os.path.join(os.path.dirname(__file__), \"_support\", *parts)",
    "correctAnswer": "fabric/fabric"
  },
  {
    "filename": "bisection.py",
    "code": "def equation(x: float) -> float:\n    \"\"\"\n    >>> equation(5)\n    -15\n    >>> equation(0)\n    10\n    >>> equation(-5)",
    "correctAnswer": "thealgorithms/python"
  },
  {
    "filename": "nanagogo.py",
    "code": "def nanagogo_download(url, output_dir='.', merge=True, info_only=False, **kwargs):\n    if re.match(r'https?://stat.7gogo.jp', url):\n        universal_download(url, output_dir, merge=merge, info_only=info_only)\n        return",
    "correctAnswer": "soimort/you-get"
  },
  {
    "filename": "file_cache.py",
    "code": "def _secure_open_write(filename, fmode):\n    # We only want to write to this file, so open it in write only mode\n    flags = os.O_WRONLY",
    "correctAnswer": "pypa/pipenv"
  },
  {
    "filename": "utils.py",
    "code": "def yesno(prompt, default=None):\n    \"\"\"\n    Prompt the user for a yes or no.",
    "correctAnswer": "docker/compose"
  },
  {
    "filename": "solution42.py",
    "code": "def solution():\n    \"\"\"\n    Finds the amount of triangular words in the words file.",
    "correctAnswer": "thealgorithms/python"
  },
  {
    "filename": "infer_simple.py",
    "code": "def parse_args():\n    parser = argparse.ArgumentParser(description='End-to-end inference')\n    parser.add_argument(\n        '--cfg',\n        dest='cfg',\n        help='cfg model file (/path/to/model_config.yaml)',\n        default=None,",
    "correctAnswer": "facebookresearch/detectron"
  },
  {
    "filename": "mssqldb.py",
    "code": "class MSSqlTarget(redacted.Target):\n    \"\"\"\n    Target for a resource in Microsoft SQL Server.\n    This module is primarily derived from mysqldb.py.  Much of MSSqlTarget,\n    MySqlTarget and PostgresTarget are similar enough to potentially add a\n    RDBMSTarget abstract base class to rdbms.py that these classes could be\n    derived from.",
    "correctAnswer": "spotify/luigi"
  },
  {
    "filename": "setup_logging.py",
    "code": "class BaseLogging:\n    config = get_config()",
    "correctAnswer": "spotify/luigi"
  },
  {
    "filename": "wrappers.py",
    "code": "def cat(tensors: List[torch.Tensor], dim: int = 0):\n    \"\"\"\n    Efficient version of torch.cat that avoids a copy if there is only a single element in a list\n    \"\"\"\n    assert isinstance(tensors, (list, tuple))\n    if len(tensors) == 1:\n        return tensors[0]",
    "correctAnswer": "facebookresearch/detectron2"
  },
  {
    "filename": "blog.py",
    "code": "define(\"port\", default=8888, help=\"run on the given port\", type=int)\ndefine(\"db_host\", default=\"127.0.0.1\", help=\"blog database host\")\ndefine(\"db_port\", default=5432, help=\"blog database port\")\ndefine(\"db_database\", default=\"blog\", help=\"blog database name\")\ndefine(\"db_user\", default=\"blog\", help=\"blog database user\")\ndefine(\"db_password\", default=\"blog\", help=\"blog database password\")",
    "correctAnswer": "tornadoweb/tornado"
  },
  {
    "filename": "progress_stream.py",
    "code": "class StreamOutputError(Exception):\n    pass",
    "correctAnswer": "docker/compose"
  },
  {
    "filename": "dual_ema_talib.py",
    "code": "def initialize(context):\n    context.asset = symbol('AAPL')",
    "correctAnswer": "quantopian/zipline"
  },
  {
    "filename": "__init__.py",
    "code": "class Provider(GeoProvider):",
    "correctAnswer": "joke2k/faker"
  },
  {
    "filename": "unique_bst.py",
    "code": "def num_trees(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    dp = [0] * (n+1)\n    dp[0] = 1",
    "correctAnswer": "keon/algorithms"
  },
  {
    "filename": "cache.py",
    "code": "def _update_answer(answer):\n    def _now_in_tz(timezone):\n        return datetime.datetime.now(pytz.timezone(timezone)).strftime(\"%H:%M:%S%z\")",
    "correctAnswer": "chubin/wttr.in"
  },
  {
    "filename": "prototype.py",
    "code": "class Prototype:",
    "correctAnswer": "faif/python-patterns"
  },
  {
    "filename": "samba.py",
    "code": "class SambaHook(BaseHook):\n    \"\"\"Allows for interaction with an samba server.\"\"\"",
    "correctAnswer": "apache/airflow"
  },
  {
    "filename": "train.py",
    "code": "class Sequence(nn.Module):\n    def __init__(self):\n        super(Sequence, self).__init__()\n        self.lstm1 = nn.LSTMCell(1, 51)\n        self.lstm2 = nn.LSTMCell(51, 51)\n        self.linear = nn.Linear(51, 1)",
    "correctAnswer": "pytorch/examples"
  },
  {
    "filename": "check_digraph_strongly_connected.py",
    "code": "class Graph:\n\tdef __init__(self,v):\n\t\tself.v = v\n\t\tself.graph = defaultdict(list)",
    "correctAnswer": "keon/algorithms"
  },
  {
    "filename": "thrower.py",
    "code": "class ThrowerEnv(mujoco_env.MujocoEnv, utils.EzPickle):\n    def __init__(self):\n        utils.EzPickle.__init__(self)\n        self._ball_hit_ground = False\n        self._ball_hit_location = None\n        mujoco_env.MujocoEnv.__init__(self, 'thrower.xml', 5)",
    "correctAnswer": "openai/gym"
  },
  {
    "filename": "_odfreader.py",
    "code": "class ODFReader(BaseExcelReader):\n    \"\"\"\n    Read tables out of OpenDocument formatted files.",
    "correctAnswer": "pandas-dev/pandas"
  },
  {
    "filename": "reader_small.py",
    "code": "def load_kv_dict(dict_path,\n                 reverse=False,\n                 delimiter=\"\\t\",\n                 key_func=None,\n                 value_func=None):\n    \"\"\"\n    Load key-value dict from file",
    "correctAnswer": "fxsjy/jieba"
  },
  {
    "filename": "tripletap.py",
    "code": "class InputPostprocTripleTap(object):\n    '''\n    InputPostProcTripleTap is a post-processor to check if\n    a touch is a triple tap or not.\n    Triple tap can be configured in the redacted config file::",
    "correctAnswer": "kivy/kivy"
  },
  {
    "filename": "Execution.hs",
    "code": "module GraphQL.Internal.Execution\n  ( VariableValues\n  , ExecutionError(..)\n  , formatError\n  , getOperation\n  , substituteVariables\n  ) where",
    "correctAnswer": "haskell-graphql/graphql-api"
  },
  {
    "filename": "redacted-completion.zsh",
    "code": "__gitex_command_successful () {\n  if (( ${#*:#0} > 0 )); then\n    _message 'not a git repository'\n    return 1\n  fi\n  return 0\n}",
    "correctAnswer": "tj/git-extras"
  },
  {
    "filename": "ip.go",
    "code": "type ipChecker struct {\n\ttrustLoopback    bool\n\ttrustLinkLocal   bool\n\ttrustPrivateNet  bool\n\ttrustExtraRanges []*net.IPNet\n}",
    "correctAnswer": "labstack/echo"
  },
  {
    "filename": "MaterialIcons.js",
    "code": "const iconSet = createIconSet(glyphMap, 'Material Icons', 'MaterialIcons.ttf');",
    "correctAnswer": "oblador/react-native-vector-icons"
  },
  {
    "filename": "FizzPrinter.java",
    "code": "public class FizzPrinter {",
    "correctAnswer": "enterprisequalitycoding/fizzbuzzenterpriseedition"
  },
  {
    "filename": "MonadServerImplementation.hs",
    "code": "module Implementation.MonadServerImplementation\n  ( executorSer\n#ifdef EXPOSE_INTERNAL\n    -- * Internal operations\n  , SerState(..), SerImplementation(..)\n#endif\n  ) where",
    "correctAnswer": "AllureOfTheStars/Allure"
  },
  {
    "filename": "ngx_mail_imap_handler.c",
    "code": "static ngx_int_t ngx_mail_imap_login(ngx_mail_session_t *s,\n    ngx_connection_t *c);\nstatic ngx_int_t ngx_mail_imap_authenticate(ngx_mail_session_t *s,\n    ngx_connection_t *c);\nstatic ngx_int_t ngx_mail_imap_capability(ngx_mail_session_t *s,\n    ngx_connection_t *c);\nstatic ngx_int_t ngx_mail_imap_starttls(ngx_mail_session_t *s,",
    "correctAnswer": "nginx/nginx"
  },
  {
    "filename": "useTabGroupChoice.ts",
    "code": "const TAB_CHOICE_PREFIX = 'redacted.tab.';",
    "correctAnswer": "facebook/docusaurus"
  },
  {
    "filename": "DisplayCommand.js",
    "code": "const COMMAND_TITLE = \"DISPLAY\"",
    "correctAnswer": "infinitered/reactotron"
  },
  {
    "filename": "index.js",
    "code": "const { run } = require('runjs')\nconst chalk = require('chalk')\nconst config = require('../vue.config.js')\nconst rawArgv = process.argv.slice(2)\nconst args = rawArgv.join(' ')",
    "correctAnswer": "panjiachen/vue-admin-template"
  },
  {
    "filename": "ThrowableUtils.java",
    "code": "public class ThrowableUtils {",
    "correctAnswer": "blankj/androidutilcode"
  },
  {
    "filename": "EditorClassApplier.js",
    "code": "let savedSelection = null;\nconst nextTickCbs = [];\nconst nextTickExecCbs = cledit.Utils.debounce(() => {\n  while (nextTickCbs.length) {\n    nextTickCbs.shift()();\n  }\n  if (savedSelection) {",
    "correctAnswer": "benweet/stackedit"
  },
  {
    "filename": "Keys.hs",
    "code": "module redacted.Keys where",
    "correctAnswer": "cdepillabout/termonad"
  },
  {
    "filename": "Text.hs",
    "code": "Copyright 2020 The redacted Authors. All rights reserved.",
    "correctAnswer": "google/codeworld"
  },
  {
    "filename": "link.js",
    "code": "function link(logger, name, localName, config) {\n    if (name) {\n        return linkTo(logger, name, localName, config);\n    } else {\n        return linkSelf(logger, config);\n    }\n}",
    "correctAnswer": "bower/bower"
  },
  {
    "filename": "20161202011139_add_whisper_support_to_topics.rb",
    "code": "class AddWhisperSupportToTopics < ActiveRecord::Migration[4.2]\n  def up\n    remove_column :topics, :bookmark_count\n    remove_column :topics, :off_topic_count\n    remove_column :topics, :illegal_count\n    remove_column :topics, :inappropriate_count\n    remove_column :topics, :notify_user_count",
    "correctAnswer": "discourse/discourse"
  },
  {
    "filename": "miaopai.go",
    "code": "type miaopaiData struct {\n\tData struct {\n\t\tDescription string `json:\"description\"`\n\t\tMetaData    []struct {\n\t\t\tURLs struct {\n\t\t\t\tM string `json:\"m\"`\n\t\t\t} `json:\"play_urls\"`",
    "correctAnswer": "iawia002/annie"
  },
  {
    "filename": "Interface.hs",
    "code": "Copyright 2012-2019 Vidar Holen",
    "correctAnswer": "koalaman/shellcheck"
  },
  {
    "filename": "Client.hs",
    "code": "module Web.redacted.Client\n    ( module Web.redacted.redactedRequest\n    , module Web.redacted.Error\n    , module Web.redacted.Util\n    , handleStream\n    , parseFail\n    , attemptDecode",
    "correctAnswer": "dmjio/stripe"
  },
  {
    "filename": "scalar_leafs.rs",
    "code": "ast::Field,\n    parser::Spanning,\n    validation::{RuleError, ValidatorContext, Visitor},\n    value::ScalarValue,\n};",
    "correctAnswer": "graphql-rust/juniper"
  },
  {
    "filename": "Parallel.hs",
    "code": "module Test.redacted.Parallel (ActionStatus(..), Action(..), runInParallel) where",
    "correctAnswer": "feuerbach/tasty"
  },
  {
    "filename": "Types.hs",
    "code": "module redacted.Backends.LLVM.JIT.Types where",
    "correctAnswer": "metastatedev/juvix"
  },
  {
    "filename": "SectionManager.jest.js",
    "code": "function initSectionManager() {\n  const sectionManager = new SectionManager(SECTION_SIZE);\n  CELLS.forEach((cellMetadatum, index) => {\n    sectionManager.registerCell({\n      cellMetadatum,\n      index,\n    });",
    "correctAnswer": "bvaughn/react-virtualized"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where",
    "correctAnswer": "quchen/articles"
  },
  {
    "filename": "audio-track-menu-item.js",
    "code": "class AudioTrackMenuItem extends MenuItem {",
    "correctAnswer": "videojs/video.js"
  },
  {
    "filename": "parse.go",
    "code": "var jsonErrors []error\nvar jsonLock sync.Mutex\nvar jsonResult *hcl.Object",
    "correctAnswer": "yudai/gotty"
  },
  {
    "filename": "subtree_source.rs",
    "code": "struct TtToken {\n    tt: Token,\n    text: SmolStr,\n}",
    "correctAnswer": "rust-analyzer/rust-analyzer"
  },
  {
    "filename": "init.zsh",
    "code": "if [[ -s '/etc/zsh_command_not_found' ]]; then\n  source '/etc/zsh_command_not_found'\n# Load command-not-found on Arch Linux-based distributions.\nelif [[ -s '/usr/share/doc/pkgfile/command-not-found.zsh' ]]; then\n  source '/usr/share/doc/pkgfile/command-not-found.zsh'\n# Load command-not-found on macOS when Homebrew tap is configured.\n# To avoid performance penalty, we do not use Homebrew's ruby based command",
    "correctAnswer": "sorin-ionescu/prezto"
  },
  {
    "filename": "configLoader.go",
    "code": "var (\n\tValidConfigFileExtensions                    = []string{\"toml\", \"yaml\", \"yml\", \"json\"}\n\tvalidConfigFileExtensionsMap map[string]bool = make(map[string]bool)\n)",
    "correctAnswer": "gohugoio/hugo"
  },
  {
    "filename": "renderAuthorize.ts",
    "code": "let CURRENT: string | string[] = 'NULL';",
    "correctAnswer": "ant-design/ant-design-pro"
  },
  {
    "filename": "codec.rs",
    "code": "pub enum ChatRequest {\n    /// List rooms\n    List,\n    /// Join rooms\n    Join(String),\n    /// Send message\n    Message(String),",
    "correctAnswer": "actix/actix"
  },
  {
    "filename": "Markdone.hs",
    "code": "module Markdone where",
    "correctAnswer": "ennocramer/floskell"
  },
  {
    "filename": "20170928233609_cleanup_invalid_redacted_ids.rb",
    "code": "class CleanupInvalidredactedIds < ActiveRecord::Migration[5.1]\n  def up\n    ids = Person.where(\"redacted_handle LIKE '%@%/%'\").ids\n    return if ids.empty?",
    "correctAnswer": "diaspora/diaspora"
  },
  {
    "filename": "accounts.rs",
    "code": "pub struct EtcPasswdEntry {\n    pub name: String,\n    pub uid:  u32,\n    // Primary GID\n    pub gid:  u32,\n}",
    "correctAnswer": "habitat-sh/habitat"
  },
  {
    "filename": "popoverMigrationUtils.ts",
    "code": "function assertNever(x: never): never {\n    throw new Error(\"Unexpected position: \" + x);\n}",
    "correctAnswer": "palantir/blueprint"
  },
  {
    "filename": "BasicElementImpl.java",
    "code": "public abstract class BasicElementImpl implements ElementImpl {",
    "correctAnswer": "oracle/graal"
  },
  {
    "filename": "Mail.java",
    "code": "public class Mail {\n    /** The action to execute. */\n    private final ThrowingRunnable<? extends Exception> runnable;\n    /**\n     * The priority of the mail. The priority does not determine the order, but helps to hide\n     * upstream mails from downstream processors to avoid live/deadlocks.\n     */",
    "correctAnswer": "apache/flink"
  },
  {
    "filename": "peer.js",
    "code": "const arrayRemove = require('unordered-array-remove')\nconst debug = require('debug')('redacted:peer')\nconst Wire = require('bittorrent-protocol')",
    "correctAnswer": "webtorrent/webtorrent"
  },
  {
    "filename": "mod.rs",
    "code": "mod bell;\nmod colors;\nmod scrolling;",
    "correctAnswer": "alacritty/alacritty"
  },
  {
    "filename": "Grouping.hs",
    "code": "module redacted.Grouping\n    ( Grouping(..)\n    , CurrentGrouping(..)\n    , GroupedTerms\n    , groupedResponses\n    ) where",
    "correctAnswer": "joshuaclayton/unused"
  },
  {
    "filename": "Recents.hs",
    "code": "module Recents where\nimport Control.Monad (filterM)\nimport Data.List (sort)\nimport Settings\nimport Stack (Stack)\nimport System.Environment (lookupEnv)\nimport System.FilePath ((</>), splitFileName, takeExtension, dropExtension, splitPath, joinPath)",
    "correctAnswer": "Yvee1/hascard"
  },
  {
    "filename": "index.js",
    "code": "const utils = require('./utils');",
    "correctAnswer": "diygod/rsshub"
  },
  {
    "filename": "ark-desktop-wallet.rb",
    "code": "cask \"ark-desktop-wallet\" do\n  version \"2.9.4\"\n  sha256 \"4923e450f249a5e8166485d069e108ab9c6b39b1cae51c6625adf84c172c0af7\"",
    "correctAnswer": "homebrew/homebrew-cask"
  },
  {
    "filename": "lib.rs",
    "code": "pub use http;\n#[cfg(any(\n    feature = \"http1\",\n    feature = \"http2\",\n    all(feature = \"client\", feature = \"tcp\")\n))]\n#[macro_use]",
    "correctAnswer": "hyperium/hyper"
  },
  {
    "filename": "SVRadialGradientLayer.m",
    "code": "@implementation SVRadialGradientLayer",
    "correctAnswer": "svprogresshud/svprogresshud"
  },
  {
    "filename": "names.c",
    "code": "static void\t name_time_callback(int, short, void *);\nstatic int\t name_time_expired(struct window *, struct timeval *);",
    "correctAnswer": "tmux/tmux"
  },
  {
    "filename": "scrolloverflow.min.js",
    "code": "function(l,c){l.fp_scrolloverflow=function(){l.IScroll||(l.IScroll=module.exports);var s=\"fp-scrollable\",n=\".\"+s,t=\".active\",d=\".fp-section\",e=d+t,o=\".fp-slide\",u=\".fp-tableCell\";function r(){var p=this;function s(){fp_utils.hasClass(c.body,\"fp-responsive\")?i(e):i(t)}function t(t){if(!fp_utils.hasClass(t,\"fp-noscroll\")){fp_utils.css(t,{overflow:\"hidden\"});var i,s,e,o=p.options.scrollOverflowHandler,n=o.wrapContent(),r=fp_utils.closest(t,d),h=o.scrollable(t),a=(s=r,null!=(e=fp_utils.closest(s,d))?parseInt(getComputedStyle(e)[\"padding-bottom\"])+parseInt(getComputedStyle(e)[\"padding-top\"]):0);null!=h?i=o.scrollHeight(t):(i=t.scrollHeight,p.options.verticalCentered&&(i=f(u,t)[0].scrollHeight));var l=fp_utils.getWindowHeight(),c=l-a;l<i+a?null!=h?o.update(t,c):(p.options.verticalCentered?(fp_utils.wrapInner(f(u,t)[0],n.scroller),fp_utils.wrapInner(f(u,t)[0],n.scrollable)):(fp_utils.wrapInner(t,n.scroller),fp_utils.wrapInner(t,n.scrollable)),o.create(t,c,p.iscrollOptions)):o.remove(t),fp_utils.css(t,{overflow:\"\"})}}function i(s){f(d).forEach(function(t){var i=f(o,t);i.length?i.forEach(function(t){s(t)}):s(t)})}function e(t){var i=p.options.scrollOverflowHandler;fp_utils.hasClass(fp_utils.closest(t,d),\"fp-auto-height-responsive\")&&i.remove(t)}p.options=null,p.init=function(t,i){return p.options=t,p.iscrollOptions=i,\"complete\"===c.readyState&&(s(),fullpage_api.shared.afterRenderActions()),l.addEventListener(\"load\",function(){s(),fullpage_api.shared.afterRenderActions()}),p},p.createScrollBarForAll=s,p.createScrollBar=t}IScroll.prototype.wheelOn=function(){this.wrapper.addEventListener(\"wheel\",this),this.wrapper.addEventListener(\"mousewheel\",this),this.wrapper.addEventListener(\"DOMMouseScroll\",this)},IScroll.prototype.wheelOff=function(){this.wrapper.removeEventListener(\"wheel\",this),this.wrapper.removeEventListener(\"mousewheel\",this),this.wrapper.removeEventListener(\"DOMMouseScroll\",this)};var f=null,h=null,a={refreshId:null,iScrollInstances:[],lastScrollY:null,hasBeenInit:!1,iscrollOptions:{scrollbars:!0,mouseWheel:!0,hideScrollbars:!1,fadeScrollbars:!1,disableMouse:!0,interactiveScrollbars:!0},init:function(t){f=fp_utils.$,h=t;var i=\"ontouchstart\"in l||0<navigator.msMaxTouchPoints||navigator.maxTouchPoints;return a.iscrollOptions.click=i,a.hasBeenInit=!0,a.iscrollOptions=fp_utils.deepExtend(a.iscrollOptions,t.scrollOverflowOptions),(new r).init(t,a.iscrollOptions)},toggleWheel:function(s){f(n,f(e)[0]).forEach(function(t){var i=t.fp_iscrollInstance;null!=i&&(s?i.wheelOn():i.wheelOff())})},setIscroll:function(t,i){if(a.hasBeenInit&&t){var s=fp_utils.closest(t,n)||f(n,t)&&f(n,t)[0],e=i?\"enable\":\"disable\";s&&s.fp_iscrollInstance[e]()}},onLeave:function(){a.toggleWheel(!1)},beforeLeave:function(){a.onLeave()},afterLoad:function(){a.toggleWheel(!0)},create:function(s,e,o){f(n,s).forEach(function(t){fp_utils.css(t,{height:e+\"px\"});var i=t.fp_iscrollInstance;null!=i&&a.iScrollInstances.forEach(function(t){t.destroy()}),i=new IScroll(t,o),a.iScrollInstances.push(i),fp_utils.hasClass(fp_utils.closest(s,d),\"active\")||i.wheelOff(),t.fp_iscrollInstance=i})},isScrolled:function(t,i){var s=i.fp_iscrollInstance;if(!s)return!0;if(\"top\"===t)return 0<=s.y&&!fp_utils.getScrollTop(i);if(\"bottom\"===t){var e=a.lastScrollY===s.y;return a.lastScrollY=s.y,(e?1:0)+(0-s.y)+fp_utils.getScrollTop(i)+i.offsetHeight>=i.scrollHeight}},scrollable:function(t){return f(\".fp-slides\",t).length?f(n,f(\".fp-slide.active\",t)[0])[0]:f(n,t)[0]},scrollHeight:function(t){return f(\".fp-scroller\",f(n,t)[0])[0].scrollHeight},remove:function(t){if(null!=t){var i=f(n,t)[0];if(null!=i){var s=i.fp_iscrollInstance;null!=s&&s.destroy(),i.fp_iscrollInstance=null,fp_utils.unwrap(f(\".fp-scroller\",t)[0]),fp_utils.unwrap(f(n,t)[0])}}},update:function(t,i){clearTimeout(a.refreshId),a.refreshId=setTimeout(function(){a.iScrollInstances.forEach(function(t){t.refresh(),fullpage_api.silentMoveTo(fp_utils.index(f(e)[0])+1)})},150),fp_utils.css(f(n,t)[0],{height:i+\"px\"}),h.verticalCentered&&fp_utils.css(f(n,t)[0].parentNode,{height:i+\"px\"})},wrapContent:function(){var t=c.createElement(\"div\");t.className=s;var i=c.createElement(\"div\");return i.className=\"fp-scroller\",{scrollable:t,scroller:i}}};return{iscrollHandler:a}}()}(window,document);\n//# sourceMappingURL=scrolloverflow.min.js.map",
    "correctAnswer": "alvarotrigo/fullpage.js"
  },
  {
    "filename": "Text.hs",
    "code": "Module                  : redacted.Text\nCopyright               : (c) 2017-2020 redacted\nSPDX-License-Identifier : MPL-2.0\nMaintainer              : redacted <xrom.xkov@gmail.com>\nStability               : Stable\nPortability             : Portable",
    "correctAnswer": "kowainik/summoner"
  },
  {
    "filename": "MemoryFile_Android.cpp",
    "code": "using namespace std;",
    "correctAnswer": "tencent/mmkv"
  },
  {
    "filename": "YamlLinter.php",
    "code": "class YamlLinter\n{\n    public static function lint()\n    {\n        $errors = static::lintConfig();\n        $errors = $errors + static::lintPages();\n        $errors = $errors + static::lintBlueprints();",
    "correctAnswer": "getgrav/grav"
  },
  {
    "filename": "timing-trace-saver.js",
    "code": "function generateTraceEvents(entries, threadId = 0) {\n  if (!Array.isArray(entries)) return [];",
    "correctAnswer": "googlechrome/lighthouse"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where\n\nimport           Control.Monad.Writer\nimport qualified Data.Aeson as Aeson\nimport qualified Data.Aeson.Encode.Pretty as Aeson\nimport qualified Data.Aeson.Parser as Aeson\nimport qualified Data.ByteString.Lazy as L\nimport qualified Data.ByteString.Lazy.Char8 as L8\nimport           Data.Conduit ( ($=), ($$))\nimport           Data.Conduit.Attoparsec\nimport qualified Data.Conduit.Binary as CB\nimport qualified Data.Conduit.List as CL\nimport qualified Data.Map.Strict as M\nimport qualified Data.Text as T\nimport qualified Data.Text.IO as T\nimport qualified Data.Vector as V\nimport           redacted.Functions\nimport           redacted.Inferer\nimport           redacted.Interpreter\nimport           redacted.Parser\nimport           redacted.Printer\nimport           redacted.Serializer\nimport           redacted.Types\nimport           Options.Applicative.Simple\nimport           System.IO\n\nmain :: IO ()\nmain = do\n  do hSetBuffering stdout LineBuffering\n     hSetBuffering stdin LineBuffering\n     ((inp, file, inarray, aslines, browse, markdown, pretty), ()) <-\n       simpleOptions\n         \"0.0.0\"\n         \"redacted - JSON Lambda calculus\"\n         \"Command-line language for querying and outputting JSON.\"\n         ((,,,,,,) <$>\n          strArgument\n            (metavar \"CODE\" <>\n             help \"redacted code; supports completion of function names\" <>\n             completeWith (map (\\(Variable v) -> T.unpack v) (M.keys context))) <*>\n          optional (strArgument (metavar \"FILE\")) <*>\n          flag\n            False\n            True\n            (short 'a' <> long \"array\" <>\n             help \"Read each line of input as a single array\") <*>\n          flag\n            False\n            True\n            (short 'l' <> long \"lines\" <>\n             help\n               \"Output each element of arrays on a newline suitable for UNIX piping\") <*>\n          flag\n            False\n            True\n            (long \"browse\" <> help \"Prints out all available functions\") <*>\n          flag\n            False\n            True\n            (long \"browse-markdown\" <>\n             help \"Prints out all available functions, in markdown format\") <*>\n          flag\n            False\n            True\n            (short 'p' <> long \"pretty\" <>\n             help \"Outputs JSON in a human-friendly format\"))\n         empty\n     let block xs =\n           if markdown\n             then \"```haskell\\n\" <> xs <> \"\\n```\"\n             else xs\n     if browse || markdown\n       then mapM_\n              (\\(groupname, defs) ->\n                 T.putStrLn\n                   (((if markdown\n                        then \"## \"\n                        else \"\") <>\n                     groupname) <>\n                    \"\\n\\n\" <>\n                    T.unlines\n                      (map\n                         (\\def ->\n                            (let Variable v = definitionName def\n                             in block\n                                  (v <> \" :: \" <>\n                                   prettyType (definitionType def)) <>\n                                \"\\n\\n\" <>\n                                (if not markdown\n                                   then \"  \"\n                                   else \"\") <>\n                                definitionDoc def <>\n                                \"\\n\"))\n                         defs)))\n              functions\n       else case parseText \"\" (T.pack inp) of\n              Left err -> error (show err)\n              Right expr0 -> do\n                case file of\n                  Just fp -> do\n                    bytes <- L.readFile fp\n                    case Aeson.decode bytes of\n                      Nothing -> hPutStr stderr \"invalid input JSON\"\n                      Just j -> handleJson pretty expr0 aslines j\n                  Nothing -> process pretty expr0 inarray aslines\n  where\n    process pretty expr0 inarray aslines =\n      CB.sourceHandle stdin $= CB.lines $= conduitParserEither Aeson.value $=\n      (if inarray\n         then do\n           es <-\n             CL.mapM (either (error . errorMessage) (return . snd)) $=\n             CL.consume\n           liftIO\n             (handleJson pretty expr0 aslines (Aeson.Array (V.fromList es)))\n         else CL.mapM_\n                (either\n                   (hPutStrLn stderr . errorMessage)\n                   (handleJson pretty expr0 aslines . snd))) $$\n      CL.sinkNull\n\n-- | Handle a JSON input, printing out one to many JSON values.\nhandleJson :: Bool -> Expression -> Bool -> Aeson.Value -> IO ()\nhandleJson pretty expr0 aslines j =\n  let expr = ApplicationExpression expr0 (valueToExpression j)\n  in case infer context expr (map TypeVariable [1 ..]) of\n       !_ ->\n         case eval\n                (foldl\n                   (\\e (v, f) -> subst v f e)\n                   (desugar expr)\n                   (M.toList scope)) of\n           v ->\n             if aslines\n               then mapM_\n                      L8.putStrLn\n                      (map Aeson.encode (V.toList (asArray (coreToValue v))))\n               else L8.putStrLn (encode' (coreToValue v))\n             where asArray =\n                     \\case\n                       Aeson.Array xs -> xs\n                       x -> V.singleton x\n                   encode' =\n                     if pretty\n                       then Aeson.encodePretty\n                       else Aeson.encode",
    "correctAnswer": "chrisdone/jl"
  },
  {
    "filename": "AppDelegate.m",
    "code": "@interface AppDelegate ()",
    "correctAnswer": "vicc/chameleon"
  },
  {
    "filename": "AppDelegate.m",
    "code": "@interface AppDelegate ()",
    "correctAnswer": "vicc/chameleon"
  },
  {
    "filename": "Interceptor.java",
    "code": "public @interface Interceptor {\n    /**\n     * The priority of interceptor, redacted will be excute them follow the priority.\n     */\n    int priority();\n\n    /**\n     * The name of interceptor, may be used to generate javadoc.\n     */\n    String name() default \"Default\";\n}",
    "correctAnswer": "alibaba/arouter"
  },
  {
    "filename": "Interceptor.java",
    "code": "public @interface Interceptor {\n    /**\n     * The priority of interceptor, redacted will be excute them follow the priority.\n     */\n    int priority();\n\n    /**\n     * The name of interceptor, may be used to generate javadoc.\n     */\n    String name() default \"Default\";\n}",
    "correctAnswer": "alibaba/arouter"
  },
  {
    "filename": "Interceptor.java",
    "code": "public @interface Interceptor {\n    /**\n     * The priority of interceptor, redacted will be excute them follow the priority.\n     */\n    int priority();\n\n    /**\n     * The name of interceptor, may be used to generate javadoc.\n     */\n    String name() default \"Default\";\n}",
    "correctAnswer": "alibaba/arouter"
  },
  {
    "filename": "PostgreSQLComQueryPacket.java",
    "code": "public final class PostgreSQLComQueryPacket extends PostgreSQLCommandPacket {\n    \n    private final String sql;",
    "correctAnswer": "apache/shardingsphere"
  },
  {
    "filename": "PostgreSQLComQueryPacket.java",
    "code": "public final class PostgreSQLComQueryPacket extends PostgreSQLCommandPacket {\n    \n    private final String sql;",
    "correctAnswer": "apache/shardingsphere"
  },
  {
    "filename": "FirebaseTest.js",
    "code": "const XLSX = require('xlsx');\nconst assert = require('assert');\nconst Firebase = require('firebase-admin');\n\nconst config = {\n\tcredential: {\n\t\tgetAccessToken: () => ({\n\t\t\texpires_in: 0,\n\t\t\taccess_token: '',\n\t\t}),\n\t},\n\tdatabaseURL: 'ws://localhost:5555'\n};\n\n/* make new workbook object from CSV */\nconst wb = XLSX.read('a,b,c\\n1,2,3', {type:\"binary\", raw:true});\n\nlet P = Promise.resolve(\"redacted\");\n\n/* Connect to Firebase server and initialize collection */\nP = P.then(async () => {\n\tFirebase.initializeApp(config);\n\tconst database = Firebase.database();\n\tawait database.ref('foo').set(null);\n\treturn [database];\n});\n\n/* Insert entire workbook object into `foo` ref */\nP = P.then(async ([database]) => {\n\tawait database.ref('foo').set(wb);\n\treturn [database];\n});\n\n/* Change cell A1 of Sheet1 to \"J\" and change A2 to 5 */\nP = P.then(async ([database]) => {\n\tdatabase.ref('foo').update({\n\t\t\"Sheets/Sheet1/A1\": {\"t\": \"s\", \"v\": \"J\"},\n\t\t\"Sheets/Sheet1/A2\": {\"t\": \"n\", \"v\": 5},\n\t});\n\treturn [database];\n});\n\n/* Write to file */\nP = P.then(async ([database]) => {\n\tconst val = await database.ref('foo').once('value');\n\tconst wb = await val.val();\n\tXLSX.writeFile(wb, \"firebase.xlsx\");\n\tconst ws = XLSX.readFile(\"firebase.xlsx\").Sheets.Sheet1;\n\tconst csv = XLSX.utils.sheet_to_csv(ws);\n\tassert.equal(csv, \"J,b,c\\n5,2,3\\n\");\n\tconsole.log(csv);\n\treturn [database];\n});\n\n/* Close connection */\nP = P.then(async ([database]) => { database.app.delete(); });",
    "correctAnswer": "sheetjs/sheetjs"
  },
  {
    "filename": "builtin-models.js",
    "code": "const assert = require('assert');\n\nmodule.exports = function(registry) {\n  // NOTE(bajtos) we must use static require() due to browserify limitations\n\n  registry.KeyValueModel = createModel(\n    require('../common/models/key-value-model.json'),\n    require('../common/models/key-value-model.js'),\n  );\n\n  registry.Email = createModel(\n    require('../common/models/email.json'),\n    require('../common/models/email.js'),\n  );\n\n  registry.Application = createModel(\n    require('../common/models/application.json'),\n    require('../common/models/application.js'),\n  );\n\n  registry.AccessToken = createModel(\n    require('../common/models/access-token.json'),\n    require('../common/models/access-token.js'),\n  );\n\n  registry.User = createModel(\n    require('../common/models/user.json'),\n    require('../common/models/user.js'),\n  );\n\n  registry.RoleMapping = createModel(\n    require('../common/models/role-mapping.json'),\n    require('../common/models/role-mapping.js'),\n  );\n\n  registry.Role = createModel(\n    require('../common/models/role.json'),\n    require('../common/models/role.js'),\n  );\n\n  registry.ACL = createModel(\n    require('../common/models/acl.json'),\n    require('../common/models/acl.js'),\n  );\n\n  registry.Scope = createModel(\n    require('../common/models/scope.json'),\n    require('../common/models/scope.js'),\n  );\n\n  registry.Change = createModel(\n    require('../common/models/change.json'),\n    require('../common/models/change.js'),\n  );\n\n  registry.Checkpoint = createModel(\n    require('../common/models/checkpoint.json'),\n    require('../common/models/checkpoint.js'),\n  );\n\n  function createModel(definitionJson, customizeFn) {\n    // Clone the JSON definition to allow applications\n    // to modify model settings while not affecting\n    // settings of new models created in the local registry\n    // of another app.\n    // This is needed because require() always returns the same\n    // object instance it loaded during the first call.\n    definitionJson = cloneDeepJson(definitionJson);\n\n    const Model = registry.createModel(definitionJson);\n    customizeFn(Model);\n    return Model;\n  }\n};\n\n// Because we are cloning objects created by JSON.parse,\n// the cloning algorithm can stay much simpler than a general-purpose\n// \"cloneDeep\" e.g. from lodash.\nfunction cloneDeepJson(obj) {\n  const result = Array.isArray(obj) ? [] : {};\n  assert.equal(Object.getPrototypeOf(result), Object.getPrototypeOf(obj));\n  for (const key in obj) {\n    const value = obj[key];\n    if (typeof value === 'object') {\n      result[key] = cloneDeepJson(value);\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n}",
    "correctAnswer": "strongloop/loopback"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where\n\n-- This is a small executable that will pretty-print anything from stdin.\n-- It can be installed to `~/.local/bin` if you enable the flag `buildexe` like so:\n--\n-- @\n--   $ stack install redacted-2.0.1.1 --flag redacted:buildexe\n-- @\n--\n-- When you run it, you can paste something you want formatted on stdin, then\n-- press @Ctrl-D@.  It will print the formatted version on stdout:\n--\n-- @\n--   $ redacted\n--   [(Just 3, Just 4)]\n--\n--   ^D\n--\n--   [\n--       ( Just 3\n--       , Just 4\n--       )\n--   ]\n-- @",
    "correctAnswer": "cdepillabout/pretty-simple"
  },
  {
    "filename": "cdepillabout/pretty-simple",
    "code": "module Main where\n\n-- This is a small executable that will pretty-print anything from stdin.\n-- It can be installed to `~/.local/bin` if you enable the flag `buildexe` like so:\n--\n-- @\n--   $ stack install redacted-2.0.1.1 --flag redacted:buildexe\n-- @\n--\n-- When you run it, you can paste something you want formatted on stdin, then\n-- press @Ctrl-D@.  It will print the formatted version on stdout:\n--\n-- @\n--   $ redacted\n--   [(Just 3, Just 4)]\n--\n--   ^D\n--\n--   [\n--       ( Just 3\n--       , Just 4\n--       )\n--   ]\n-- @",
    "correctAnswer": "cdepillabout/pretty-simple"
  },
  {
    "filename": "hud.js",
    "code": "let findMode = null;\n\n// Chrome creates a unique port for each MessageChannel, so there's a race condition between JavaScript\n// messages of redacted and browser messages during style recomputation. This duration was determined\n// empirically. See https://github.com/redacted/redacted/pull/3277#discussion_r283080348\nconst TIME_TO_WAIT_FOR_IPC_MESSAGES = 17;\n\n// Set the input element's text, and move the cursor to the end.\nconst setTextInInputElement = function(inputElement, text) {\n  inputElement.textContent = text;\n  // Move the cursor to the end.  Based on one of the solutions here:\n  // http://stackoverflow.com/questions/1125292/how-to-move-cursor-to-end-of-contenteditable-entity\n  const range = document.createRange();\n  range.selectNodeContents(inputElement);\n  range.collapse(false);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n};\n\n// Manually inject custom user styles.\ndocument.addEventListener(\"DOMContentLoaded\", () => DomUtils.injectUserCss());\n\nconst onKeyEvent = function(event) {\n  // Handle <Enter> on \"keypress\", and other events on \"keydown\"; this avoids interence with CJK translation\n  // (see #2915 and #2934).\n  let rawQuery;\n  if ((event.type === \"keypress\") && (event.key !== \"Enter\"))\n    return null;\n  if ((event.type === \"keydown\") && (event.key === \"Enter\"))\n    return null;\n\n  const inputElement = document.getElementById(\"hud-find-input\");\n  if (inputElement == null) // Don't do anything if we're not in find mode.\n    return;\n\n  if ((KeyboardUtils.isBackspace(event) && (inputElement.textContent.length === 0)) ||\n     (event.key === \"Enter\") || KeyboardUtils.isEscape(event)) {\n\n    inputElement.blur();\n    UIComponentServer.postMessage({\n      name: \"hideFindMode\",\n      exitEventIsEnter: event.key === \"Enter\",\n      exitEventIsEscape: KeyboardUtils.isEscape(event)\n    });\n  } else if (event.key === \"ArrowUp\") {\n    if (rawQuery = FindModeHistory.getQuery(findMode.historyIndex + 1)) {\n      findMode.historyIndex += 1;\n      if (findMode.historyIndex === 0) {\n        findMode.partialQuery = findMode.rawQuery;\n      }\n      setTextInInputElement(inputElement, rawQuery);\n      findMode.executeQuery();\n    }\n  } else if (event.key === \"ArrowDown\") {\n    findMode.historyIndex = Math.max(-1, findMode.historyIndex - 1);\n    rawQuery = 0 <= findMode.historyIndex ? FindModeHistory.getQuery(findMode.historyIndex) : findMode.partialQuery;\n    setTextInInputElement(inputElement, rawQuery);\n    findMode.executeQuery();\n  } else {\n    return;\n  }\n\n  DomUtils.suppressEvent(event);\n  return false;\n};\n\ndocument.addEventListener(\"keydown\", onKeyEvent);\ndocument.addEventListener(\"keypress\", onKeyEvent);\n\nconst handlers = {\n  show(data) {\n    document.getElementById(\"hud\").innerText = data.text;\n    document.getElementById(\"hud\").classList.add(\"redactedUIComponentVisible\");\n    document.getElementById(\"hud\").classList.remove(\"redactedUIComponentHidden\");\n    document.getElementById(\"hud\").classList.remove(\"hud-find\");\n  },\n  hidden() {\n    // We get a flicker when the HUD later becomes visible again (with new text) unless we reset its contents\n    // here.\n    document.getElementById(\"hud\").innerText = \"\";\n    document.getElementById(\"hud\").classList.add(\"redactedUIComponentHidden\");\n    document.getElementById(\"hud\").classList.remove(\"redactedUIComponentVisible\");\n  },\n\n  showFindMode(data) {\n    let executeQuery;\n    const hud = document.getElementById(\"hud\");\n    hud.classList.add(\"hud-find\");\n\n    const inputElement = document.createElement(\"span\");\n    try { // NOTE(mrmr1993): Chrome supports non-standard \"plaintext-only\", which is what we *really* want.\n      inputElement.contentEditable = \"plaintext-only\";\n    } catch (error) { // Fallback to standard-compliant version.\n      inputElement.contentEditable = \"true\";\n    }\n    inputElement.id = \"hud-find-input\";\n    hud.appendChild(inputElement);\n\n    inputElement.addEventListener(\"input\", (executeQuery = function(event) {\n      // On Chrome when IME is on, the order of events is:\n      //   keydown, input.isComposing=true, keydown, input.true, ..., keydown, input.true, compositionend;\n      // while on Firefox, the order is: keydown, input.true, ..., input.true, keydown, compositionend, input.false.\n      // Therefore, check event.isComposing here, to avoid window focus changes during typing with IME,\n      // since such changes will prevent normal typing on Firefox (see #3480)\n      if (Utils.isFirefox() && event.isComposing)\n        return;\n      // Replace \\u00A0 (&nbsp;) with a normal space.\n      findMode.rawQuery = inputElement.textContent.replace(\"\\u00A0\", \" \");\n      UIComponentServer.postMessage({name: \"search\", query: findMode.rawQuery});\n    }));\n\n    const countElement = document.createElement(\"span\");\n    countElement.id = \"hud-match-count\";\n    countElement.style.float = \"right\";\n    hud.appendChild(countElement);\n    Utils.setTimeout(TIME_TO_WAIT_FOR_IPC_MESSAGES, function() {\n      // On Firefox, the page must first be focused before the HUD input element can be focused. #3460.\n      if (Utils.isFirefox())\n        window.focus();\n      inputElement.focus();\n    });\n\n    findMode = {\n      historyIndex: -1,\n      partialQuery: \"\",\n      rawQuery: \"\",\n      executeQuery\n    };\n  },\n\n  updateMatchesCount({matchCount, showMatchText}) {\n    const countElement = document.getElementById(\"hud-match-count\");\n    if (countElement == null) // Don't do anything if we're not in find mode.\n      return;\n\n    const countText = matchCount > 0 ?\n      ` (${matchCount} Match${matchCount === 1 ? \"\" : \"es\"})` : \" (No matches)\";\n    countElement.textContent = showMatchText ? countText : \"\";\n  },\n\n  copyToClipboard(data) {\n    Utils.setTimeout(TIME_TO_WAIT_FOR_IPC_MESSAGES, function() {\n      const focusedElement = document.activeElement;\n      Clipboard.copy(data);\n      if (focusedElement != null)\n        focusedElement.focus();\n      window.parent.focus();\n      UIComponentServer.postMessage({name: \"unfocusIfFocused\"});\n    });\n  },\n\n  pasteFromClipboard() {\n    Utils.setTimeout(TIME_TO_WAIT_FOR_IPC_MESSAGES, function() {\n      const focusedElement = document.activeElement;\n      const data = Clipboard.paste();\n      if (focusedElement != null)\n        focusedElement.focus();\n      window.parent.focus();\n      UIComponentServer.postMessage({name: \"pasteResponse\", data});\n    });\n  },\n\n  settings({ isFirefox }) {\n     return Utils.isFirefox = () => isFirefox;\n   }\n};\n\nUIComponentServer.registerHandler(function({data}) {\n  const handler = handlers[data.name || data];\n  if (handler)\n    return handler(data);\n});\n\nFindModeHistory.init();",
    "correctAnswer": "philc/vimium"
  },
  {
    "filename": "Main.hs",
    "code": "module Main where\n\nimport Cassandra.Schema\nimport Control.Exception (finally)\nimport Imports\nimport Options.Applicative\nimport qualified System.Logger.Extended as Log\nimport qualified V20\nimport qualified V21\nimport qualified V22\nimport qualified V23\nimport qualified V24\nimport qualified V25\nimport qualified V26\nimport qualified V27\nimport qualified V28",
    "correctAnswer": "wireapp/wire-server"
  },
  {
    "filename": "index.html",
    "code": "<!DOCTYPE html>",
    "correctAnswer": "teamstuq/skill-map"
  }
]